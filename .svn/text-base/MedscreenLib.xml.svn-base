<?xml version="1.0"?>
<doc>
<assembly>
<name>
MedscreenLib
</name>
</assembly>
<members>
<member name="M:MedscreenLib.BackgroundReport.CreateBackgroundReport">
 -----------------------------------------------------------------------------
 <summary>
 Create a new background report
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	18/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.BackgroundReport.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create new Background Report Instance
 </summary>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	18/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.BackgroundReport.OutPutMethod">
 -----------------------------------------------------------------------------
 <summary>
 Method by which report should be output
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	20/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.BackgroundReport.Message">
 -----------------------------------------------------------------------------
 <summary>
 error or return message
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	20/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.BackgroundReport.Log">
 -----------------------------------------------------------------------------
 <summary>
 Whether the message should be logged
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	20/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.BackgroundReport.ERID">
 -----------------------------------------------------------------------------
 <summary>
 Report ID
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	18/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.BackgroundReport.Status">
 -----------------------------------------------------------------------------
 <summary>
 Status of report
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	18/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.BackgroundReport.CommandString">
 -----------------------------------------------------------------------------
 <summary>
 Command to run report
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	18/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.BackgroundReport.Priority">
 -----------------------------------------------------------------------------
 <summary>
 Priority of report
 </summary>
	<value></value>
	<remarks>
 default proirity is 10, lower numbers indicate higher priority
 </remarks>
	<history>
 	[Taylor]	18/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.BackgroundReport.RunAfter">
 -----------------------------------------------------------------------------
 <summary>
 Don't run before this date and time
 </summary>
	<value></value>
	<remarks>
 Default value of null means can run immediate
 </remarks>
	<history>
 	[Taylor]	18/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.BackgroundReport">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : BackgroundReport
 
 -----------------------------------------------------------------------------
 <summary>
 Deal with background reports
 </summary>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	18/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.personnel.UserPerson.Authority">
	<summary>
 Authority Level associated with the User (Sample Manager)
 </summary>
</member><member name="P:MedscreenLib.personnel.UserPerson.OptionAuthority">
	<summary>
 Authority Level associated with the user (Medscreen)
 </summary>
</member><member name="M:MedscreenLib.personnel.UserPerson.Removed">
	<summary>
 Indicates that the user has been removed
 </summary>
	<returns>TRUE if user has been removed</returns>
</member><member name="M:MedscreenLib.personnel.UserPerson.#ctor(System.String)">
	<summary>
 Create a new user entity
 </summary>
	<param name="UserId">SM user identity</param>
</member><member name="P:MedscreenLib.personnel.UserPerson.Location">
	<summary>
 menu (sample manager) to use
 </summary>
</member><member name="P:MedscreenLib.personnel.UserPerson.Manager">
	<summary>
 User's manager is a pig's ear relationship back to personnel table
 </summary>
</member><member name="P:MedscreenLib.personnel.UserPerson.CostCode">
	<summary>
 User Employee ID
 </summary>
</member><member name="P:MedscreenLib.personnel.UserPerson.Department">
	<summary>
 Department the user works in 
 </summary>
</member><member name="P:MedscreenLib.personnel.UserPerson.Description">
	<summary>
 Desciption of the user seems to be the full name
 </summary>
</member><member name="P:MedscreenLib.personnel.UserPerson.Email">
	<summary>
 The user's Email address
 </summary>
</member><member name="P:MedscreenLib.personnel.UserPerson.WindowsID">
	<summary>
 The users Windows Identity
 </summary>
</member><member name="P:MedscreenLib.personnel.UserPerson.Identity">
	<summary>
 The user's Sample Manager Identity
 </summary>
</member><member name="M:MedscreenLib.personnel.UserPerson.ToXml">
	<summary>
 Convert details to XML
 </summary>
</member><member name="T:MedscreenLib.personnel.UserPerson">
	<summary>
 Describes a sample manager user
 </summary>
</member><member name="F:MedscreenLib.personnel.PersonnelList.FindIdBy.identity">
	<summary>Parameter represents a SM ID</summary>
</member><member name="F:MedscreenLib.personnel.PersonnelList.FindIdBy.WindowsIdentity">
	<summary>Parameter represents a Windows user name</summary>
</member><member name="F:MedscreenLib.personnel.PersonnelList.FindIdBy.CostCode">
	<summary>Parameter represents a Employee ID</summary>
</member><member name="F:MedscreenLib.personnel.PersonnelList.FindIdBy.Department">
	<summary>Parameter represents a department</summary>
</member><member name="T:MedscreenLib.personnel.PersonnelList.FindIdBy">
	<summary>
 How to index the Item 
 </summary>
</member><member name="M:MedscreenLib.personnel.PersonnelList.#ctor">
	<summary>
 Create a new collection 
 </summary>
</member><member name="M:MedscreenLib.personnel.PersonnelList.Add(MedscreenLib.personnel.UserPerson)">
	<summary>
 Add a UserPerson to the collection
 </summary>
	<param name="item">UserPerson to add</param>
	<returns>Void</returns>
</member><member name="M:MedscreenLib.personnel.PersonnelList.Item(System.Int32)">
	<summary>
 Get a UserPerson
 </summary>
	<param name="Index">Index into table by position</param>
	<returns>A UserPerson</returns>
</member><member name="M:MedscreenLib.personnel.PersonnelList.DepartmentList(System.String)">
	<summary>
 Return a list of the people in a department
 </summary>
	<param name="Department">Department to list</param>
	<returns>A PersonnelList for the department</returns>
</member><member name="M:MedscreenLib.personnel.PersonnelList.Item(System.String,MedscreenLib.personnel.PersonnelList.FindIdBy)">
	<summary>
 Get a userPerson object 
 </summary>
	<param name="SamId"></param>
	<param name="Opt">Which element of the entity is to used
 <see cref="T:MedscreenLib.personnel.PersonnelList.FindIdBy"/>
	</param>
	<returns>UserPerson entity</returns>
</member><member name="M:MedscreenLib.personnel.PersonnelList.Load">
	<summary>
 Load the contents of the table
 </summary>
	<returns>TRUE if succesful</returns>
</member><member name="M:MedscreenLib.personnel.PersonnelList.ToDataSet">
	<summary>
 Convert details to a dataset
 </summary>
	<returns>A dataset</returns>
</member><member name="M:MedscreenLib.personnel.PersonnelList.ToXml">
	<summary>
 Convert collection to XML, calls UserPerson.ToXML 
 </summary>
	<returns>XML representation of collection</returns>
</member><member name="M:MedscreenLib.personnel.PersonnelList.WriteXmlToFile(System.String)">
	<summary>
 Write  the contents to a file
 </summary>
	<param name="Filename">File the details are to be written to</param>
	<returns>Void</returns>
</member><member name="M:MedscreenLib.personnel.PersonnelList.GetPersonnelName(System.String)">
	<summary>
 Provide the users name
 </summary>
	<param name="SamId">Sample Manager ID</param>
	<returns>User's name</returns>
</member><member name="T:MedscreenLib.personnel.PersonnelList">
	<summary>
 A list of Sample Manager Users
 </summary>
</member><member name="P:MedscreenLib.FindInList.FindString">
 -----------------------------------------------------------------------------
 <summary>
 Expose find string
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [21/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.FindInList.FirstColumnCMNumber">
 -----------------------------------------------------------------------------
 <summary>
 Is first column primary key
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [21/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.FindInList.View">
 -----------------------------------------------------------------------------
 <summary>
 Pass in list view
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [21/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.FindInList.cmdOk_Click(System.Object,System.EventArgs)">
 -----------------------------------------------------------------------------
 <summary>
 Find item in list box
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [21/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.FindInList">
 -----------------------------------------------------------------------------
 Project	 : CCTool
 Class	 : FindInList
 
 -----------------------------------------------------------------------------
 <summary>
 Form to help with finding an item in a list view
 </summary>
	<remarks>Can be used to trigger an external search if FirstColumnCMNumber is set
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> $Date: 2005-11-21 14:51:03+00 $</date><Action>$Revision: 1.0 $</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.frmPassword.Password">
	<summary>
 Password (Read Only)
 </summary>
</member><member name="P:MedscreenLib.frmPassword.UserName">
	<summary>
 User Name (Read Only)
 </summary>
</member><member name="P:MedscreenLib.frmPassword.LockUser">
	<summary>
 Allow the user to be changed
 </summary>
</member><member name="P:MedscreenLib.frmPassword.ChangePassword">
	<summary>
 Allow the user to be changed
 </summary>
</member><member name="T:MedscreenLib.frmPassword">
	<summary>
 Form allowing users to change their passwords
 User is initialised to current user on form load
 </summary>
</member><member name="P:MedscreenLib.Glossary.Glossary.Printers">
 -----------------------------------------------------------------------------
 -----------------------------------------------------------------------------
 <summary>
 Get a collection of printers defined in the printer table 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/01/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.Countries">
	<summary>
      Implements access to a the country table within the Sample Manager Database
 </summary>
	<remarks>An instance to this object is only created when the first call to the property is made</remarks>
	<seealso class="Addresses.Country"/>
</member><member name="P:MedscreenLib.Glossary.Glossary.SMAddresses">
	<summary>
   implements access to the Address table within the Sample Manager Database
   Returns a collection of Address objects
 </summary>
	<remarks>An instance to this object is only created when the first call to the property is made</remarks>
</member><member name="P:MedscreenLib.Glossary.Glossary.Holidays">
 -----------------------------------------------------------------------------
 <summary>
 Holidays a collection of public holidays
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	26/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.AddressTypes">
 -----------------------------------------------------------------------------
 <summary>
 Address types
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	26/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.Currencies">
 -----------------------------------------------------------------------------
 <summary>
 Currencies supported
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	26/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.ExchangeRates">
 -----------------------------------------------------------------------------
 <summary>
 Exchange rates for the currencies
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	26/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.LineItemGroups">
 -----------------------------------------------------------------------------
 <summary>
 Groups of line items
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	26/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.DiscountSchemes">
 -----------------------------------------------------------------------------
 <summary>
 Discount Schemes (simple)
 </summary>
	<value></value>
	<remarks>
 Not volume discount schemes
 </remarks>
	<history>
 	[taylor]	26/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.VolumeDiscountSchemes">
 -----------------------------------------------------------------------------
 <summary>
 Volume discount schemes
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	26/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.PriceList">
 -----------------------------------------------------------------------------
 <summary>
 Current price list for all currencies
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	26/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.LineItems">
 -----------------------------------------------------------------------------
 <summary>
 Line items 
 </summary>
	<value></value>
	<remarks>
 A line item is any item that is in the price list, 
 called a line item because it occupies a line in an invoice 
 </remarks>
	<history>
 	[taylor]	26/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.Personnel">
 -----------------------------------------------------------------------------
 <summary>
 A list of personnel who can use Sample Manager
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Glossary.CurrentSMUser">
 -----------------------------------------------------------------------------
 <summary>
 The current user using the application.
 </summary>
	<returns></returns>
	<remarks>
 This uses the current windows user to look up the personnel table for a match
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.Departments">
 -----------------------------------------------------------------------------
 <summary>
 A list of departments listed in the personnel table
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.SampleManagerRoles">
 -----------------------------------------------------------------------------
 <summary>
 A collection of Sample Manager Roles
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.SampleMangerAssignments">
 -----------------------------------------------------------------------------
 <summary>
 A collection of Sample Manager Role Assignments
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Glossary.UserInRole(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Information on the primary user in a role
 </summary>
	<param name="RoleName">Name of Role</param>
	<param name="Info">What information to return</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.PhraseList">
 -----------------------------------------------------------------------------
 <summary>
 A collection of possible phrases
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.CustomerAccountType">
 -----------------------------------------------------------------------------
 <summary>
 Types of Customer accounts 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.AccountType">
 -----------------------------------------------------------------------------
 <summary>
 Exposes the phrase collection "Account Type"
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.Industry">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible Industry Categories
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.ReportMethod">
 -----------------------------------------------------------------------------
 <summary>
 A list of Possible Report Methods
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.Switch">
 -----------------------------------------------------------------------------
 <summary>
 Not used now
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.DataAudits">
 -----------------------------------------------------------------------------
 <summary>
 A list of items where the data can be audited
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.VesselTypeList">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible Vessel Types
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.VesselStatus">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible Vessel Statuses
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.VesselSubTypeList">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible Vessel Sub Types
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.PaymentIntervals">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible Payment intervals
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.Invoicing">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible Invoicing Methods
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.ServicesSold">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible services that can be sold
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.Platinum">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible states that the Platinum code can take
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.InvoiceVATType">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible VAT types that can be applied to a customer
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.ConfTypeList">
 -----------------------------------------------------------------------------
 <summary>
 A list of Confirmation types
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.ConfMethodList">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible confirmation methods
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.PMCustomerContactFrequency">
 -----------------------------------------------------------------------------
 <summary>
 Frequency that Programme Manager should contact customer
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.PMAccountType">
 -----------------------------------------------------------------------------
 <summary>
 Type of Programme manager account 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.PMVesselTestFrequency">
 -----------------------------------------------------------------------------
 <summary>
 Frequency of vessel testing 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.SampleMedscreenStatus">
	<summary>
     Status of Sample
 </summary>
	<value>
		<para>
		</para>
	</value>
	<remarks>
	</remarks>
</member><member name="P:MedscreenLib.Glossary.Glossary.SampleOverallResult">
	<summary>
     Overall result
 </summary>
	<value>
		<para>
		</para>
	</value>
	<remarks>
	</remarks>
</member><member name="P:MedscreenLib.Glossary.Glossary.TestTypeList">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible test types
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.ReasonForTestList">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible reasons for testing the donors
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.CancellationStatusList">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible Cancellation Statuses
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.FaxFormat">
 -----------------------------------------------------------------------------
 <summary>
 Possible Fax Formats
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.CollectionStatusList">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible cancellation statuses
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.CollectionCommentsList">
 -----------------------------------------------------------------------------
 <summary>
 A list of possible Collections Comment types
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.CancellationReasons">
 -----------------------------------------------------------------------------
 <summary>
 Possible reasons for a cancellation
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.CalloutCategory">
 -----------------------------------------------------------------------------
 <summary>
 Call out categories
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [10/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.SendOption">
 -----------------------------------------------------------------------------
 <summary>
 Send options for collectors
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [10/10/2005]</date><Action>Added</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.Options">
 -----------------------------------------------------------------------------
 <summary>
 Options available 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Glossary.Menus">
 -----------------------------------------------------------------------------
 <summary>
 Menus available
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.Glossary">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.Glossary
 
 -----------------------------------------------------------------------------
 <summary>
 an exposed class containg items in frequent use
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	26/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.RoleHeader.RoleID">
 -----------------------------------------------------------------------------
 <summary>
 The Id associated with this role
 </summary>
	<value>A string containging the RoleId</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.RoleHeader.Description">
 -----------------------------------------------------------------------------
 <summary>
 Description of the role
 </summary>
	<value>A string containing the description of the role</value>
	<remarks>
 The description is primarily for the GUI, it provides feedback to the users as to the intention of the role
 </remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.RoleHeader.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Constructor for a role header
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.RoleHeader">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.RoleHeader
 
 -----------------------------------------------------------------------------
 <summary>
 This describes the possible values for a role
 </summary>
	<remarks>
 Roles are a way of controlling what a person can do.  An individual can be in no roles, 
 or many.
 </remarks>
	<history>
 	[taylor]	26/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.SMRoles.Add(MedscreenLib.Glossary.RoleHeader)">
 -----------------------------------------------------------------------------
 <summary>
 Add as Role to the collection
 </summary>
	<param name="Value">The item being added</param>
	<returns>The index of the item added</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.SMRoles.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Constructor for the collection
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.SMRoles.Load">
 -----------------------------------------------------------------------------
 <summary>
 Load the collection from the database
 </summary>
	<returns>TRUE if sucessful</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.SMRoles.Item(System.Int32)">

 -----------------------------------------------------------------------------
 <summary>
 Retrieves an Item from the collection by its position
 </summary>
	<param name="index">Position of the item to get</param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.SMRoles.Item(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieves an Item from the collection by its Role ID
 </summary>
	<param name="index">Role Id for the item to get</param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.SMRoles">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.SMRoles
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Role Headers
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.RoleAssignment.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Constructor for the role assignment
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.RoleAssignment.Role">
 -----------------------------------------------------------------------------
 <summary>
 The Role ID for this role assignment
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.RoleAssignment.User">
 -----------------------------------------------------------------------------
 <summary>
 The User who has this role, is the Primary key of the Personnel table
 </summary>
	<value>Personnel ID</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.RoleAssignment.Rank">
 -----------------------------------------------------------------------------
 <summary>
 The rank this role holder has
 </summary>
	<value>The Rank as Integer</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.RoleAssignment">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.RoleAssignment
 
 -----------------------------------------------------------------------------
 <summary>
 An assignment for a role
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.RoleAssignments.Add(MedscreenLib.Glossary.RoleAssignment)">
 -----------------------------------------------------------------------------
 <summary>
 Add a RoleAssignment to the collection
 </summary>
	<param name="value">The Role to add</param>
	<returns>Position of Added Item</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.RoleAssignments.Load">
 -----------------------------------------------------------------------------
 <summary>
 Load all Assignments form the database
 </summary>
	<returns>TRUE if succesful</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.RoleAssignments.UserRoles(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 An array of Roles that the user has 
 </summary>
	<param name="User">User ID</param>
	<returns>An Array of Role IDs</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.RoleAssignments.TopRankedUser(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Identify the highest ranked user in a role
 </summary>
	<param name="Role">Role to find highest ranked user</param>
	<returns>User Id</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.RoleAssignments.UserHasRole(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Returns whether a user is in a particular Sample Manager role
 </summary>
	<param name="user">User (Personnel ID)</param>
	<param name="role">Role (Role ID)</param>
	<returns>TRUE if user is in Role</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.RoleAssignments.RoleHolders(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Holders of a particular role (As Array)
 </summary>
	<param name="Role">Role that list is to be returned for</param>
	<returns>An array of Role Holders</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.RoleAssignments.UserRoleHolders(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Users who have a particular role
 </summary>
	<param name="Role">Role to get list for </param>
	<returns>A collection of Role Assignments</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.RoleAssignments.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Constructor Create a role Assignment collection
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.RoleAssignments.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Access a particular Item in the collection
 </summary>
	<param name="Index">Position of Item in collection</param>
	<value>The Rolleassignment at this position</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.RoleAssignments">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.RoleAssignments
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Role Assignments
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Phrase.ToXml">
 -----------------------------------------------------------------------------
 <summary>
 Generates an XML representation of the phrase
 </summary>
	<returns>The phrase represented as XML</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Phrase.ToString">
 -----------------------------------------------------------------------------
 <summary>
   Returns the phrase text
 </summary>
	<returns></returns>
	<remarks>
   The phrase text is returned for use in combo boxes, where the phrase itself
   can be added to the box, with the phrase text displayed for the user.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [30/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Phrase.Equals(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether value matches PhraseID
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Phrase.#ctor">
	<summary>
		Implements the constructor for the Phrase object.
		calls private member SetupFields which populates the fields object.
 </summary>
</member><member name="M:MedscreenLib.Glossary.Phrase.#ctor(System.String)">
	<summary>
		Implements the constructor for the Phrase object.
     overloaded to with a phrase type
		calls private member SetupFields which populates the fields object.
     then initialises the PhraseType member
 </summary>
</member><member name="P:MedscreenLib.Glossary.Phrase.PhraseType">
 -----------------------------------------------------------------------------
 <summary>
 The phrase list this phrase belongs to 
 </summary>
	<value>Phrase list Id as string</value>
	<remarks>
 Phrases are organised in to lists of myPhrase, each list is composed of a number of myPhrase
 </remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Phrase.PhraseText">
 -----------------------------------------------------------------------------
 <summary>
 Text associated with this phrase
 </summary>
	<value>Returns the phrase dceriptive text</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Phrase.PhraseID">
 -----------------------------------------------------------------------------
 <summary>
 Phrase ID (10 character code the identifies this phrase)
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Phrase.PhraseStatus">
 -----------------------------------------------------------------------------
 <summary>
 Status of phrase
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Taylor]</Author><date> [14/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Phrase.GenText1">
 -----------------------------------------------------------------------------
 <summary>
 Non specific text
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Taylor]</Author><date> [14/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Phrase.GenText2">
 -----------------------------------------------------------------------------
 <summary>
 Non specific text 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Taylor]</Author><date> [14/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Phrase.OrderNum">
 -----------------------------------------------------------------------------
 <summary>
 Position in this phrase list
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Phrase.Fields">
 -----------------------------------------------------------------------------
 <summary>
 Exposes the database fields 
 </summary>
	<value>A collection of Fields</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Phrase.ParseText(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Look for search text in string, format will be SearchText=xxxxx;
 </summary>
	<param name="SearchText"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Taylor]</Author><date> [15/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.Phrase">
	<summary>
 phrase types based on the SM Phrase table
 </summary>
</member><member name="F:MedscreenLib.Glossary.PhraseCollection.BuildBy.Table">
	<summary>
    Provide a table name, table must be in structure.txt document 
 </summary>
</member><member name="F:MedscreenLib.Glossary.PhraseCollection.BuildBy.PLSQLFunction">
	<summary>
     Use a PL/SQL function that returns a comma separated string of the form ID|Description,ID|Description
 </summary>
</member><member name="F:MedscreenLib.Glossary.PhraseCollection.BuildBy.Query">
	<summary>
     Use a SQL Query
 </summary>
</member><member name="T:MedscreenLib.Glossary.PhraseCollection.BuildBy">
	<summary>
     Enumeration to describe type of constructor
 </summary>
	<remarks>
	</remarks>
</member><member name="M:MedscreenLib.Glossary.PhraseCollection.ToArray">
 -----------------------------------------------------------------------------
 <summary>
   Gets an array of the phrase entries
 </summary>
	<returns></returns>
	<remarks>
   Useful for adding phrase entries to a comboBox
 </remarks>
	<history>
 	[Boughton]	18/07/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.PhraseCollection.ToDataSet">
 -----------------------------------------------------------------------------
 <summary>
 Convert phrase list to an untyped dataset
 </summary>
	<returns>untyped data set</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.PhraseCollection.Clone">
 -----------------------------------------------------------------------------
 <summary>
 Clone a phrase collection so two can be used at once 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [25/10/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.PhraseCollection.ToXml">
 -----------------------------------------------------------------------------
 <summary>
 Convert phrase list to XML 
 </summary>
	<returns>Phrase list represented as XML in a string </returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.PhraseCollection.WriteXmlToFile(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Write Phrase list out as XML to a file
 </summary>
	<param name="Filename"></param>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.PhraseCollection.Add(MedscreenLib.Glossary.Phrase)">
 -----------------------------------------------------------------------------
 <summary>
 Add a phrase to the phras elist
 </summary>
	<param name="Item">Phrase to add</param>
	<returns>Index of the added item</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.PhraseCollection.IndexOf(System.String,MedscreenLib.Glossary.PhraseCollection.IndexBy)">
 -----------------------------------------------------------------------------
 <summary>
 Find the phrase in the list 
 </summary>
	<param name="Phrase">Phrase entity to find</param>
	<returns>Position in the list </returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.PhraseCollection.Load(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Load the phrase list from the database
 </summary>
	<param name="OrderBy">Order by clause, default = Order Number</param>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.PhraseCollection.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create a new Phrase list for the identified phrase list type 
 </summary>
	<param name="PhraseType">Phrase List Type</param>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.PhraseCollection.#ctor(System.String,MedscreenLib.Glossary.PhraseCollection.BuildBy,System.String,System.String,System.String)">
	<summary>
 Created by taylor on ANDREW at 2/15/2007 14:42:07
     Create a phrase list using the from parameter according to the method 
     described by in BuildUsing Enumeration
 </summary>
	<param name="From" type="String">
		<para>
         Table or Pl/Sql function
     </para>
	</param>
	<param name="BuildUsing" type="MedscreenLib.Glossary.PhraseCollection.BuildBy">
		<para>
         Way to build collection
     </para>
	</param>
	<param name="WhereClause" type="String">
		<para>
         Optional where clause missing the word where, only used for table types
     </para>
	</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>taylor</Author><date> 2/15/2007</date><Action></Action></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.Glossary.PhraseCollection.#ctor(MedscreenLib.MedStructure.StructTable,System.String)">
	<summary>
 Created by taylor on ANDREW at 2/16/2007 14:26:28
     Create a new phrase collection based on a table structure
 </summary>
	<param name="TableStructure" type="MedscreenLib.MedStructure.StructTable">
		<para>
         Table structure 
     </para>
	</param>
	<param name="WhereClause" type="String">
		<para>
         Where clause to use (optional)
     </para>
	</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>taylor</Author><date> 2/16/2007</date><Action></Action></revision>
	</revisionHistory>
</member><member name="P:MedscreenLib.Glossary.PhraseCollection.PhraseType">
 -----------------------------------------------------------------------------
 <summary>
 Phrase type for this phrase list
 </summary>
	<value>The phrase type associated with this phrase list</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.PhraseCollection.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieve a phrase by position
 </summary>
	<param name="Index">Phrase Id</param>
	<value>Phrase found at position</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.PhraseCollection.Item(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Phrase found by phrase ID
 </summary>
	<param name="Index">Position to retrieve from</param>
	<value>Returns Phrase with the given ID</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.PhraseCollection">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.PhraseCollection
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of myPhrase that form a phrase list
 </summary>
	<remarks>
 Phrases are organised in to phrase lists, all the phrase lists are stored together in the phrase table.
 </remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Phrases.Add(MedscreenLib.Glossary.PhraseCollection)">
 -----------------------------------------------------------------------------
 <summary>
 Add a phrase list to the collection
 </summary>
	<param name="item"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Phrases.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Construct a new list 
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Phrases.Item(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Get a phrase list from the collection
 </summary>
	<param name="index">Phrase list to find</param>
	<value>Returns a phrase list</value>
	<remarks>
   Phrases not already loaded are retrieved from the database and added to the collection
 </remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.Phrases">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.Phrases
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Phrase Lists
 </summary>
	<remarks>
 This is a collection of Phrase lists
 </remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Currency.HTMLCode">
 -----------------------------------------------------------------------------
 <summary>
 Return the Currency in a form suitaable for use in HTML
 </summary>
	<returns>Currency in a form suitaable for use in HTML</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Currency.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 create a new Currency Entry
 </summary>
	<param name="CurrencyId">Id of the Currency</param>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Currency.CurrencyId">
 -----------------------------------------------------------------------------
 <summary>
 Currency Id ISO representation of the Currency three character code
 </summary>
	<value>ISO representation of the Currency</value>
	<remarks>
 ISO representation of the Currency<para/>
		<li>GBP - Pounds sterling</li>
		<li>USD - US Dollors</li>
		<li>EUR - Euros</li>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Currency.Culture">
 -----------------------------------------------------------------------------
 <summary>
 Culture for Currency used in formatting.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	13/05/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Currency.Description">
 -----------------------------------------------------------------------------
 <summary>
 Description of the currency
 </summary>
	<value>Currency description</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Currency.SingleCharId">
 -----------------------------------------------------------------------------
 <summary>
 Representation of the currency as a single character
 </summary>
	<value>single character Currency code</value>
	<remarks>Currency represented as a single character <para/>
		<li>S - Sterling</li>
		<li>D - Dollars</li>
		<li>E - Euros</li>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Currency.AsciiCode">
 -----------------------------------------------------------------------------
 <summary>
 Ascii Code representation of the Currency
 </summary>
	<value>Ascii Code representation of the Currency</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.Currency">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.Currency
 
 -----------------------------------------------------------------------------
 <summary>
 Currency Entity, relates to the Currency table
 </summary>
	<remarks>
	</remarks>
	<seealso cref="T:MedscreenLib.Glossary.ExchangeRate"/>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Currencies.Culture(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Currencies Culture used for display purposes
 </summary>
	<param name="ID"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	24/07/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Currencies.Add(MedscreenLib.Glossary.Currency)">
 -----------------------------------------------------------------------------
 <summary>
 Add a currency Item to the list 
 </summary>
	<param name="item">Currency Item to add</param>
	<returns>Position of added item in list</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Currencies.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Construct and populate collection of currencies
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Currencies.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieve Currency by its position in the List
 </summary>
	<param name="index"></param>
	<value>Currency Item</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Currencies.Item(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Get a currency by its 3 character ISO code
 </summary>
	<param name="Index">3 character code</param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.Currencies">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.Currencies
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Currency Items
 </summary>
	<remarks>
 A very small collection as currently there are only three curencies in use
 </remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ExchangeRate.#ctor(System.DateTime,System.String,System.Double)">
 -----------------------------------------------------------------------------
 <summary>
 Create a new Exchange Rate Item
 </summary>
	<param name="Start">Date from this Exchange rate will start</param>
	<param name="Currency">Currency it is for</param>
	<param name="ExchRate">Actual Exchnage Rate</param>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ExchangeRate.StartDate">
 -----------------------------------------------------------------------------
 <summary>
 Start Date of the Exchange Rate
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ExchangeRate.ExchangeRate">
 -----------------------------------------------------------------------------
 <summary>
 Exchange Rate in force
 </summary>
	<value>Current exchange rate between this currency and the base currency (GBP)</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ExchangeRate.Currency">
 -----------------------------------------------------------------------------
 <summary>
 Currency as three character code
 </summary>
	<value>Currency as three character code</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.ExchangeRate">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.ExchangeRate
 
 -----------------------------------------------------------------------------
 <summary>
 An exchange rate
 </summary>
	<remarks>
 An exchange rate is for a particular currency for a period of time
 </remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ExchangeRates.Add(MedscreenLib.Glossary.ExchangeRate)">
 -----------------------------------------------------------------------------
 <summary>
 Add and Exchange rate item
 </summary>
	<param name="Item">Exchange Rate Item to add</param>
	<returns>Position in the collection of added item
 </returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ExchangeRates.Item(System.String,System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieve an exchange rate
 </summary>
	<param name="Currency">Currency</param>
	<param name="Start"> date (any date whilst it is valid) </param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ExchangeRates.Convert(System.String,System.String,System.Double,System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
 Convert from one currency to another on a particular date
 </summary>
	<param name="InputCurrency">Currency to be converted from</param>
	<param name="outputCurrency">Currency to be converted to</param>
	<param name="InputValue">Amount to be converted</param>
	<param name="at">Date when conversion takes place, defaults to null date (today)</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ExchangeRates.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create new collection and Add contents
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.ExchangeRates">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.ExchangeRates
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Exchange Rates
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.LineItemGroup.Parent">
 -----------------------------------------------------------------------------
 <summary>
 Parent of Item
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.LineItemGroup.HasParent(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Checks to see if the item has any parents
 </summary>
	<param name="ParentId">Parent to see if item is a descendent</param>
	<returns>TRUE if item is a parent</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.LineItemGroup.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Constructor create group list
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItemGroup.ParentIndex">
 -----------------------------------------------------------------------------
 <summary>
 Position of Parent in list
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItemGroup.ParentID">
 -----------------------------------------------------------------------------
 <summary>
 Id of parent in list 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItemGroup.Category">
 -----------------------------------------------------------------------------
 <summary>
 Category Group is in
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItemGroup.Description">
 -----------------------------------------------------------------------------
 <summary>
 Description of group
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItemGroup.HasChildren">
 -----------------------------------------------------------------------------
 <summary>
 Indicates whether there are children of this item
 </summary>
	<value>True If there are Children</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItemGroup.ID">
 -----------------------------------------------------------------------------
 <summary>
 ID of this group
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItemGroup.Index">
 -----------------------------------------------------------------------------
 <summary>
 Position of this group
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.LineItemGroup">
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.LineItemGroups.Add(MedscreenLib.Glossary.LineItemGroup)">
 -----------------------------------------------------------------------------
 <summary>
 Add a new Line Item Group object to the collection
 </summary>
	<param name="item">Line Item Group object to be added</param>
	<returns>Poistion of Added Item in collection</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.LineItemGroups.Load">
 -----------------------------------------------------------------------------
 <summary>
 Load the Line Item Group collection from the database
 </summary>
	<returns>TRUE if succesful</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.LineItemGroups.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Constructe a new colelction of Line Item Groups
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItemGroups.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieve a Line Item group from collection, indexing by Position
 </summary>
	<param name="index">Position to retrieve</param>
	<value>Line Item Group </value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItemGroups.Item(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieve a Line Item group from collection, indexing by Line Item Group ID
 </summary>
	<param name="index">Group ID to retrieve</param>
	<value>Line Item Group </value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.LineItemGroups">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.LineItemGroups
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Line Item Groups
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [27/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.LineItemPrice.SetUpFields">
	<summary>Setup Fields</summary>
</member><member name="M:MedscreenLib.Glossary.LineItemPrice.#ctor">
	<summary>Constructor, create a new Price instance</summary>
</member><member name="P:MedscreenLib.Glossary.LineItemPrice.VariablePrice">
	<summary>Indicates whether it is a fixed price or variable</summary>
	<remarks>A variable Price is indicated by having a null value for the price in the database</remarks>
</member><member name="P:MedscreenLib.Glossary.LineItemPrice.Fields">
	<summary></summary>
</member><member name="P:MedscreenLib.Glossary.LineItemPrice.StartDate">
	<summary>Date this price becomes effective</summary>
</member><member name="P:MedscreenLib.Glossary.LineItemPrice.EndDate">
	<summary>Date this Price Ends</summary>
</member><member name="P:MedscreenLib.Glossary.LineItemPrice.Currency">
	<summary>Currency as three character ISO code</summary>
</member><member name="P:MedscreenLib.Glossary.LineItemPrice.Lineitem">
	<summary>Lineitem Code</summary>
</member><member name="P:MedscreenLib.Glossary.LineItemPrice.Price">
	<summary>Price for Line Item</summary>
</member><member name="T:MedscreenLib.Glossary.LineItemPrice">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.LineItemPrice
 
 -----------------------------------------------------------------------------
 <summary>
 The price of a line item.  
 </summary>
	<remarks>
 Line items will have many prices in their lifetime.  We have adopted the model which enables us 
 to have both historical and future price list implementations.  The price list is also 
 multi currency.  <para/>
 For example if a price change is envisaged to go live on 28th July 2006, it is possible to create this
 weeks in advance, the price will not be charged until its start date <see cref="!:Glossary.LineItemPrice.StartDate"/> is passed.
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.PriceList.Load(System.String)">
	<summary>Load a collection of prices</summary>
	<param name="WhereClause">What gets loaded, default all values</param>
	<returns>&gt;TRUE if succesful</returns>
</member><member name="M:MedscreenLib.Glossary.PriceList.Add(MedscreenLib.Glossary.LineItemPrice)">
	<summary>Add a Price to the collection</summary>
	<param name="value">Item to add to collection</param>
	<returns>Index of item added</returns>
</member><member name="M:MedscreenLib.Glossary.PriceList.#ctor">
	<summary>Constructor create a new price item</summary>
</member><member name="P:MedscreenLib.Glossary.PriceList.Item(System.Int32)">
	<summary>Get Price by numeric index</summary>
	<param name="index">position from 0 based collection to return</param>
</member><member name="P:MedscreenLib.Glossary.PriceList.Item(System.String,System.DateTime,System.String)">
	<summary></summary>
	<param name="ItemCode">Price to recover</param>
	<param name="inDate">Date for which the price needs to be valid</param>
	<param name="Currency">Currency price is in, defaults to GBP</param>
</member><member name="M:MedscreenLib.Glossary.PriceList.SetUpFields">
	<summary></summary>
</member><member name="T:MedscreenLib.Glossary.PriceList">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.PriceList
 
 -----------------------------------------------------------------------------
 <summary>
 The list of price 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.ADDSCREEN">
	<summary>Additional screening charges</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.ADDTIME">
	<summary>Additional time on site</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.CANCEL">
	<summary>Cancellation charges</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.COLLECTION">
	<summary>Collection charges</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.COMMENT">
	<summary>Non Item line items</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.CONFIRM">
	<summary>Confirmation</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.CREDIT">
	<summary>Credits</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.DELIVERY">
	<summary>Deleivery charges</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.EQUIPMENT">
	<summary>Equipment</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.EXPENSE">
	<summary>Expenses</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.KITS">
	<summary>Kits and equipment</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.MED_REVIEW">
	<summary>Medical Review</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.MINCHARGE">
	<summary>Minimum Charge</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.PAIDKITS">
	<summary>Kits and equipment</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.RETAINER">
	<summary>Retainers for services</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.SAMPLE">
	<summary>Sample Charge</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.SERVICES">
	<summary>Charge for Services</summary>
</member><member name="F:MedscreenLib.Glossary.LineItem.LineItemTypes.TEST">
	<summary>Additional Test</summary>
</member><member name="T:MedscreenLib.Glossary.LineItem.LineItemTypes">
	<summary>Types of Line Items</summary>
</member><member name="M:MedscreenLib.Glossary.LineItem.toXML">
	<summary>Convert Line Item into XML</summary>
</member><member name="M:MedscreenLib.Glossary.LineItem.#ctor">
	<summary>Create a new line item entity </summary>
</member><member name="P:MedscreenLib.Glossary.LineItem.Reference">
 -----------------------------------------------------------------------------
 <summary>
 Reference for line item
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItem.Location">
 -----------------------------------------------------------------------------
 <summary>
 Location e.g warehouse that item is stored in.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	13/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItem.Removed">
 -----------------------------------------------------------------------------
 <summary>
 Has this line item been removed 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItem.Fields">
	<summary></summary>
</member><member name="P:MedscreenLib.Glossary.LineItem.ItemCode">
	<summary>Item Code ID</summary>
</member><member name="P:MedscreenLib.Glossary.LineItem.Type">
	<summary>Type of Line Item (string)</summary>
</member><member name="P:MedscreenLib.Glossary.LineItem.Description">
	<summary>Description of Line Item </summary>
</member><member name="P:MedscreenLib.Glossary.LineItem.Service">
	<summary>Service associated with Line Item </summary>
</member><member name="P:MedscreenLib.Glossary.LineItem.Currency">
	<summary>Currency</summary>
</member><member name="P:MedscreenLib.Glossary.LineItem.Price">
	<summary>Price of Line Item</summary>
</member><member name="P:MedscreenLib.Glossary.LineItem.LineItemType">
	<summary>Type of LineItem as an enumeration</summary>
</member><member name="M:MedscreenLib.Glossary.LineItem.SetupFields">
	<summary></summary>
</member><member name="T:MedscreenLib.Glossary.LineItem">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.LineItem
 
 -----------------------------------------------------------------------------
 <summary>
 Line items defined 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action>Added removeflag and reference fields</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.LineItems.Load">
	<summary>Load these line items</summary>
</member><member name="M:MedscreenLib.Glossary.LineItems.Add(MedscreenLib.Glossary.LineItem)">
 -----------------------------------------------------------------------------
 <summary>
 Add a new line item to the collection
 </summary>
	<param name="Item">Item to add</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.LineItems.Group(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Get all the line items in a group 
 </summary>
	<param name="GroupID">Id of the group to get</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.LineItems.ToXml">
 -----------------------------------------------------------------------------
 <summary>
 Convert collection to XML
 </summary>
	<returns>Collection represented as XML</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.LineItems.LineItemsByType(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Call stored procedure to find all line items that match a type
 </summary>
	<param name="_Type"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [06/09/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.LineItems.#ctor(System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
 Create a new collection of Line Items
 </summary>
	<param name="bLoad">Load the collection as well</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItems.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Get Line Item from collection by position
 </summary>
	<param name="Index">Position to get</param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.LineItems.Item(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Get line item by item code
 </summary>
	<param name="Index">Item code to get </param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.LineItems">
	<summary>Line Items sold to customers, a collection of <see cref="!:Glossary.LineItem"/></summary>
</member><member name="M:MedscreenLib.Glossary.AddressType.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create a new AddressType Entity
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.AddressType.AddressTypeID">
 -----------------------------------------------------------------------------
 <summary>
 Address Type Id 
 </summary>
	<value>Returns the Address Type as an Integer</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.AddressType.AddressType">
 -----------------------------------------------------------------------------
 <summary>
 Address type 
 </summary>
	<value>Address type as a string</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.AddressType.Description">
 -----------------------------------------------------------------------------
 <summary>
 Description of this address type
 </summary>
	<value>Address Type as a string</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.AddressType">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.AddressType
 
 -----------------------------------------------------------------------------
 <summary>
 Possible values of Address Type
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.AddressTypes.IndexOf(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Get the position in the list of an address type
 </summary>
	<param name="Item">Address Type to find</param>
	<returns>Position in the list of the address type</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.AddressTypes.IndexOf(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Get the position of item in list
 </summary>
	<param name="Item">Find by Address type Id</param>
	<returns>Position in the list</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.AddressTypes.Add(MedscreenLib.Glossary.AddressType)">
 -----------------------------------------------------------------------------
 <summary>
 Add an item to the list
 </summary>
	<param name="Item">Address Type Item </param>
	<returns>Position of Item added to the list</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.AddressTypes.Load">
 -----------------------------------------------------------------------------
 <summary>
 Load the list from the database
 </summary>
	<returns>TRUE if succesful</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.AddressTypes.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Constructor for List 
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.AddressTypes.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Address Type Item
 </summary>
	<param name="index">Position in List</param>
	<value>Retrieves an address type Item by its position in the list </value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.AddressTypes">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.AddressTypes
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Address Types
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Holiday.#ctor(System.DateTime,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create a new holiday entity
 </summary>
	<param name="datIn">Date for the Holiday</param>
	<param name="myDesc">Description for the Holiday</param>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Holiday.HolidayDate">
 -----------------------------------------------------------------------------
 <summary>
 Date of the Holiday
 </summary>
	<value>The date associated with this Holiday</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Holiday.HolidayDescription">
 -----------------------------------------------------------------------------
 <summary>
 Description of the Holiday
 </summary>
	<value>Description of the Holiday</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.Holiday">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.Holiday
 
 -----------------------------------------------------------------------------
 <summary>
 Stores a holiday item 
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.HolidayCollection.Add(MedscreenLib.Glossary.Holiday)">
 -----------------------------------------------------------------------------
 <summary>
 Add a Holiday Item to the collection
 </summary>
	<param name="objTest"></param>
	<returns>Position in the collection</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.HolidayCollection.IsAHoliday(System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
 Is the date supplied a Holiday
 </summary>
	<param name="datIn">Date to check</param>
	<returns>TRUE if supplied date is a holiday</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.HolidayCollection.Load">
 -----------------------------------------------------------------------------
 <summary>
 Load the collection of Holidays
 </summary>
	<returns>Void</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.HolidayCollection.Remove(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Remove holiday from list
 </summary>
	<param name="index">Position of the item to remove</param>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.HolidayCollection.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create a new Holiday Collection
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.HolidayCollection.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Get a Holiday from collection
 </summary>
	<param name="index">Position of Item to get</param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.HolidayCollection">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.HolidayCollection
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Holiday Items
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.Parameters">
 -----------------------------------------------------------------------------
 <summary>
 Parameteers for this report 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.InfomakerLink.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create new instance of link
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.ReportID">
 -----------------------------------------------------------------------------
 <summary>
 Primary key of the report
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.Description">
 -----------------------------------------------------------------------------
 <summary>
 Public description of the report
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.Library">
 -----------------------------------------------------------------------------
 <summary>
 Library to use 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.Report">
 -----------------------------------------------------------------------------
 <summary>
 Report that in the library
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.UserLibrary">
 -----------------------------------------------------------------------------
 <summary>
 VGL routine to call 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.ValidRoutine">
 -----------------------------------------------------------------------------
 <summary>
 Validation routine (VGL)
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.Copies">
 -----------------------------------------------------------------------------
 <summary>
 Default number of Copies
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.Preview">
 -----------------------------------------------------------------------------
 <summary>
 Preview the report
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.GroupId">
 -----------------------------------------------------------------------------
 <summary>
 Security Group 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.Modifiable">
 -----------------------------------------------------------------------------
 <summary>
 Is this report modifiable
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.ModifiedOn">
 -----------------------------------------------------------------------------
 <summary>
 Date Report last modified
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.ModifiedBy">
 -----------------------------------------------------------------------------
 <summary>
 Who last modified the report
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerLink.RemoveFlag">
 -----------------------------------------------------------------------------
 <summary>
 Has this report been removed
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.InfomakerLink.DoLoad">
 -----------------------------------------------------------------------------
 <summary>
 Load this report
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.InfomakerLink">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Defaults.InfomakerLink
 
 -----------------------------------------------------------------------------
 <summary>
 Class to manage access to information stored in the database on InfoMaker tables
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.InfomakerLinkList.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create new instance of link
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.InfomakerParameter.ParameterID">
 -----------------------------------------------------------------------------
 <summary>
 Primary key of the report
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Printer.Printers">
	<summary>
Default collection of available printers
</summary>
</member><member name="P:MedscreenLib.Glossary.Printer.DeviceName">
 -----------------------------------------------------------------------------
 <summary>
 Name of the device as used by reporter
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[boughton]</Author><date> [06/06/2008]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Printer.Info">
 -----------------------------------------------------------------------------
 <summary>
 Property for use in combo boxes
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[boughton]</Author><date> [06/06/2008]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.PrinterColl.Item(System.String)">
	<summary>
 Get printer by printer identity 
 </summary>
	<param name="printerID"></param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[boughton]</Author><date> [06/06/2008]</date><Action></Action></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.Glossary.PrinterColl.Load">
	<summary>
 Load the collection of printers
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[boughton]</Author><date> [06/06/2008]</date><Action></Action></revision>
	</revisionHistory>
</member><member name="T:MedscreenLib.Glossary.PrinterColl">
	<summary>
 A collection of printer objects 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[boughton]</Author><date> [06/06/2008]</date><Action></Action></revision>
	</revisionHistory>
</member><member name="F:MedscreenLib.Glossary.ComponentView.AnalysisType.EA_EnzymeAssay">
	<summary>Enzyme Linked test</summary>
</member><member name="F:MedscreenLib.Glossary.ComponentView.AnalysisType.IA_ImmunoAssay">
	<summary>Radio Immuno Assay</summary>
</member><member name="F:MedscreenLib.Glossary.ComponentView.AnalysisType.GC_GasChromatography">
	<summary>Gas Chromatography test</summary>
</member><member name="F:MedscreenLib.Glossary.ComponentView.AnalysisType.MS_MassSpectrometry">
	<summary>Mass spec test</summary>
</member><member name="F:MedscreenLib.Glossary.ComponentView.AnalysisType.AD_Adulteration">
	<summary>Adulteration test</summary>
</member><member name="F:MedscreenLib.Glossary.ComponentView.AnalysisType.MR_MRO">
	<summary>Medical Review</summary>
</member><member name="F:MedscreenLib.Glossary.ComponentView.AnalysisType.QI">
	<summary></summary>
</member><member name="T:MedscreenLib.Glossary.ComponentView.AnalysisType">
 -----------------------------------------------------------------------------
 <summary>
 Possible analysis types
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [19/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ComponentView.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 ?Create a new entity for the component view
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ComponentView.#ctor(System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Create a new instance by analysis and component position 
 </summary>
	<param name="Analysis">Analysis </param>
	<param name="orderNumber">Component Position </param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [19/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ComponentView.Units">
 -----------------------------------------------------------------------------
 <summary>
 Units that results are presented in 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [19/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ComponentView.Result_type">
 -----------------------------------------------------------------------------
 <summary>
 Type of result produced
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [19/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ComponentView.Name">
 -----------------------------------------------------------------------------
 <summary>
 Name of test 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [19/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ComponentView.OrderNumber">
 -----------------------------------------------------------------------------
 <summary>
 Position in Component list 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [19/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ComponentView.Analysis">
 -----------------------------------------------------------------------------
 <summary>
 Analysis ID associated with these components
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [19/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ComponentView.IsConfirmatory">
 -----------------------------------------------------------------------------
 <summary>
 Is this test a confirmatory one or not 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [19/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ComponentView.DataFields">
 -----------------------------------------------------------------------------
 <summary>
 Expose datafields 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [19/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.ComponentView">
 -----------------------------------------------------------------------------
 Project	 : Intranet
 Class	 : intranet.TestResult.ComponentView
 
 -----------------------------------------------------------------------------
 <summary>
 A map to Component View
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ComponentViewList.Load">
 -----------------------------------------------------------------------------
 <summary>
 Load a collection of components 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [19/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ComponentViewList.Add(MedscreenLib.Glossary.ComponentView)">
 -----------------------------------------------------------------------------
 <summary>
 Add a component to the list 
 </summary>
	<param name="item"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [19/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ComponentViewList.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create a new list from the component view
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ComponentViewList.#ctor(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create a new component view collection for a customer
 </summary>
	<param name="AnalysisID">Analysis to get list for</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [19/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ComponentViewList.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Get componentview from list 
 </summary>
	<param name="index">Position to get </param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.ComponentViewList">
 -----------------------------------------------------------------------------
 Project	 : Intranet
 Class	 : intranet.TestResult.ComponentViewList
 
 -----------------------------------------------------------------------------
 <summary>
 A list of components associated with an anlysis and thier tests
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountScheme.ToXML">
 -----------------------------------------------------------------------------
 <summary>
 Convert the Discount Entry to XML
 </summary>
	<returns>A string representing the Discount Scheme as XML</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountScheme.Refresh">
 -----------------------------------------------------------------------------
 <summary>
 Refresh the discount scheme by reloading from the database
 </summary>
	<returns>TRUE if succesful</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountScheme.Discount(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Calculate Discount for this scheme, for a given Line Item or item type
 </summary>
	<param name="ItemCode">Line Item Code to discount on</param>
	<param name="ItemType">Item Type to discount on</param>
	<returns>Discount</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountScheme.FullDescription(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Provide a full description of the discount scheme 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountScheme.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create a new Discount Scheme Entry
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.DiscountScheme.Description">
 -----------------------------------------------------------------------------
 <summary>
 Description of the Discount Scheme
 </summary>
	<value>Description of the Discount Scheme</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.DiscountScheme.DiscountSchemeId">
 -----------------------------------------------------------------------------
 <summary>
 A discount Scheme ID
 </summary>
	<value>A Discount Scheme ID Entry</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.DiscountScheme.Entries">
 -----------------------------------------------------------------------------
 <summary>
 A list of Discount Scheme entries
 </summary>
	<value>A list of Discount Scheme Entries</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.DiscountScheme">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.DiscountScheme
 
 -----------------------------------------------------------------------------
 <summary>
 A simple (non volume) discount scheme entry
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountSchemes.Load">
 -----------------------------------------------------------------------------
 <summary>
 Loads a discount Scheme collection from the Database
 </summary>
	<returns>TRUE if Succesful</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountSchemes.Add(MedscreenLib.Glossary.DiscountScheme)">
 -----------------------------------------------------------------------------
 <summary>
 Add a discount scheme to the collection
 </summary>
	<param name="Item">Discount Scheme to add</param>
	<returns>Position in the list of the added item</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountSchemes.FindDiscountScheme(System.Double,System.String,System.String,System.Int32@)">
 -----------------------------------------------------------------------------
 <summary>
 Find a discount scheme
 </summary>
	<param name="Discount">Discount amount to find</param>
	<param name="ItemCode">ItemCode to look for </param>
	<param name="SampleType">Type of discount to look for</param>
	<param name="From">Starting point of search</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountSchemes.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Construct a collection of Discount Schemes
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.DiscountSchemes.Item(System.Int32,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieve an Item from the collection of Discount Schemes
 </summary>
	<param name="index"></param>
	<param name="opt"></param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.DiscountSchemes">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.DiscountSchemes
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Discount Schemes
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountSchemeEntry.ToXML">
 -----------------------------------------------------------------------------
 <summary>
 Convert the Discount Scheme Entry to XML
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountSchemeEntry.Description">
 -----------------------------------------------------------------------------
 <summary>
 Create a description for the scheme 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountSchemeEntry.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create a new Discount Scheme Entry
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.DiscountSchemeEntry.ApplyTo">
 -----------------------------------------------------------------------------
 <summary>
 What the scheme applies to typically a line item but may be a line item group
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.DiscountSchemeEntry.Discount">
 -----------------------------------------------------------------------------
 <summary>
 Discount to apply
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.DiscountSchemeEntry.DiscountSchemeId">
 -----------------------------------------------------------------------------
 <summary>
 Discount Scheme ID
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.DiscountSchemeEntry.DiscountType">
 -----------------------------------------------------------------------------
 <summary>
 Type of Discount 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.DiscountSchemeEntry.EntryNumber">
 -----------------------------------------------------------------------------
 <summary>
 The order of this entry, lower numbers take priority over higher
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.DiscountSchemeEntry">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.DiscountSchemeEntry
 
 -----------------------------------------------------------------------------
 <summary>
 Discount Scheme Entry
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Glossary.DiscountSchemeEntries.DiscountSchemeEntryType.CODE">
	<summary>A line Item Code</summary>
</member><member name="F:MedscreenLib.Glossary.DiscountSchemeEntries.DiscountSchemeEntryType.TYPE">
	<summary>A line Item Group</summary>
</member><member name="T:MedscreenLib.Glossary.DiscountSchemeEntries.DiscountSchemeEntryType">
 -----------------------------------------------------------------------------
 <summary>
 Types of Discount Scheme Entry
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountSchemeEntries.Description">
 -----------------------------------------------------------------------------
 <summary>
 Return a description of the elements  of the scheme 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountSchemeEntries.Add(MedscreenLib.Glossary.DiscountSchemeEntry)">
 -----------------------------------------------------------------------------
 <summary>
 Add a discount scheme entry to the collection
 </summary>
	<param name="Item">Entry to add</param>
	<returns>Position in list</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountSchemeEntries.Load">
 -----------------------------------------------------------------------------
 <summary>
 Load the collection
 </summary>
	<returns>TRUE if succesful</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountSchemeEntries.ToXML">
 -----------------------------------------------------------------------------
 <summary>
 Convert Collection to XML
 </summary>
	<returns>Collection represented as an XML string</returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.DiscountSchemeEntries.#ctor(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Create a new Discount scheme entry collection and load it
 </summary>
	<param name="SchemeId">Scheme Id for this collection</param>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.DiscountSchemeEntries.DiscountSchemeId">
 -----------------------------------------------------------------------------
 <summary>
 Id of the Discount Scheme in use
 </summary>
	<value>Discount Scheme ID</value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.DiscountSchemeEntries.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieves the Discount Scheme Entry by position
 </summary>
	<param name="Index">Position in the Scheme</param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.DiscountSchemeEntries">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.DiscountSchemeEntries
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Discount Scheme Entries 
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountEntry.ToXml(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Convert the Volume Discount Entry to XML
 </summary>
	<param name="CurrencyCode">Which Currency Code are we using (For Example)</param>
	<returns>A string containing XML representation of object</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountEntry.ToXmlExample(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Give an example of the discount scheme
 </summary>
	<param name="CurrencyCode">Currency that example will be in </param>
	<returns>Returns an Example of teh discount scheme</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountEntry.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create a new Volume Discount Scheme Entity
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountEntry.MaxSamples">
 -----------------------------------------------------------------------------
 <summary>
 Maximum number of samples for this discount band
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountEntry.MinSamples">
 -----------------------------------------------------------------------------
 <summary>
 Minimum no of samples for this discount band
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountEntry.MinChargeDiscount">
 -----------------------------------------------------------------------------
 <summary>
 Minimum Charge Discount
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountEntry.SampleDiscount">
 -----------------------------------------------------------------------------
 <summary>
 Discount per sample
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountEntry.Type">
 -----------------------------------------------------------------------------
 <summary>
 Type of Discount scheme
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountEntry.AdditionalCharge">
 -----------------------------------------------------------------------------
 <summary>
 Additional charge for this discount band
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountEntry.ApplyTo">
 -----------------------------------------------------------------------------
 <summary>
 What this band applies to 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountEntry.DiscountSchemeId">
 -----------------------------------------------------------------------------
 <summary>
 The scheme ID this band belongs to 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountEntry.EntryNumber">
 -----------------------------------------------------------------------------
 <summary>
 Band ID 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.VolumeDiscountEntry">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.VolumeDiscountEntry
 
 -----------------------------------------------------------------------------
 <summary>
 A volume Discount Scheme Object
 </summary>
	<remarks>
 Volume discount schemes implement discount banding, each entry is a band in the discount scheme.
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountEntries.Add(MedscreenLib.Glossary.VolumeDiscountEntry)">
 -----------------------------------------------------------------------------
 <summary>
 Add a new Scheme Entry to this collection 
 </summary>
	<param name="item">Scheme Entry to add</param>
	<returns>Position of Added item in list </returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountEntries.Load">
 -----------------------------------------------------------------------------
 <summary>
 Load this collection of Discount Bands
 </summary>
	<returns>TRUE if succesful</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountEntries.TypeInString(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Find out if line item type is in scheme 
 </summary>
	<param name="_type"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/05/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountEntries.ToXml(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Convert entire Scheme into XML, with examples as to the scheme
 </summary>
	<param name="CurrencyCode">Currency for Example</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountEntries.ToXmlExample(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Convert Scheme to an Example of its action in XML
 </summary>
	<param name="CurrencyCode">Currency for Example</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountEntries.#ctor(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Create a new collection of Banded Discount Scheme entries for a particular Scheme
 </summary>
	<param name="SchemeId">The Scheme Id for this collection</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountEntries.DiscountSchemeId">
 -----------------------------------------------------------------------------
 <summary>
 Scheme Id for the collection
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountEntries.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieve an Item from the collection
 </summary>
	<param name="index">Index by position for the item to retrieve</param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.VolumeDiscountEntries">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.VolumeDiscountEntries
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Volume Discount Bands
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountHeader.ToXml(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Convert Scheme to XML calls Entries.ToXml
 </summary>
	<param name="CurrencyCode"></param>
	<returns>An XML representation of the scheme</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountHeader.TypeInScheme(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Find out if line item type is in scheme
 </summary>
	<param name="_type"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/05/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountHeader.ToXmlExample(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Produce an example of this entire Scheme in XML format
 </summary>
	<param name="CurrencyCode"></param>
	<returns>An Example of the scheme in XML</returns>
	<remarks>
     The code calls the Entries.ToXmlExample method for each entry in this scheme. 
 <see cref="!:Glossary.VolumeDiscountEntries.ToXmlExample"/>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountHeader.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Construct a Volume Discount Header Entity
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountHeader.ApplyAllEntries">
 -----------------------------------------------------------------------------
 <summary>
 Apply all the Entries in the Scheme
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountHeader.Description">
 -----------------------------------------------------------------------------
 <summary>
 Description of this Scheme, primarily for the GUI
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountHeader.Entries">
 -----------------------------------------------------------------------------
 <summary>
 A collection of Discount Scheme Entries <see cref="!:Glossary.VolumeDiscountEntries"/>
	</summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountHeader.Identity">
 -----------------------------------------------------------------------------
 <summary>
 Scheme ID for the this Discount Scheme
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountHeader.DiscountSchemeId">
 -----------------------------------------------------------------------------
 <summary>
 Scheme ID (Property Identity is a mirror of this property)
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.VolumeDiscountHeader">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.VolumeDiscountHeader
 
 -----------------------------------------------------------------------------
 <summary>
 Scheme description for Volume (banded) scheme
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Glossary.VolumeDiscountHeaders.IndexBy.SchemeID">
 -----------------------------------------------------------------------------
 <summary>
 Index on the scheme ID
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.VolumeDiscountHeaders.IndexBy">
 -----------------------------------------------------------------------------
 <summary>
 Enumeration for the indexing of the Item code
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountHeaders.Add(MedscreenLib.Glossary.VolumeDiscountHeader)">
 -----------------------------------------------------------------------------
 <summary>
 Add a new Discount Scheme to the collection 
 </summary>
	<param name="item">Discount Scheme to Add</param>
	<returns>Position of Scheme in list</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountHeaders.Load">
 -----------------------------------------------------------------------------
 <summary>
 Load collection of schemes from database
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountHeaders.ToXML(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Convert all schemes into XML
 </summary>
	<param name="CurrencyCode">Currency for examples produced</param>
	<returns>An XML version of all schemes</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.VolumeDiscountHeaders.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create a new collection of Volume discount 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountHeaders.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieves an Volume Discount Scheme from the collection
 </summary>
	<param name="index">Index by position</param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.VolumeDiscountHeaders.Item(System.Int32,MedscreenLib.Glossary.VolumeDiscountHeaders.IndexBy)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieves an Volume Discount Scheme from the collection index by a particular item
 </summary>
	<param name="index">Item to index by</param>
	<param name="opt">Indexing method</param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Changed option to use enumeration</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.VolumeDiscountHeaders">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.VolumeDiscountHeaders
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Volume Discount schemes
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Options.Option_Translate_DueOff(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Converts the DUE_OFF option value in to human readable form
 </summary>
	<param name="optValue"></param>
	<returns></returns>
	<remarks>
   If the customer does not have the DUE_OFF options set, the default value
   from the options table should be passed in.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [25/05/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Options.ToXML">
 -----------------------------------------------------------------------------
 <summary>
 Convert option to XML
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/05/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Options.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create a new option entity
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Options.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Get an option by id
 </summary>
	<param name="id"></param>
	<remarks>
	</remarks>
	<history>
 	[taylor]	11/01/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Options.Edit">
 -----------------------------------------------------------------------------
 <summary>
 Provide editing capability for form 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/05/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Options.DefaultValue">
 -----------------------------------------------------------------------------
 <summary>
 Default value for option
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Options.PhraseCheck">
 -----------------------------------------------------------------------------
 <summary>
 Check to see if phrase type if so load phrase list
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action>
 Phrases are now stored in the reference field</Action></revision>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Options.Update">
 -----------------------------------------------------------------------------
 <summary>
 Update Option 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/06/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Options.Phrases">
 -----------------------------------------------------------------------------
 <summary>
 Phrases associated with phrase type options
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Options.OptionID">
 -----------------------------------------------------------------------------
 <summary>
 Id of option
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Options.Routine">
 -----------------------------------------------------------------------------
 <summary>
 Routine associated with option 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/05/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Options.Library">
 -----------------------------------------------------------------------------
 <summary>
 Library associated with Option 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/05/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Options.HelpComment">
 -----------------------------------------------------------------------------
 <summary>
 Long and boring explanation for option 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/05/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Options.Reference">
 -----------------------------------------------------------------------------
 <summary>
 Reference to other item 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Options.FunctionalGroup">
 -----------------------------------------------------------------------------
 <summary>
 Functional Group that option belongs in 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Options.OptionType">
 -----------------------------------------------------------------------------
 <summary>
 Type of option
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Options.OptionAuthority">
 -----------------------------------------------------------------------------
 <summary>
 Authority level associated  with option 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Options.UserCanEdit(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 The user will be able to edit this option if they are in the view USER_CUST_OPTIONS with this option
 </summary>
	<param name="UserID"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	02/10/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Options.RoleToEdit">
 -----------------------------------------------------------------------------
 <summary>
 Role required to edit the option
 </summary>
	<returns></returns>
	<remarks>
 This is used for the List views so that the users can see which role is required if the user feels they should be 
 able to edit the option but can't.  This is to enable user management of roles
 </remarks>
	<history>
 	[taylor]	03/10/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.Options.OptionDescription">
 -----------------------------------------------------------------------------
 <summary>
 Description associated with option 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/05/2006]</date><Action>Made Read/Write</Action></revision>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.Options">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.Options
 
 -----------------------------------------------------------------------------
 <summary>
 Individual option definitions that are available to customer options
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2005]</date><Action>New fields added (reference and functional group)
 </Action></revision>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Glossary.OptionCollection.GCST_OPTION_RANGE">
	<summary>Option of type range tied to a phrase of the same name</summary>
</member><member name="F:MedscreenLib.Glossary.OptionCollection.GCST_OPTION_BOOL">
	<summary>Option of type Boolean</summary>
</member><member name="F:MedscreenLib.Glossary.OptionCollection.GCST_OPTION_VALUE">
	<summary>Option of type value</summary>
</member><member name="F:MedscreenLib.Glossary.OptionCollection.GCST_OPTION_BOOLVALUE">
	<summary>Option that is both boolean and value</summary>
</member><member name="F:MedscreenLib.Glossary.OptionCollection.GCST_OPTION_BOOLRANGE">
	<summary>Option that is boolean and range, tied to a phrase of the same name</summary>
</member><member name="F:MedscreenLib.Glossary.OptionCollection.GCST_OPTION_MULTI">
	<summary>Option that relates to an item found in a particular table, 
 Reference field stores the table name, OPTION_VALUE_RANGE in the customer option table 
 stores the field value to find (will always be the primary key field </summary>
</member><member name="M:MedscreenLib.Glossary.OptionCollection.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create a new collection 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.OptionCollection.Load">
 -----------------------------------------------------------------------------
 <summary>
 Load a new collection 
 </summary>
	<returns>True if succesful</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.OptionCollection.Add(MedscreenLib.Glossary.Options)">
 -----------------------------------------------------------------------------
 <summary>
 Add an option to the collection 
 </summary>
	<param name="objTest">Option to add </param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.OptionCollection.Remove(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Remove an option from the collection 
 </summary>
	<param name="index"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.OptionCollection.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Get a option by position 
 </summary>
	<param name="index">Position to get </param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.OptionCollection.Item(System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Get an option by type 
 </summary>
	<param name="index"></param>
	<param name="intOpt"></param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.OptionCollection.ToXML">
 -----------------------------------------------------------------------------
 <summary>
 Convert to XML 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [30/05/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.OptionCollection">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.OptionCollection
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of option entities 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Interval.Parse(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Creates an Interval based on the passed string
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
   An exception will be thrown if the format is not recognised.<p/>
   Use IsInterval to determine if a value can be converted to an interval.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [08/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.Interval.IsInterval(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets a value indicating whether the passed string is a valid SM interval
 </summary>
	<param name="value"></param>
	<returns></returns>
   Intervals are in the form "   d HH:mm:ss.ff" to "dddd HH:mm:ss.ff", leading 
   spaces are optional.<p/>
   Note that when writing to a field, the value must be right justified.
 <remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [01/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.Interval">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.Interval
 
 -----------------------------------------------------------------------------
 <summary>
 SM Equivalent of TimeSpan
 </summary>
	<remarks>
 Wraps around TimeSpan structure to allow conversion to / from SM Interval
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [25/05/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.CharRangeValidator.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Create a new validator based on a validation string
 </summary>
	<param name="allowedChars"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [14/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.CharRangeValidator.RemainingChars">
 -----------------------------------------------------------------------------
 <summary>
   The characters in the validation string that were not part of any ranges
 </summary>
	<value></value>
	<remarks>
   In the 'A..Z0..9_-' example, this property would return '_-'
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [14/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.CharRangeValidator.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
   Returns the range at the given index
 </summary>
	<param name="index"></param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [14/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.CharRangeValidator.IsValidValue(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether the passed value complies with the validation string
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
   To comply, each character in the passed string must be inside one of the ranges
   defined in the validation string, or be one of the additional characters in the
   RemainingChars property.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [14/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.CharRangeValidator.CharRange.#ctor(System.Char,System.Char)">
 -----------------------------------------------------------------------------
 <summary>
   Create a new range with the specified minimum and maximum values
 </summary>
	<param name="min"></param>
	<param name="max"></param>
	<remarks>
   No validation is performed to ensure that max is &gt;= min, as many instances
   of this are seen in structure.txt.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [14/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.CharRangeValidator.CharRange.IsInRange(System.Char)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether the passed character is inside the range
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [14/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.CharRangeValidator.CharRange.IsInRange(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether all characters in the passed string are in the range
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [14/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.CharRangeValidator.CharRange">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.CharRangeValidator.CharRange
 
 -----------------------------------------------------------------------------
 <summary>
   Class to validate a character against a character range
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [14/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Glossary.CharRangeValidator">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Glossary.CharRangeValidator
 
 -----------------------------------------------------------------------------
 <summary>
   Class for validating strings against "Allowed Character" strings as used
   in structure.txt and Analysis Component definitions.
 </summary>
	<remarks>
   Validation strings are made up of individual allowable characters, plus ranges
   in the form x..y where x is the first allowable character and y is the last.<p/>
   For example 'A..Z0..9_-' is the validation string used for most identity fields,
   allowing upper case chars, numbers, underscore and hyphen only.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [14/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ConfigItem.GetCurrentConfigValue(System.String)">
	<summary>
   Attempt to retrieve the config value with respect to current user or group settings
 </summary>
	<param name="configID"></param>
	<returns></returns>
	<remarks>
	</remarks>
</member><member name="M:MedscreenLib.Glossary.ConfigItem.Refresh">
 -----------------------------------------------------------------------------
 <summary>
   Refresh the data in the Configuration Item object
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [15/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ConfigItem.Update">
 -----------------------------------------------------------------------------
 <summary>
   Writes new value back to Config_Header table
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [05/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ConfigItem.Identity">
 -----------------------------------------------------------------------------
 <summary>
   Gets the configuration item ID
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [15/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ConfigItem.DefaultValue">
 -----------------------------------------------------------------------------
 <summary>
   Gets the default configuration item value
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [15/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ConfigItem.Modifiable">
 -----------------------------------------------------------------------------
 <summary>
 Indicates whether the configuration item may be modifed
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [15/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ConfigItem.Description">
 -----------------------------------------------------------------------------
 <summary>
 Description of configuration item
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [15/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ConfigItem.UserModifiable">
 -----------------------------------------------------------------------------
 <summary>
 Indicates whether configuration item may have user specific settings
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [15/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ConfigItem.DataType">
 -----------------------------------------------------------------------------
 <summary>
   Data Type configuration item value represents
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [15/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Glossary.ConfigItem.Category">
 -----------------------------------------------------------------------------
 <summary>
   The configuration item category
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [15/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ConfigItem.UserValue(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the user specific configuration item value
 </summary>
	<param name="userID"></param>
	<returns></returns>
	<remarks>
   If nothing is returned, user does not have a specific value, default should be used.
   Note that this function returns the user setting, regardless of the UserModifiable
   flag.  The GetValue function does take this flag into account.
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [15/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Glossary.ConfigItem.GetValue(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the configuration item value to use for the specified user
 </summary>
	<param name="userID"></param>
	<returns></returns>
	<remarks>
   If no user specific value is stored, the default is returned
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [15/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Defaults.CustomerDefault.Load">
 -----------------------------------------------------------------------------
 <summary>
 Get default values 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Defaults.CustomerDefault.Filename">
 -----------------------------------------------------------------------------
 <summary>
 Filename to be used 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Defaults.CustomerDefault.Save">
 -----------------------------------------------------------------------------
 <summary>
 Save default values
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Defaults.CustomerDefault">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Defaults.CustomerDefault
 
 -----------------------------------------------------------------------------
 <summary>
 A class used to manage defaults for a customer type, not intended to be database based but to use XML files
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Defaults.IndustryDefault.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create Industry Default Item 
 </summary>
	<param name="Industry"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Defaults.IndustryDefault.AlcoholCutoff">
 -----------------------------------------------------------------------------
 <summary>
 Default alcohol cutoff 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Defaults.IndustryDefault.BreathAlcoholCutoff">
 -----------------------------------------------------------------------------
 <summary>
 Breath Alcohol cutoff 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Defaults.IndustryDefault.CannabisCutoff">
 -----------------------------------------------------------------------------
 <summary>
 Default cannabis cutoff 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Defaults.IndustryDefault.Industry">
 -----------------------------------------------------------------------------
 <summary>
 Industry 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Defaults.IndustryDefault.CollectionType">
 -----------------------------------------------------------------------------
 <summary>
 Typical collection type 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Defaults.IndustryDefault.TestPanel">
 -----------------------------------------------------------------------------
 <summary>
 Typical testpanel
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Defaults.IndustryDefault.OptionDefaults">
 -----------------------------------------------------------------------------
 <summary>
 Option defaults
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Defaults.IndustryDefault">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Defaults.IndustryDefault
 
 -----------------------------------------------------------------------------
 <summary>
 Defaults for an industry
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Defaults.IndustryDefaultCollection.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create new collection 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [06/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Defaults.IndustryDefaultCollection.Item(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Get item by industry  code 
 </summary>
	<param name="index"></param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [06/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Defaults.IndustryDefaultCollection.Add(MedscreenLib.Defaults.IndustryDefault)">
 -----------------------------------------------------------------------------
 <summary>
 Add an item to collection 
 </summary>
	<param name="item"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Defaults.IndustryDefaultCollection">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Defaults.IndustryDefaultCollection
 
 -----------------------------------------------------------------------------
 <summary>
 Collection of industry defaults 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [06/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Defaults.OptionDefault.OptionId">
 -----------------------------------------------------------------------------
 <summary>
 default option value 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Defaults.OptionDefault.OptionValue">
 -----------------------------------------------------------------------------
 <summary>
 Default option value 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Template.FieldEntryType.AfterEdit">
 -----------------------------------------------------------------------------
 <summary>
   Field value is copied from link table after editing
 </summary>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Template.FieldEntryType.BeforeEdit">
 -----------------------------------------------------------------------------
 <summary>
   Field value is copied from link table before editing
 </summary>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Template.FieldEntryType.Value">
 -----------------------------------------------------------------------------
 <summary>
   Field value is entered directly
 </summary>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.GetTemplate(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the medscreen template with the specified ID
 </summary>
	<param name="templateID"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.GetTemplate(MedscreenLib.Template.TemplateType,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the template of the specified type and ID
 </summary>
	<param name="type"></param>
	<param name="templateID"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.DataAdapter(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the oledbDataAdapter for the specified table within the template
 </summary>
	<param name="tableName"></param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.UpdateDataSet">
 -----------------------------------------------------------------------------
 <summary>
   Writes template changes bck to the database
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.GetData(System.String,System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Retrieve data for the specified row for a multi table template
 </summary>
	<param name="parentTable">The table for which RowID is given</param>
	<param name="rowID"></param>
	<remarks>
   Where a template covers multiple tables, the parent table to which the other
   tables link should be the one passed.
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.GetData(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Retrieves template field data for the specified row
 </summary>
	<param name="rowID"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.Type">
 -----------------------------------------------------------------------------
 <summary>
   Returns the type of template in use
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateID">
 -----------------------------------------------------------------------------
 <summary>
   Gets the template ID in use
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.Fields">
 -----------------------------------------------------------------------------
 <summary>
   Gets all the fields associated with this template
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.Description">
 -----------------------------------------------------------------------------
 <summary>
   Get the template description
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.Title">
 -----------------------------------------------------------------------------
 <summary>
 Get templates title
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.UpdateFromTemplate(MedscreenLib.Template)">
 -----------------------------------------------------------------------------
 <summary>
   Copies data from sticky fields in the passed template
 </summary>
	<param name="oldTemplate"></param>
	<remarks>
   Primarily for use in unpacking, if sample template changes, sticky fields
   are copied to the next template (if they exist) so that data does not need
   to be re-entered.
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.RequiredUnenteredFields">
 -----------------------------------------------------------------------------
 <summary>
   Gets a collection of all mandatory fields not entered
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.ValueEntered(MedscreenLib.Template.TemplateField,System.EventArgs)">
 -----------------------------------------------------------------------------
 <summary>
   Raises event when a field value is entered
 </summary>
	<param name="field"></param>
	<param name="e"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.GetTableList">
 -----------------------------------------------------------------------------
 <summary>
   Gets a list of all tables associated with the template
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.GetFieldList(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets a list of all fields in the template for the specified table
 </summary>
	<param name="tableName"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.CreatePromptControls(System.Windows.Forms.Control,MedscreenLib.Template.LayoutAttribs)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a label and control pair on parentControl for each field
 </summary>
	<param name="parentControl"></param>
	<param name="layout"></param>
	<returns>Rectangle giving size required for parentControl</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.ClearPromptControls(System.Windows.Forms.Control)">
 -----------------------------------------------------------------------------
 <summary>
   Clears any prompts from the parentControl and erases references
 </summary>
	<param name="parentControl"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.FlagPromptErrors(System.Windows.Forms.ErrorProvider)">
 -----------------------------------------------------------------------------
 <summary>
   Sets an error on provider for each incomplete field
 </summary>
	<param name="provider"></param>
	<returns>Number of errors set</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.TemplateFields.RequiredUnenteredFields">
 -----------------------------------------------------------------------------
 <summary>
   Gets a list of all mandatory fields not entered
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateFields.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the template field at the specified position
 </summary>
	<param name="Index"></param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateFields.Item(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Get the template field of the specified name
 </summary>
	<param name="FieldName"></param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateFields.AreSatisfactory">
 -----------------------------------------------------------------------------
 <summary>
 Indicates whether all required fields are entered
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.TemplateFields.ResetValues(System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
 Resets the values of all fields
 </summary>
	<param name="IncludeSticky">True to reset sticky fields also</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.TemplateField.ConvertValue(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Converts the value to a common type for comparison - see cref="Accessioning.Template.TemplateField.ValueEquals"&gt;
 </summary>
	<param name="newValue"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [17/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.TemplateField.#ctor(System.Data.DataSet,System.Data.DataRow)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a new template field based on a row from one of the template field tables
 </summary>
	<param name="originalData"></param>
	<param name="fieldData"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [17/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.TemplateField.ValueEquals(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Indicate whether the passed (value type) object has the same value as this field
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [17/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.Index">
 -----------------------------------------------------------------------------
 <summary>
   Gets the index of this field in the collection
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [17/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.FieldName">
 -----------------------------------------------------------------------------
 <summary>
   Gets the name of the field the temlate field value will be written to
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [17/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.FieldInfo">
 -----------------------------------------------------------------------------
 <summary>
   Gets a MedStructure.StructField object for the destination field
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [17/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.PhraseList">
 -----------------------------------------------------------------------------
 <summary>
   Gets a phrase collection to use with this field
 </summary>
	<value></value>
	<remarks>
   For Medscreen templates, the Phrase_Type field can be filled in to override
   any default phrase list (though it should be a subset of the one defined for
   the field).  It can also be used to limit text entry to phrases for text fields
   in which case the phrase text (not ID) is stored.<p/>
   For other templates, the phrase in the one linked to the field being prompted for.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [20/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.TableName">
 -----------------------------------------------------------------------------
 <summary>
   Gets the name of the table the template field will be written to
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [17/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.LibraryName">
 -----------------------------------------------------------------------------
 <summary>
 Library in use i.e. VGL Library or .Net class
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [12/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.PropertyName">
 -----------------------------------------------------------------------------
 <summary>
   Gets the name of the property this field is linked to
 </summary>
	<value></value>
	<remarks>
   This is taken from the Routine_Name field
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [17/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.EntryType">
 -----------------------------------------------------------------------------
 <summary>
   Indicates how values are entered into the field
 </summary>
	<value></value>
	<remarks>
   See Sample Manager documentation for how templates work
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [17/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.IsLinkedToProperty">
 -----------------------------------------------------------------------------
 <summary>
   Gets a value indicating whether this field links to a .NET property or VGL routine
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.DefaultValue">
 -----------------------------------------------------------------------------
 <summary>
   Gets the default value for this field
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.LinkValue">
 -----------------------------------------------------------------------------
 <summary>
   Gets the link information where cref="Accession.template.TemplateField.EntryType"
   is Before or After edit.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [17/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.LinkTable">
 -----------------------------------------------------------------------------
 <summary>
   Gets the link table name if cref="Accession.template.TemplateField.EntryType"
   is Before or After edit.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [17/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.LinkField">
 -----------------------------------------------------------------------------
 <summary>
   Gets the field name in cref="Accession.Template.TemplateField.LinkTable" if
   cref="Accession.template.TemplateField.EntryType" is Before or After edit.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [17/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.LinkFieldInfo">
 -----------------------------------------------------------------------------
 <summary>
   Gets the StructField object for field cref="Accession.Template.TemplateField.LinkField"
   in table cref="Accession.Template.TemplateField.LinkTable"
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [17/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.DisplayName">
 -----------------------------------------------------------------------------
 <summary>
   Gets the display name (description) for this field
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.IsReadOnly">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether field is for display only
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.IsSticky">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether field value is remembered for subsequent entries
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.IsMandatory">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether field is required
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.IsVisible">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether field should be made visible to user
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.IsDisplay">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether original / default value is displayed to user
 </summary>
	<value></value>
	<remarks>
   For fields that are prompted for (ReadOnly = False) IsDisplay indicates whether
   OriginalValue (or DefaultValue) is displayed in edit control, or is hidden from user.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [21/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.IsEntered">
 -----------------------------------------------------------------------------
 <summary>
   Gets a value indicating whether field value has been entered
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.IsSatisfactory">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether field has sufficient information to be accepted
 </summary>
	<value></value>
	<remarks>
   Non-Mandatory fields are always accepted.<p/>
   Otherwise only fields that have been entered (IsEntered), or where the original
   value is visible (IsVisible) and not blank.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [21/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.HasSelectList">
 -----------------------------------------------------------------------------
 <summary>
   Gets a value indicating whether value should be selected from a list
 </summary>
	<value></value>
	<remarks>
   If property returns True, PromptOptions should return two or more values
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [01/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.PromptOptions">
 -----------------------------------------------------------------------------
 <summary>
   Gets a list of suitable values
 </summary>
	<value></value>
	<remarks>
   If this is a Boolean or Phrase linked field, value can be selected from a list
   rather than being prompted for directly.  See also HasSelectList property.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [01/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.TemplateField.GetValue">
 -----------------------------------------------------------------------------
 <summary>
   Gets a string representation of the value for this field
 </summary>
	<returns></returns>
	<remarks>
   If a value has been entered it is returned, if no value has been entered the
   original value is returned unless blank, in which case the default value is returned.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [21/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.TemplateField.SetValue(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Sets the field value without raising an event or flagging field as entered
 </summary>
	<param name="newValue"></param>
	<remarks>
   Used for setting initial values in code
 </remarks>
	<history>
 	[BOUGHTON]	27/09/2005	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.CurrentValue">
 -----------------------------------------------------------------------------
 <summary>
   Gets the string representation of the field value
 </summary>
	<value></value>
	<remarks>
   For phrase linked fields, the value returned will be either the Phrase Text
   or Phrase ID, depending on the field's PhraseLinkType property.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [01/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.Value">
 -----------------------------------------------------------------------------
 <summary>
   Gets or Sets the object used to define the fields current value
 </summary>
	<value></value>
	<remarks>
   This will normally be a string or Phrase (see MedscreenLib.Glossary).<p/>
   See also CurrentValue property.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [01/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.OriginalValue">
 -----------------------------------------------------------------------------
 <summary>
   Gets the value currently held in the database for this field
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.ValueMatchesOriginal">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether new entry matches original
 </summary>
	<value>Returns True if OriginalValue is blank or CurrentValue = OriginalValue</value>
	<remarks>
   When doing double entry (IsDisplay = False) it is useful to check that the
   value entered by the user matches that already in the field.<p/>
   Note that DefaultValue is never checked against.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [21/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.TemplateField.PromptControl">
 -----------------------------------------------------------------------------
 <summary>
   Gets the contol created by CreatePromptControl
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.TemplateField.CreateLabelControl(MedscreenLib.Template.LayoutAttribs)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a label control to identify the field's prompt control
 </summary>
	<param name="layout"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.TemplateField.FlagPromptError(System.Windows.Forms.ErrorProvider)">
 -----------------------------------------------------------------------------
 <summary>
   Sets an appropriate error on provider for this fields prompt control
 </summary>
	<param name="provider"></param>
	<returns>True if an error was set</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.TemplateField.CreateDataBindings(System.Windows.Forms.Control)">
 -----------------------------------------------------------------------------
 <summary>
   Binds the field to the passed control
 </summary>
	<param name="promptControl"></param>
	<remarks>
   The control should be created using <CRef/>
		<p/>
   The control must be added to the form before data bindings are created.
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.TemplateField.ResetValue(System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
   Sets the field to nothing and marks as unentered
 </summary>
	<param name="IncludeSticky">If False, Sticky fields are not reset</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.TemplateField.ToString">
 -----------------------------------------------------------------------------
 <summary>
   Gets a string represenation of the field in the form "Field Name = 'Value'"
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.LayoutAttribs.#ctor">
 -----------------------------------------------------------------------------
 <summary>
   Default constructor
 </summary>
	<remarks>
   Initialises values to reasonable default values.  Font is left empty, but will
   be copied from the parent control if using Template.CreatePromptControls <p/>
   Default Label and Prompt size is 100 x 20 <p/>
   Default offset and spacing is 8, 8
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.LayoutAttribs.#ctor(System.Windows.Forms.Control,MedscreenLib.Template.TemplateFields)">
 -----------------------------------------------------------------------------
 <summary>
   Constructor - sets font from parentControl and labelSize from maximum field width
 </summary>
	<param name="parentControl"></param>
	<param name="fields"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Template.LayoutAttribs.SetLabelSize(System.Windows.Forms.Control,MedscreenLib.Template.TemplateFields)">
 -----------------------------------------------------------------------------
 <summary>
   Sets Font and Size properties from parentControl and fields collection
 </summary>
	<param name="parentControl"></param>
	<param name="fields"></param>
	<remarks>
   Label and Promt sizes will not be reduced beyond current sized.
   If this is required, set the Label and Prompt to smaller sizes (e.g. 1, 1)
   before calling this method.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.LayoutAttribs.LabelSize">
 -----------------------------------------------------------------------------
 <summary>
   Gets or sets the size to use for prompt labels
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.LayoutAttribs.PromptSize">
 -----------------------------------------------------------------------------
 <summary>
   Gets or sets the size to use for prompt controls
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.LayoutAttribs.Font">
 -----------------------------------------------------------------------------
 <summary>
   Gets or sets the font to use for prompts and labels
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.LayoutAttribs.Offset">
 -----------------------------------------------------------------------------
 <summary>
   Gets or sets the offset used to position controls
 </summary>
	<value></value>
	<remarks>
   Setting this property will reset CurrentY to the new Y offset value
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.LayoutAttribs.ControlSpacing">
 -----------------------------------------------------------------------------
 <summary>
   Gets or sets the spacing used between controls
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.LayoutAttribs.CurrentY">
 -----------------------------------------------------------------------------
 <summary>
   Gets or sets the Y position at which the next control will be created
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Template.LayoutAttribs.TotalWidth">
 -----------------------------------------------------------------------------
 <summary>
   Gets the total width required for creating prompts
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [11/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Template.LayoutAttribs">
 -----------------------------------------------------------------------------
 Project	 : Accessioning
 Class	 : Template.LayoutAttribs
 
 -----------------------------------------------------------------------------
 <summary>
   Holds attributes that determine how template prmopt controls are drawn
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.frmParameter.ParameterName">
	<summary>
 Name of the Parameter
 </summary>
</member><member name="P:MedscreenLib.frmParameter.Value">
	<summary>
 Value both the Default Value (in) and the return (out)
 </summary>
</member><member name="P:MedscreenLib.frmParameter.ShowRemember">
 -----------------------------------------------------------------------------
 <summary>
 Show the remember control or not 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [06/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.frmParameter.Remebered">
 -----------------------------------------------------------------------------
 <summary>
 Do we remember the value between uses 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [06/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.frmParameter.ParameterType">
	<summary>
 The type of the Parameter needed
 </summary>
</member><member name="P:MedscreenLib.frmParameter.Itemlist">
 -----------------------------------------------------------------------------
 <summary>
 List of items
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [21/03/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.frmParameter">
	<summary>
 Form to allow users to enter parameters
 </summary>
</member><member name="F:MedscreenLib.User.SearchType.Identity">
	<summary>Select by Sample Manager ID</summary>
</member><member name="F:MedscreenLib.User.SearchType.NetworkID">
	<summary>Select by Windows ID</summary>
</member><member name="T:MedscreenLib.User.SearchType">
	<summary>Enumeration to aid selecting users</summary>
</member><member name="P:MedscreenLib.User.CurrentUser">
	<summary>
 Get the user who is currently logged in to Windows
 </summary>
	<returns>A User Object</returns>
</member><member name="P:MedscreenLib.User.LoginForm">
	<summary>Exposes the login form</summary>
</member><member name="M:MedscreenLib.User.ValidationService">
	<summary>Exposes User Service on TS01 (SOAP Service)</summary>
</member><member name="M:MedscreenLib.User.WhereClause(MedscreenLib.User.SearchType)">
	<summary></summary>
</member><member name="M:MedscreenLib.User.GetUser(System.String,MedscreenLib.User.SearchType)">
	<summary>
 Get a user by a value and a SearchType <see cref="T:MedscreenLib.User.SearchType"/>
	</summary>
	<param name="Identity">Identity to search on</param>
	<param name="Type">Method to use when searching <see cref="T:MedscreenLib.User.SearchType"/></param>
	<returns>A User Object</returns>
</member><member name="M:MedscreenLib.User.GetCurrentUser">
	<summary>
 Get the user who is currently logged in to Windows
 </summary>
	<returns>A User Object</returns>
</member><member name="M:MedscreenLib.User.GetUsersInRoles(System.String)">
	<summary>
   Get a list of all users in a given role
 </summary>
	<param name="roleIDs" type="String">
   A single role, or comma delimited list of roles
 </param>
	<returns>
   An array of MedscreenLib.User, one entry per user in role
 </returns>
	<remarks>
	</remarks>
</member><member name="M:MedscreenLib.User.GetUsersInRoles(System.String[])">
	<summary>
   Get a list of all users in a given role
 </summary>
	<param name="roleIDs" type="String">
	</param>
	<returns>
   An array of MedscreenLib.User, one entry per user in role
 </returns>
	<remarks>
   Only one entry is returned per user, even if they are in more than one role
 </remarks>
</member><member name="P:MedscreenLib.User.User">
 -----------------------------------------------------------------------------
 <summary>
   Gets or Sets the current user, displaying Login Dialog if required
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Boughton]	14/09/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.User.CurrentUserID">
 -----------------------------------------------------------------------------
 <summary>
   Gets the current user ID, displaying login form if necessary
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Boughton]	23/10/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.User.InnerUser">
 -----------------------------------------------------------------------------
 <summary>
   Gets the current user, without displaying a Login dialog
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Boughton]	14/09/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="E:MedscreenLib.User.BeforeLogin">
 -----------------------------------------------------------------------------
 <summary>
 An event that fires before login
 </summary>
	<param name="sender">The source of the event</param>
	<param name="e">An <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="E:MedscreenLib.User.BeforeLogout">
	<summary>
 An event that fires before logout
 </summary>
	<param name="sender">The source of the event</param>
	<param name="e">An <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data</param>
</member><member name="M:MedscreenLib.User.#ctor(System.Data.DataRow)">
	<summary>
 User's Sample Manager ID
 </summary>
</member><member name="P:MedscreenLib.User.UserID">
	<summary>
 User's Sample Manager ID
 </summary>
</member><member name="P:MedscreenLib.User.FullName">
	<summary>
 User's Full Name
 </summary>
</member><member name="P:MedscreenLib.User.Authority">
	<summary>
 User's Sample Manager Authority level
 </summary>
</member><member name="P:MedscreenLib.User.Department">
	<summary>
 User's Department
 </summary>
</member><member name="P:MedscreenLib.User.Email">
	<summary>
 User's Email Address
 </summary>
</member><member name="P:MedscreenLib.User.Manager">
	<summary>
 User's Manager
 </summary>
</member><member name="P:MedscreenLib.User.WindowsIdentity">
	<summary>
 User's Windows Identity
 </summary>
</member><member name="P:MedscreenLib.User.LoginInfo">
	<summary>
 Get the user's login info
 </summary>
</member><member name="P:MedscreenLib.User.GetValidatedUser">
 -----------------------------------------------------------------------------
 <summary>
   Gets the current user ensuring they have been validated against Active Directory
 </summary>
	<value></value>
	<remarks>
   CurrentUser can return a user even if they have not been validated,
   this method will only return a user object if the user has been validated
   against Active Directory (i.e. entered correct password), otherwise it will
   return Nothing (though CurrentUser will still hold the current user object).
   <para>
   Users can be forced to re-validate themselves periodically by setting the
   MedscreenLib.User.ValidationTimeout propery, or by calling the Validate(True)
   method of the user object.
   </para>
   After sucessful validation the user object returned from this function becomes
    the current user as returned by the CurrentUser property.
 </remarks>
	<history>
 	[Boughton]	14/09/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.User.LogIn">
	<summary>
 Log the user in to the current program
 </summary>
</member><member name="M:MedscreenLib.User.LogOut">
	<summary>
 Log the user out of the current program
 </summary>
</member><member name="P:MedscreenLib.User.IsLoggedIn">
	<summary>
 Is the User logged in
 </summary>
</member><member name="P:MedscreenLib.User.IsValidated">
	<summary>
 See if the user has been validated
 </summary>
</member><member name="P:MedscreenLib.User.LastValidated">
	<summary>
     Time Last validated
 </summary>
</member><member name="M:MedscreenLib.User.Validate">
	<summary>
   Validates this user against Active Directory
 </summary>
	<returns>True if the user was validated against active directory</returns>
	<remarks>
  If user has already been validated, no re-validation takes place.
</remarks>
</member><member name="M:MedscreenLib.User.Validate(System.Boolean)">
	<summary>
   Displays the login dialog set to this user
 </summary>
	<returns>True if the user was validated against active directory</returns>
	<remarks>
  If forcePwdEntry is True, the user must enter their password,
  regardless of whether theyhave already been validated.
 </remarks>
</member><member name="M:MedscreenLib.User.Validate(System.String)">
	<summary>
 Check the supplied password matches the users password
 </summary>
	<param name="Pwd">Password to check</param>
	<returns>TRUE if succesful</returns>
</member><member name="P:MedscreenLib.User.LastMessage">
	<summary>
 Returns last message received
 </summary>
</member><member name="M:MedscreenLib.User.UserLoginInfo.GetUserWithExtraInfo(System.String,System.String)">
	<summary>
 Get program usage about a users
 </summary>
	<param name="Parameter">Parameter to look for in Extra Info</param>
	<param name="Value">Looking for users with a parameter value like this</param>
	<returns>Array of users</returns>
</member><member name="M:MedscreenLib.User.UserLoginInfo.GetUsersInProgram(System.String)">
	<summary>
 Get program usage about a a program
 </summary>
	<param name="ProgramName">Program to find user Information on</param>
	<returns>Array of users</returns>
</member><member name="M:MedscreenLib.User.UserLoginInfo.DataAdapter">
	<summary></summary>
</member><member name="M:MedscreenLib.User.UserLoginInfo.#ctor(System.String,System.String)">
	<summary>Create a new instance
 </summary>
	<param name="ProgramName">Program to find information for</param>
	<param name="UserID">User to obtain information on</param>
</member><member name="P:MedscreenLib.User.UserLoginInfo.ProgramName">
	<summary>Program that we are trying to obtain information on
 </summary>
</member><member name="P:MedscreenLib.User.UserLoginInfo.LastLogin">
	<summary>
 Date and time of last login
 </summary>
</member><member name="P:MedscreenLib.User.UserLoginInfo.ComputerName">
	<summary>Computer this instance is running on</summary>
</member><member name="P:MedscreenLib.User.UserLoginInfo.IsLoggedIn">
	<summary>Is the user this data set belongs to logged in</summary>
</member><member name="M:MedscreenLib.User.UserLoginInfo.LogIn">
	<summary>Log User into program</summary>
</member><member name="M:MedscreenLib.User.UserLoginInfo.LogOut">
	<summary>Log user out of program</summary>
</member><member name="P:MedscreenLib.User.UserLoginInfo.ExtraInfo(System.String)">
	<summary>
 Extra information to record
 </summary>
	<param name="Parameter">Extra informatioin to record</param>
</member><member name="M:MedscreenLib.User.UserLoginInfo.UpdateTable">
	<summary>Update information</summary>
</member><member name="T:MedscreenLib.User.UserLoginInfo">
	<summary>
 Class giving information about users using a program
 </summary>
</member><member name="T:MedscreenLib.User">
	<summary>
 Class dealing with user Logins
 </summary>
</member><member name="M:MedscreenLib.ProgramUsage.#ctor">
	<summary>
 Creates a new Program Usage Object
 </summary>
</member><member name="P:MedscreenLib.ProgramUsage.ProgramName">
	<summary>
 Name of the program in use
 </summary>
</member><member name="P:MedscreenLib.ProgramUsage.UserId">
	<summary>
 Sample Manager User ID
 </summary>
</member><member name="P:MedscreenLib.ProgramUsage.LoginGroup">
	<summary>
 A parameter that may describe a Directory 
 where information can be found or the group of programs 
 this one belongs to
 </summary>
</member><member name="P:MedscreenLib.ProgramUsage.LoggedIn">
	<summary>TRUE = User is logged in to this program</summary>
</member><member name="P:MedscreenLib.ProgramUsage.LastLogin">
	<summary>Date of last login</summary>
</member><member name="P:MedscreenLib.ProgramUsage.ComputerName">
	<summary>Name of computer user is logged in to</summary>
</member><member name="P:MedscreenLib.ProgramUsage.ExtraInfo">
	<summary>Additional information used in the management of the program</summary>
</member><member name="M:MedscreenLib.ProgramUsage.Update">
	<summary>Update information in the database</summary>
	<returns>TRUE if succesful</returns>
</member><member name="P:MedscreenLib.ProgramUsage.DataFields">
	<summary></summary>
</member><member name="T:MedscreenLib.ProgramUsage">
	<summary>Class reflecting Program Usage table
 </summary>
</member><member name="M:MedscreenLib.ProgramUsageList.#ctor">
	<summary>
 Create a new collection of Program Usage objects
 </summary>
</member><member name="M:MedscreenLib.ProgramUsageList.Add(MedscreenLib.ProgramUsage)">
	<summary>
 Add a new item to list
 </summary>
	<param name="Item">ProgramUsage object to add</param>
	<returns>Position of added item in list</returns>
</member><member name="M:MedscreenLib.ProgramUsageList.LoadByUser(System.String)">
	<summary>
 Get a collection of programs belonging to user
 </summary>
	<param name="User">Sample Manager User Id to get the list of progams for</param>
	<returns>TRUE if succesful</returns>
</member><member name="T:MedscreenLib.ProgramUsageList">
	<summary>A collection of ProgramUsage objects <see cref="T:MedscreenLib.ProgramUsage"/></summary>
</member><member name="M:MedscreenLib.FileLogger.#ctor">
	<summary>
 Default constructor
 </summary>
</member><member name="M:MedscreenLib.FileLogger.#ctor(System.String)">
	<summary>
Constructor to specify filename
  </summary>
	<param name="FileName">File to use in the filesystem</param>
</member><member name="M:MedscreenLib.FileLogger.#ctor(System.String,System.String)">
	<summary>
 Constructor to specify filename and path
 </summary>
	<param name="FileName">File to use in the filesystem</param>
	<param name="Path">Path to File</param>
</member><member name="M:MedscreenLib.FileLogger.WriteLog(System.String,System.Diagnostics.EventLogEntryType)">
	<summary>
 WriteLog is derived from the ILog interface
 It must be defined in all classes that implement the ILog Interface
 </summary>
	<param name="OutStream">Stream to write to</param>
	<param name="LogType">Event Log Entry Type</param>
</member><member name="M:MedscreenLib.FileLogger.SetPath(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Set the output path for logging
 </summary>
	<param name="path">Path to set to</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/10/2005]</date><Action>Added</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.FileLogger">
	<summary>
 a file writer utility class that uses the System.IO  library 
 to write to the filesystem It also implements the ILog interface.
  Clients can then use either logger class  interchangeably.
 </summary>
</member><member name="M:MedscreenLib.MedscreenlibConfig.GetConfiguration">
	<summary>
 Accessor function to ensure its is a singleton
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MedscreenLib.MedscreenlibConfig.HyperLinks">
	<summary>
 List of hyperlinks
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MedscreenLib.MedscreenlibConfig.Validation">
 -----------------------------------------------------------------------------
 <summary>
 Used in validating info
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	06/01/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedscreenlibConfig.Servers">
 -----------------------------------------------------------------------------
 <summary>
 Server info
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/03/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedscreenlibConfig">
	<summary>
 Medscreenlib local configuration items
 </summary>
	<remarks></remarks>
</member><member name="M:MedscreenLib.AssemblySettings.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Default constructor 
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	17/03/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.AssemblySettings">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : AssemblySettings
 
 -----------------------------------------------------------------------------
 <summary>
 Class to identify settings for a single assembly 
 </summary>
	<remarks>
 based on code found at http://www.bearcanyon.com/dotnet/#AssemblySettings translation from C#
 </remarks>
	<history>
 	[taylor]	17/03/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.BlobManagement.TableName">
	<summary>
 Table in use
 </summary>
	<value></value>
	<remarks></remarks>
	<revisionHistory></revisionHistory>
</member><member name="M:MedscreenLib.BlobManagement.Save">
	<developer></developer>
	<summary>
 Write data to database
 </summary>
	<returns></returns>
	<remarks></remarks>
	<revisionHistory></revisionHistory>
</member><member name="T:MedscreenLib.BlobManagement">
	<summary>
 A class to handle the BLOB_VALUES table
 </summary>
	<remarks></remarks>
	<revisionHistory></revisionHistory>
	<author></author>
</member><member name="P:MedscreenLib.Network.NetworkDrive.SaveCredentials">
 -----------------------------------------------------------------------------
 <summary>
 Option to save credentials are reconnection...
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Network.NetworkDrive.Persistent">
 -----------------------------------------------------------------------------
 <summary>
 Option to reconnect drive after log off / reboot ...
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Network.NetworkDrive.Force">
 -----------------------------------------------------------------------------
 <summary>
 Option to force connection if drive is already mapped...
 or force disconnection if network path is not responding...
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Network.NetworkDrive.PromptForCredentials">
 -----------------------------------------------------------------------------
 <summary>
 Option to prompt for user credintals when mapping a drive 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Network.NetworkDrive.LocalDrive">
 -----------------------------------------------------------------------------
 <summary>
 Drive to be used in mapping / unmapping...
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Network.NetworkDrive.ShareName">
 -----------------------------------------------------------------------------
 <summary>
 Share address to map drive to.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Network.NetworkDrive.MapDrive">

 Map network drive


</member><member name="M:MedscreenLib.Network.NetworkDrive.MapDrive(System.String)">

 Map network drive (using supplied Password) '''

</member><member name="M:MedscreenLib.Network.NetworkDrive.MapDrive(System.String,System.String)">
 Map network drive (using supplied Username and Password) '''

</member><member name="M:MedscreenLib.Network.NetworkDrive.UnMapDrive">

 Unmap network drive


</member><member name="M:MedscreenLib.Network.NetworkDrive.RestoreDrives">

 Check / restore persistent network drive 
         

</member><member name="M:MedscreenLib.Network.NetworkDrive.ShowConnectDialog(System.Windows.Forms.Form)">

 Display windows dialog for mapping a network drive 
 '''

</member><member name="M:MedscreenLib.Network.NetworkDrive.ShowDisconnectDialog(System.Windows.Forms.Form)">

 Display windows dialog for disconnecting a network drive 
 '''

</member><member name="M:MedscreenLib.Network.NetworkDrive.zMapDrive(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 ' Map network drive
 </summary>
	<param name="psUsername"></param>
	<param name="psPassword"></param>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Network.NetworkDrive.zUnMapDrive(System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
  ' Unmap network drive
 </summary>
	<param name="pfForce"></param>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Network.NetworkDrive.zRestoreDrive">
 -----------------------------------------------------------------------------
 <summary>
 ' Check / Restore a network drive
 </summary>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Network.NetworkDrive.zDisplayDialog(System.Windows.Forms.Form,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 ' Display windows dialog
 </summary>
	<param name="poParentForm"></param>
	<param name="piDialog"></param>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Network.NetworkDrive">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Network.NetworkDrive
 
 -----------------------------------------------------------------------------
 <summary>
 Network interface code
 </summary>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.ts01.Service1.#ctor">
	<remarks/>
</member><member name="E:MedscreenLib.ts01.Service1.CheckPasswordCompleted">
	<remarks/>
</member><member name="E:MedscreenLib.ts01.Service1.CheckEncryptedPasswordCompleted">
	<remarks/>
</member><member name="M:MedscreenLib.ts01.Service1.CheckPassword(System.String,System.String)">
	<remarks/>
</member><member name="M:MedscreenLib.ts01.Service1.BeginCheckPassword(System.String,System.String,System.AsyncCallback,System.Object)">
	<remarks/>
</member><member name="M:MedscreenLib.ts01.Service1.EndCheckPassword(System.IAsyncResult)">
	<remarks/>
</member><member name="M:MedscreenLib.ts01.Service1.CheckPasswordAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:MedscreenLib.ts01.Service1.CheckPasswordAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MedscreenLib.ts01.Service1.CheckEncryptedPassword(System.String,System.String)">
	<remarks/>
</member><member name="M:MedscreenLib.ts01.Service1.BeginCheckEncryptedPassword(System.String,System.String,System.AsyncCallback,System.Object)">
	<remarks/>
</member><member name="M:MedscreenLib.ts01.Service1.EndCheckEncryptedPassword(System.IAsyncResult)">
	<remarks/>
</member><member name="M:MedscreenLib.ts01.Service1.CheckEncryptedPasswordAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:MedscreenLib.ts01.Service1.CheckEncryptedPasswordAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MedscreenLib.ts01.Service1.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:MedscreenLib.ts01.Service1">
	<remarks/>
</member><member name="T:MedscreenLib.ts01.CheckPasswordCompletedEventHandler">
	<remarks/>
</member><member name="P:MedscreenLib.ts01.CheckPasswordCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MedscreenLib.ts01.CheckPasswordCompletedEventArgs">
	<remarks/>
</member><member name="T:MedscreenLib.ts01.CheckEncryptedPasswordCompletedEventHandler">
	<remarks/>
</member><member name="P:MedscreenLib.ts01.CheckEncryptedPasswordCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MedscreenLib.ts01.CheckEncryptedPasswordCompletedEventArgs">
	<remarks/>
</member><member name="P:MedscreenLib.frmEditText.EditText">
	<summary>
 Text to be edited
</summary>
</member><member name="P:MedscreenLib.frmEditText.isReadOnly">
	<summary>
 Indicates whether the form will be in display or edit mode
</summary>
</member><member name="T:MedscreenLib.frmEditText">
	<summary>
 Form for editing text
 </summary>
</member><member name="M:MedscreenLib.Calendar.IsWorkingDay(System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
   Returns True if the passed date is a weekday and not a holiday
 </summary>
	<param name="checkDate"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Calendar.IsWeekDay(System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
   Returns True if the passed date is a weekday, i.e. Mon - Fri
 </summary>
	<param name="checkDate"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Calendar.IsAHoliday(System.DateTime,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Returns True if the passed date is marked as being a holiday in the passed location
 </summary>
	<param name="checkDate"></param>
	<param name="location"></param>
	<returns></returns>
	<remarks>
   Location is the ISO country ID, sometimes followed by a sub region, e.g. UK-NI
   for Northern Ireland.  These are defined in the VGL library lib_Constants.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Calendar.IsAHoliday(System.DateTime,System.String[])">
 -----------------------------------------------------------------------------
 <summary>
   Returns True if the passed date is marked as being a holiday in any of the passed location
 </summary>
	<param name="checkDate"></param>
	<param name="location"></param>
	<returns></returns>
	<remarks>
   Location is the ISO country ID, sometimes followed by a sub region, e.g. UK-NI
   for Northern Ireland.  These are defined in the VGL library lib_Constants.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Calendar.IsAHoliday(System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
   Returns True if the passed date is marked as being a holiday for the UK
 </summary>
	<param name="checkDate"></param>
	<returns></returns>
	<remarks>
   Location is the ISO country ID, sometimes followed by a sub region, e.g. UK-NI
   for Northern Ireland.  These are defined in the VGL library lib_Constants.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Calendar.AddWorkingDays(System.DateTime,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
   Adds the specified number of working days (+ve or -ve) to the passed date
 </summary>
	<param name="fromDate"></param>
	<param name="days"></param>
	<returns></returns>
	<remarks>
   If days is 0, the next working day is returned (or fromDate if it is a working day)
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Calendar.GetWorkingDay(System.DateTime,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
   Returns the nearest working date to fromDate, or fromDate itself if it's a working day
 </summary>
	<param name="fromDate"></param>
	<param name="forward">True to search forward in time, False to search back</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Calendar.AddWorkingDay(System.DateTime,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
   Adds or subtracts one working day to / from fromDate
 </summary>
	<param name="fromDate">Date to add to</param>
	<param name="oneDay">-ve Integer to subtract, any other value to add</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Calendar.EndOfMonth(System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the date at one second before the end of the month.
 </summary>
	<param name="fromDate"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Calendar.StartOfMonth(System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the data at midnight on the first of the month
 </summary>
	<param name="fromDate"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Calendar.TimeInHours(System.DateTime,System.DateTime,System.TimeSpan,System.TimeSpan)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates the amount of time between two dates that is in hours
 </summary>
	<param name="startTime"></param>
	<param name="endTime"></param>
	<param name="dayStart"></param>
	<param name="dayEnd"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [08/01/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Calendar.IsInHours(System.DateTime,System.TimeSpan,System.TimeSpan)">
 -----------------------------------------------------------------------------
 <summary>
  Indicates whether the specified date is in hours
 </summary>
	<param name="checkDate"></param>
	<param name="dayStart">Start of day (usually 8am)</param>
	<param name="dayEnd">End of day (usually 6pm)</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [08/01/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Calendar.MinDate(System.DateTime,System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
   Returns the least of two dates
 </summary>
	<param name="date1"></param>
	<param name="date2"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [08/01/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Calendar.MaxDate(System.DateTime,System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
   Returns the greater of two dates
 </summary>
	<param name="date1"></param>
	<param name="date2"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [08/01/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Calendar">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Calendar
 
 -----------------------------------------------------------------------------
 <summary>
   Class based around Calendar table for identifying public holidays
 </summary>
	<remarks>
 Adding a comment to change the file
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.PhraseSupport.myImageIndex">
 -----------------------------------------------------------------------------
 <summary>
 
 Image index, if a image list is being used
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.PhraseSupport.myFontName">
 -----------------------------------------------------------------------------
 <summary>
 Name of the font
 </summary>
	<remarks>
 this property must be not null if a font is to be used
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.PhraseSupport.myFontSize">
 -----------------------------------------------------------------------------
 <summary>
 Set the size of the font in points
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.PhraseSupport.myFontBold">
 -----------------------------------------------------------------------------
 <summary>
 Font is Bold
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.PhraseSupport.myFontItalic">
 -----------------------------------------------------------------------------
 <summary>
 Font is italic
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.PhraseSupport.myFontStrikeout">
 -----------------------------------------------------------------------------
 <summary>
 Font is truckthrough
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.PhraseSupport.myFontUnderline">
 -----------------------------------------------------------------------------
 <summary>
 Font underline property
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.PhraseSupport.SerialiseToXML">
 -----------------------------------------------------------------------------
 <summary>
 Convert object to XML string, will normally be saved in the GenText2 field of a Phrase
 </summary>
	<returns></returns>
	<remarks>
 will only return something if one of the properties is set
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.PhraseSupport.ForeColor">
 -----------------------------------------------------------------------------
 <summary>
 Fore colour expressed as  a color object
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.PhraseSupport.backColor">
 -----------------------------------------------------------------------------
 <summary>
 Control Back Colour exposed as a colour object
 </summary>
	<value></value>
	<remarks>
 if no color is provided system colours control will be used
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.PhraseSupport.GetFont">
 -----------------------------------------------------------------------------
 <summary>
 create a FONT
 </summary>
	<returns></returns>
	<remarks>
 It is assumed that a font will at least have a name, if the name field is null then no font will be created
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.PhraseSupport.Decorate(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
 decorate controls based on what type they are, some objects are not controls such as treenodes and listviewitems, they derive from different ancestors
 </summary>
	<param name="inControl"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.PhraseSupport.DeSerialiseFromXML(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Convert form an XML string back to object 
 </summary>
	<param name="XMLString"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.PhraseSupport">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : PhraseSupport
 
 -----------------------------------------------------------------------------
 <summary>
 Class to allow phrases to be used for fomatting controls
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Taylor]</Author><date> [15/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Messaging.Messaging.GCST_MessageTypeText">
 -----------------------------------------------------------------------------
 <summary>
 Message Type Text
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Messaging.Messaging.GCST_MessageTypeHTML">
	<summary>HTML message</summary>
</member><member name="F:MedscreenLib.Messaging.Messaging.GCST_MessageTypeSystem">
	<summary>System Message</summary>
</member><member name="F:MedscreenLib.Messaging.Messaging.GCST_MessageTypeAttachment">
	<summary>Attachment</summary>
</member><member name="M:MedscreenLib.Messaging.Messaging.Update">
 -----------------------------------------------------------------------------
 <summary>
 update or insert message
 </summary>
	<returns>TRUE if succesful</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Messaging.Messaging.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Constructor Creates a new messaging entity
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Messaging.Messaging.MessageId">
 -----------------------------------------------------------------------------
 <summary>
 The Id of the Message
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Messaging.Messaging.MessageText">
 -----------------------------------------------------------------------------
 <summary>
 Text of the message
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Messaging.Messaging.Operator">
 -----------------------------------------------------------------------------
 <summary>
 user creating the message 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Messaging.Messaging.Recipient">
 -----------------------------------------------------------------------------
 <summary>
 Person receiving the message
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Messaging.Messaging.Read">
 -----------------------------------------------------------------------------
 <summary>
 Indicates the message has been read
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Messaging.Messaging.Expires">
 -----------------------------------------------------------------------------
 <summary>
 Date message expires
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Messaging.Messaging.Sent">
 -----------------------------------------------------------------------------
 <summary>
 Date Message sent
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Messaging.Messaging.MessageType">
 -----------------------------------------------------------------------------
 <summary>
 Type of Message
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Messaging.Messaging">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Messaging.Messaging
 
 -----------------------------------------------------------------------------
 <summary>
 Deals with the messaging table
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Messaging.MessageList.CreateMessage(System.String,System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Create a Message
 </summary>
	<param name="Message">Message to send</param>
	<param name="recipient">Recipient</param>
	<param name="Originator">Originator</param>
	<param name="DaysBeforeExpires">Number of days before expiry, default = 2</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Messaging.MessageList.SendRoleMessage(System.String,System.String,System.String,System.Int32,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Send a message to a Role
 </summary>
	<param name="Role">Role to send message to</param>
	<param name="Message">Message to send</param>
	<param name="Originator">Originator of the message</param>
	<param name="MaxRecipients">Maximum no of recipients</param>
	<param name="DaysBeforeExpires">Days before message expires</param>
	<returns>TRUE if succesful</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Messaging.MessageList.SendUserMessages(System.String,System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Send a message to a user
 </summary>
	<param name="Users">User to send message to</param>
	<param name="Message">Message to send</param>
	<param name="Originator">Originator of message</param>
	<param name="DaysBeforeExpires">Days before message expires, default = 2</param>
	<returns>TRUE if succesful</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Messaging.MessageList.SendUserMessages(System.String[],System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Send A message to an array of users
 </summary>
	<param name="Users">An array of Recipients</param>
	<param name="Message">Message to send</param>
	<param name="Originator">Person sending Message</param>
	<param name="DaysBeforeExpires">Number of days before message expires, default = 2</param>
	<returns>TRUE if Succesful</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Messaging.MessageList.GetUserMessages(System.String,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
 Get all messages for users
 </summary>
	<param name="User">Recipient of messages</param>
	<param name="UnreadOnly">All messages of just unread, default = TRUE</param>
	<returns>TRUE if succesful</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Messaging.MessageList.Add(MedscreenLib.Messaging.Messaging)">
 -----------------------------------------------------------------------------
 <summary>
 Add a message to the colelction
 </summary>
	<param name="Item">Message to add</param>
	<returns>Position of Added Message in list</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Messaging.MessageList.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Constructor for List
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Messaging.MessageList">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Messaging.MessageList
 
 -----------------------------------------------------------------------------
 <summary>
 A list of messages
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.EventLogger.#ctor">
	<summary>
 default constructor
 </summary>
</member><member name="M:MedscreenLib.EventLogger.#ctor(System.String)">
	<summary>
 this constructor allows client to specify an event source
 </summary>
	<param name="Source">Event Source</param>
</member><member name="M:MedscreenLib.EventLogger.WriteLog(System.String,System.Diagnostics.EventLogEntryType)">
	<summary>
 WriteLog is derived from the ILog interface
 It must be defined in all classes that implement the ILog Interface
 </summary>
	<param name="Info">Information to log</param>
	<param name="LogType">Event Log Entry Type</param>
</member><member name="T:MedscreenLib.EventLogger">
	<summary>
 Event writer utility class that uses the System.diagnostics 
 library to write to the Event Log.
 It also implements the ILog interface.
 Clients can then use either logger class 
 interchangeably.</summary>
	<remarks>
 We use implements statement to implement the iLog interface.
 Note the use of the fully qualified interface name &lt;namespace&gt;.&lt;interfacename&gt;
 </remarks>
</member><member name="F:MedscreenLib.CConnection.useDatabase.LIVE">
	<summary>Live database</summary>
</member><member name="F:MedscreenLib.CConnection.useDatabase.DEV">
	<summary>Development database</summary>
</member><member name="F:MedscreenLib.CConnection.useDatabase.TEST">
	<summary>Test database</summary>
</member><member name="F:MedscreenLib.CConnection.useDatabase.MIGRATION">
	<summary>Test of migrated database</summary>
</member><member name="T:MedscreenLib.CConnection.useDatabase">
	<summary>Which database to use</summary>
</member><member name="P:MedscreenLib.CConnection.DbConnection">
	<summary>
 Connection in use
 </summary>
</member><member name="M:MedscreenLib.CConnection.CompareSchema(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Compare a schema against the current schema value 
 </summary>
	<param name="SchemaVersion">Schema version to compare </param>
	<returns></returns>
	<remarks>
 		Return values &lt;0 indicate current schema is prior to sSchemeID
     	Return values &gt;0 indicate current schema is past sSchemaID
     	Return value 0 indicates a match.
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.CConnection.SchemaMajor">
 -----------------------------------------------------------------------------
 <summary>
 Main setting on version number
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.CConnection.SchemaMinor">
 -----------------------------------------------------------------------------
 <summary>
 Second place setting on version number
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.CConnection.SchemaRelease">
 -----------------------------------------------------------------------------
 <summary>
 Third place setting on schema version number
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.CConnection.DBProvider">
	<summary> The 'Provider' for the connection string
 </summary>
</member><member name="P:MedscreenLib.CConnection.DBDatabase">
	<summary> The database in use
 </summary>
</member><member name="M:MedscreenLib.CConnection.DbDescription">
	<summary> A human readable for the database in use
 </summary>
</member><member name="P:MedscreenLib.CConnection.DBUserName">
	<summary>The user name</summary>
</member><member name="P:MedscreenLib.CConnection.DBPassword">
	<summary>The user's password</summary>
</member><member name="P:MedscreenLib.CConnection.DBInstance(MedscreenLib.CConnection.useDatabase)">
	<summary>The database Instance in use
 </summary>
	<param name="dbInUse">Database in use</param>
</member><member name="P:MedscreenLib.CConnection.DBInstance">
	<summary>The database Instance in use
 </summary>
</member><member name="P:MedscreenLib.CConnection.DBServerName">
	<summary>Database Server in use
 </summary>
</member><member name="P:MedscreenLib.CConnection.DBServerName(MedscreenLib.CConnection.useDatabase)">
	<summary>Database Server in use
 </summary>
	<param name="dbInUse">Database in use</param>
</member><member name="P:MedscreenLib.CConnection.DBServerPath">
	<summary>Server path in the form "\\ServerName\Instance"
 </summary>
</member><member name="P:MedscreenLib.CConnection.DBServerPath(MedscreenLib.CConnection.useDatabase)">
	<summary>Server path in the form "\\ServerName\Instance"
 </summary>
	<param name="dbInUse">Database in use</param>
</member><member name="P:MedscreenLib.CConnection.DatabaseInUse">
	<summary>Database in use
 </summary>
</member><member name="M:MedscreenLib.CConnection.ConnOpen">
	<summary>Open a connection
 </summary>
	<returns>TRUE if Open is succesful</returns>
</member><member name="M:MedscreenLib.CConnection.SetConnOpen">
	<summary>Open the connection
 </summary>
</member><member name="M:MedscreenLib.CConnection.SetConnClosed">
	<summary>Close the connection
 </summary>
</member><member name="M:MedscreenLib.CConnection.NextSequence(System.String,System.Int32)">
	<summary>Get the next value for the supplied Sequence number
 </summary>
	<param name="Sequence">Sequence generator to use</param>
	<param name="Length">Length of string to use, i.e. pad to zeros, default=10</param>
	<returns>Sequence number left padded with Zeros e.g. 0000012345 </returns>
</member><member name="M:MedscreenLib.CConnection.PackageStringList(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Get a comma separated list from server using defined package and library
 </summary>
	<param name="PackageRoutine"></param>
	<param name="_Type"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><date>[02/02/2011]</date><Action>Add alert on package in an indeterminate state</Action></revision>
		<revision><Author>[taylor]</Author><date> [12/09/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.CConnection.PackageStringList(System.String,System.Int32)">
	<developer>[Taylor]</developer>
	<summary>
 Get information from PL/SQL package
 </summary>
	<param name="PackageRoutine"></param>
	<param name="_Type"></param>
	<returns></returns>
	<remarks></remarks>
	<revisionHistory>
		<revision><date>[02/02/2011]</date><Action>Add alert on package in an indeterminate state</Action></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.CConnection.PackageStringList(System.String,Microsoft.VisualBasic.Collection,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
 Returns a Comma separated list by calling a PL/SQl Package, package.Function is supplied together with a collection of parameters.
 Can also be used to return a string from a Package.
 </summary>
	<param name="PackageRoutine"></param>
	<param name="Parameters"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><date>[02/02/2011]</date><Action>Add alert on package in an indeterminate state</Action></revision>
		<revision><Author>[taylor]</Author><date> [20/09/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.CConnection.StringParameter(System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 create a string parameter 
 </summary>
	<param name="Name">name of parameter</param>
	<param name="Value">value of string </param>
	<param name="length">size of string</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [23/06/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.CConnection.BooleanParameter(System.String,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
 Create a parameter to represent a boolean value 
 </summary>
	<param name="Name"></param>
	<param name="Value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [09/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.CConnection.DateParameter(System.String,System.DateTime,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
 create date parameter
 </summary>
	<param name="Name">name of parameter</param>
	<param name="Value">value of parameter</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [23/06/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.CConnection.IntegerParameter(System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 create integer parameter
 </summary>
	<param name="Name">name of parameter</param>
	<param name="Value">value of parameter</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [23/06/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.CConnection">
	<summary>
 Class to provide access to a single data connector for use in all modules
 </summary>
</member><member name="P:MedscreenLib.IniFile.IniElement.Header">
 -----------------------------------------------------------------------------
 <summary>
 Key Header 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.IniFile.IniElement.Item">
 -----------------------------------------------------------------------------
 <summary>
 Key Value
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.IniFile.IniElement">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : IniFile.IniElement
 
 -----------------------------------------------------------------------------
 <summary>
 An single element from an IniFile used with IniCollection <see cref="T:MedscreenLib.IniFile.IniCollection"/>
	</summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniCollection.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Constructor creates a new collection
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniCollection.Add(MedscreenLib.IniFile.IniElement)">
 -----------------------------------------------------------------------------
 <summary>
 Add an IniElement to the collection
 </summary>
	<param name="item">IniElement to add</param>
	<returns>Position of added item collection</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniCollection.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieve an Item from the collection
 </summary>
	<param name="Index">Index of Item to retrieve</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.IniFile.IniCollection">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : IniFile.IniCollection
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of key value pairs used for the section load 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.GetPrivateProfileString(System.String,System.String,System.String,System.String,System.Int32,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Windows built in function
 </summary>
	<param name="lpApplicationName">Long Pointer to Section name</param>
	<param name="lpKeyName">Long Pointer to Key name</param>
	<param name="lpDefault">Long Pointer to Default value</param>
	<param name="lpReturnedString">Long Pointer to Returned Value</param>
	<param name="nSize">Size of Returned sting</param>
	<param name="lpFileName">Long Pointer to Filename</param>
	<returns>0 = success</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.GetPrivateProfileSection(System.String,System.String,System.Int32,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Get a section from a profile file 
 </summary>
	<param name="lpAppName">Long Pointer to Section name</param>
	<param name="lpReturnedString">Long Pointer to returned string terminated with two null strings, separated by null string</param>
	<param name="nSize">Size of returned string</param>
	<param name="lpFileName">Long Pointer to filename</param>
	<returns>A string composed of each of the keys in the section, separated by nul strings, terminated by two null strings</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.GetPrivateProfileInt(System.String,System.String,System.Int32,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Get an integer from the inifile
 </summary>
	<param name="lpApplicationName">Long Pointer to section</param>
	<param name="lpKeyName">Long Pointer to key </param>
	<param name="nDefault">Default return value</param>
	<param name="lpFileName">Long Pointer to filename</param>
	<returns>Value obtained or default</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Write out a string to an inifile
 </summary>
	<param name="lpApplicationName">Long Pointer to section</param>
	<param name="lpKeyName">Long Pointer to key</param>
	<param name="lpString">Long Pointer to string to write</param>
	<param name="lpFileName">Long Pointer to filename</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.WritePrivateProfileSection(System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Write out a section to the inifile
 </summary>
	<param name="lpAppName">Long Pointer to Section</param>
	<param name="lpString">Long Pointer to string contaning section</param>
	<param name="lpFileName">Long Pointer to file name</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.REG_OPTION_NON_VOLATILE">
 -----------------------------------------------------------------------------
 <summary>
 This constant preserves key when system is rebooted.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.REG_OPTION_VOLATILE">
 -----------------------------------------------------------------------------
 <summary>
 'This constant does NOT preserve key when system is rebooted.
 Use this to write temporary values to the registry.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.REG_CREATED_NEW_KEY">
 -----------------------------------------------------------------------------
 <summary>
 New Registry Key created.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.REG_OPENED_EXISTING_KEY">
 -----------------------------------------------------------------------------
 <summary>
 Existing Key opened.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.REG_BINARY">
 -----------------------------------------------------------------------------
 <summary>
 Free form binary.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.REG_DWORD">
 -----------------------------------------------------------------------------
 <summary>
 32-bit number.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.REG_DWORD_BIG_ENDIAN">
 -----------------------------------------------------------------------------
 <summary>
 32-bit number.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.REG_DWORD_LITTLE_ENDIAN">
 -----------------------------------------------------------------------------
 <summary>
 32-bit number (same as REG_DWORD).
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.REG_EXPAND_SZ">
 -----------------------------------------------------------------------------
 <summary>
 Unicode nul terminated string.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.REG_LINK">
 -----------------------------------------------------------------------------
 <summary>
 Symbolic Link (unicode).
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.REG_MULTI_SZ">
 -----------------------------------------------------------------------------
 <summary>
 Multiple Unicode strings.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.REG_RESOURCE_LIST">
 -----------------------------------------------------------------------------
 <summary>
 Resource list in the resource map.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.REG_SZ">
 -----------------------------------------------------------------------------
 <summary>
 Unicode nul terminated string.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.ERROR_SUCCESS">
 -----------------------------------------------------------------------------
 <summary>
 Error return Success
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.IniFile.IniFiles.ERROR_ACCESS_DENIED">
 -----------------------------------------------------------------------------
 <summary>
 Error Access Denied 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.GetProfileString(System.String@,System.String@,System.String@)">
 -----------------------------------------------------------------------------
 <summary>
 Get a string from the a profile 
 </summary>
	<param name="strSectionName">Section in the Ini file</param>
	<param name="strKey">Key to access</param>
	<param name="strFilename">Name of Inifile</param>
	<returns>A string containing the information - Unknown if it fails</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.GetProfileSection(System.String@,System.String@)">
 -----------------------------------------------------------------------------
 <summary>
 Get the contents of a section
 </summary>
	<param name="strSectionName">Name Of Section to retrieve</param>
	<param name="strFilename">Name of Inifile</param>
	<returns>Section as a string</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.ReadString(System.String@,System.String@,System.String@)">
 -----------------------------------------------------------------------------
 <summary>
 Read a string from the class handled inifile
 </summary>
	<param name="strSection">Section to read from </param>
	<param name="strItem">Key to read</param>
	<param name="strDefault">Default value to use</param>
	<returns>The string associate dwith key or default value</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/05/2000 08:33:355]</date><Action>Created</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.ReadSection(System.String@)">
 -----------------------------------------------------------------------------
 <summary>
 Read a section from class inifile return as a VB6 collection
 </summary>
	<param name="strSection">Section to retrieve</param>
	<returns>Section as a collection</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/05/2000 08:33:30]</date><Action>Created</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.ReadSectionCollection(System.String@)">
 -----------------------------------------------------------------------------
 <summary>
 Read a section filling an IniCollection <see cref="T:MedscreenLib.IniFile.IniCollection"/>
	</summary>
	<param name="strSection">Section to retrieve</param>
	<returns>returns an IniCollection</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.ReadInteger(System.String@,System.String@,System.Int32@)">
 -----------------------------------------------------------------------------
 <summary>
 Read an integer from current Class file
 </summary>
	<param name="strSection">Section to read from</param>
	<param name="strItem">Key to read</param>
	<param name="intDefault">Default value</param>
	<returns>Default or value read </returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/05/2000 08:33:28]</date><Action>Created</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.ReadBoolean(System.String@,System.String@,System.Boolean@)">
 -----------------------------------------------------------------------------
 <summary>
 Read a boolean value from Inifile
 </summary>
	<param name="strSection">Section to read from</param>
	<param name="strItem">Key to read</param>
	<param name="blnDefault">Default value</param>
	<returns>TRUE if value is a true string</returns>
	<remarks>
 the values accepted as TRUE are Y, YES, T, TRUE, irrespective of case
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/05/2000 08:33:22]</date><Action>Created</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.WriteProfileString(System.String@,System.String@,System.String@,System.String@)">
 -----------------------------------------------------------------------------
 <summary>
 Write a string back to the Ini file
 </summary>
	<param name="strSectionName">Name of the section</param>
	<param name="strKey">Key within the section</param>
	<param name="strSetting">Value to write</param>
	<param name="strFilename">Filename to write to</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.WriteString(System.String@,System.String@,System.String@)">
 -----------------------------------------------------------------------------
 <summary>
 Write the string to the inifile being handled by this class
 </summary>
	<param name="strSection">Section to Write to</param>
	<param name="strItem">Key within section</param>
	<param name="strValue">Text to write out</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/05/2000 08:33:32]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.WriteInteger(System.String@,System.String@,System.Int32@)">
 -----------------------------------------------------------------------------
 <summary>
 Write an integer to a file
 </summary>
	<param name="strSection">Section to write to</param>
	<param name="strItem">Key to write to </param>
	<param name="intValue">Value to write</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/05/2000 08:33:25]</date><Action>Created</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IniFile.IniFiles.WriteBool(System.String@,System.String@,System.Boolean@)">
 -----------------------------------------------------------------------------
 <summary>
 Write a boolean to IniFile
 </summary>
	<param name="strSection">Section to write to</param>
	<param name="strItem">Key to write to</param>
	<param name="blnValue">Value to be written</param>
	<remarks>
 Writes Y for TRUE and N for FALSE
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/05/2000 08:33:16]</date><Action>Created</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.IniFile.IniFiles.FileName">
 -----------------------------------------------------------------------------
 <summary>
 The File name of the Inifile
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/05/2000 07:59:24]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.IniFile.IniFiles">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : IniFile.IniFiles
 
 -----------------------------------------------------------------------------
 <summary>
 A class emulating Borland's approach to accessing INI files
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action>Commented</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.XmlError.XMLApplicationErrorX.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create Error message object and Open File
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.XmlError.XMLApplicationErrorX.AddErrorXML(System.String,System.String,System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
	</summary>
	<param name="strItem"></param>
	<param name="strType"></param>
	<param name="strInfo"></param>
	<param name="strBarcode"></param>
	<param name="intOpt"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.XmlError.XMLApplicationErrorX">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : XmlError.XMLApplicationError
 
 -----------------------------------------------------------------------------
 <summary>
 Write an error message as XML
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SageConnection.ConnOpen">
 -----------------------------------------------------------------------------
 <summary>
 Attempt to open connection and return status
 </summary>
	<returns></returns>
	<remarks>
 Attempt to open connection and return status
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [27/04/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SageConnection.GetRealState(System.Data.SqlClient.SqlConnection)">
 -----------------------------------------------------------------------------
 <summary>
 Find the real state of the connection
 </summary>
	<param name="dbconnection"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [27/04/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SageConnection.Open(System.Data.SqlClient.SqlConnection)">
 -----------------------------------------------------------------------------
 <summary>
 Attempt to open connection and return status
 </summary>
	<param name="dbConnection"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [27/04/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SageConnection.Open(System.Data.SqlClient.SqlConnection,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Attempt to open connection and return status
 </summary>
	<param name="dbConnection"></param>
	<param name="timout"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [27/04/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.InterfaceHandler.ExitRequested">
 --------------------------------------------------------------------------------
 <summary>
   Gets or Sets a value indicating whether interface should stop
 </summary>
	<value>
	</value>
	<remarks>
   This can be set from code to prevent the interface handler from processing more
   requests, or it can be set from the interface table using request code "EXIT".
 </remarks>
 --------------------------------------------------------------------------------

</member><member name="F:MedscreenLib.InterfaceHandler.InterfaceRequestBase.Direction.Post">
	<summary>
 Request to be posted into an interface table
 </summary>
</member><member name="F:MedscreenLib.InterfaceHandler.InterfaceRequestBase.Direction.Process">
	<summary>
 Request from an interface table to be processed
 </summary>
</member><member name="M:MedscreenLib.InterfaceHandler.InterfaceRequestBase.OnProcess">
 -----------------------------------------------------------------------------
 <summary>
   Override this sub to process interface requests
 </summary>
	<remarks>
   If the interface is one-way only, there is no need to override this sub.
   Any code to handle interface requests should go here.
 </remarks>
	<history>
 	[BOUGHTON]	19/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.InterfaceHandler.InterfaceRequestBase.HasResponse">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether a posted request has been responded to
 </summary>
	<value></value>
	<remarks>
   Only applicable to Post Requests, not to Process Requests
 </remarks>
	<history>
 	[BOUGHTON]	19/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.InterfaceHandler.InterfaceRequestBase.IsComplete">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether request was processed sucessfully
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Boughton]	14/08/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.InterfaceHandler.InterfaceRequestBase.Failed">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether request failed
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Boughton]	14/08/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Groups.GROUPDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:MedscreenLib.Groups._OptionDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:MedscreenLib.Groups.GROUPRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:MedscreenLib.Groups._OptionRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:MedscreenLib.Groups.GROUPRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:MedscreenLib.Groups._OptionRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:MedscreenLib.Groups">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="M:MedscreenLib.Print.PrintSupport.GetPrinterPort(System.String@)">
 -----------------------------------------------------------------------------
 <summary>
 Find what port a printer (defined by logical name) prints too
 </summary>
	<param name="strPrintername"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	16/11/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Print.PrintSupport.FindPrinter(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Returns a OS based logical name for a printer given a Sample Manager Device NAme
 </summary>
	<param name="strShortName"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	16/11/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Print.PrintSupport">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Print.PrintSupport
 
 -----------------------------------------------------------------------------
 <summary>
 Support  for printers
 </summary>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	16/11/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedStructure.PhraseLinkType">
 -----------------------------------------------------------------------------
 <summary>
   Enumaration of phrase link types
 </summary>
	<remarks>
   Fields can either contain the Phrase Text or Phrase Identity.
    <UL>
			<LI>Normal - Browse on Text, field contains Identity</LI>
			<LI>Text - Browse on Text, field contains Text</LI>
			<LI>Identity - Browse on Identity, field contains Identity</LI>
		</UL>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.MedStructure.SMFieldDataType.Unknown">
 -----------------------------------------------------------------------------
 <summary>
   Datatype can not be determined
 </summary>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.MedStructure.SMFieldDataType.Interval">
 -----------------------------------------------------------------------------
 <summary>
   Intervals are stored as VarChar(16) in form "dddd hh:mm:ss.ff"
 </summary>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.MedStructure.SMFieldDataType.PackedDec">
 -----------------------------------------------------------------------------
 <summary>
   Packed Decimal is stored as VarChar(10), but are numeric
 </summary>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.MedStructure.SMFieldDataType.Boolean">
 -----------------------------------------------------------------------------
 <summary>
   Boolean values are stored as VarChar(1) with values 'T' or 'F' -
   see MedscreenLib contstants C_dbTrue and C_dbFalse.
 </summary>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.MedStructure.SMFieldDataType.Identity">
 -----------------------------------------------------------------------------
 <summary>
   Identity values are stored as VarChar(n) but are upper case
 </summary>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedStructure.SMFieldDataType">
 -----------------------------------------------------------------------------
 <summary>
   Enumeration of incompatible field data types 
 </summary>
	<remarks>
   Some datatypes used in structure.txt do not map directly to the data type used
   in the database.  This enumeration contains an entry for each field datatype
   used by Sample Manager.<p/>
   Those with values &gt;= 10 have individual comments and are ones that don't map
   directly to the database data type.<p/>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.Tables">
 -----------------------------------------------------------------------------
 <summary>
   Gets the list of tables currently loaded
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.GetTable(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets table details for the specified table
 </summary>
	<param name="tableName"></param>
	<returns>Nothing if table unknown</returns>
	<remarks>
   If the table is not already loaded, it's details are retrieved and it is added
   to the Tables collection.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.GetField(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets details for the specified field
 </summary>
	<param name="tableName"></param>
	<param name="fieldName"></param>
	<returns></returns>
	<remarks>
   If the table is not already loaded, it's details are retrieved before
   returning the field.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.SetField(System.Data.DataRow,System.String,System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Sets the field in the passed datarow to the specified value
 </summary>
	<param name="row">Row containing field to set</param>
	<param name="field">Name of field to set</param>
	<param name="value">Value for field</param>
	<remarks>
   Value is automatically formatted for the field, so for example a boolean value
   will be converted to 'T' or 'F' and Packed Decimal fields will be padded correctly.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [24/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.CreateRecentView(System.String,System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a view on active and recent committed tables
 </summary>
	<param name="activeTable"></param>
	<returns>Name of the view created in the form Recent(TableName)_View </returns>
	<remarks>
   The active and current committed tables are included in the view.  If the 
   current committed table has been in use less than a month, the previous 
   committed table is also included.<p/>
   Where tables do not have committed versions, the view will contain only the
   active table.<p/>
   A Table_Name field is included in the view indicating the table each row was
   sourced from.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.CreateRecentView(System.String,System.DateTime,System.DateTime,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a view on active and recent committed table
 </summary>
	<param name="activeTable"></param>
	<returns>Name of the view created in the form Recent(TableName)_View </returns>
	<remarks>
   The active and current committed tables are included in the view.  If the 
   current committed table has been in use less than a month, the previous 
   committed table is also included.<p/>
   Where tables do not have committed versions, the view will contain only the
   active table.<p/>
   A Table_Name field is included in the view indicating the table each row was
   sourced from.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.GetTableName(System.String,System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the committed table name for a given date
 </summary>
	<param name="activeTable"></param>
	<param name="tableDate"></param>
	<returns></returns>
	<remarks>
   The routine automatically works out whether 1 or 3 committed table sets were
   in use for the year and returns the appropriate table for the date diven.<p/>
   If the passed table name does not a have committ table for the data given,
   the table name is returned as passed.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.TableExists(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether the specified table exists in the current schema
 </summary>
	<param name="tableName"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [13/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.ViewExists(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether the specified table exists in the current schema
 </summary>
	<param name="viewName"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [13/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.GetCommittedTables(System.String,System.Boolean,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
   Lists the committed versions of the specified active table
 </summary>
	<param name="activeTable"></param>
	<param name="includeActive">True to list the active table as well</param>
	<returns></returns>
	<remarks>
   Only tables that exist within the current schema are included.  If the active
   table does not exist, it will not be returned, even if includeActive is True.<p/>
   Committed tables are assumed to be in the form C_TABLExxxx, this may need revising
   for the new LIMS, depending on our new naming convention.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [13/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.FindTablesWhere(System.String,System.String,System.Object[],System.Int32,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
	</summary>
	<param name="activeTable" type="String"></param>
	<param name="whereClause" type="String"></param>
	<param name="paramValues" type="Object"></param>
	<param name="maxCount" type="Int32"></param>
	<param name="minYear" type="Int32"></param>
	<returns>
	</returns>
	<remarks>
	</remarks>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.Parser.ParseStructure(MedscreenLib.MedConnection)">
 -----------------------------------------------------------------------------
 <summary>
   Create table and column comments for specified database instance
 </summary>
	<param name="instance"></param>
	<returns>The parser object created</returns>
	<remarks>
   Although the object is returned, the processing has already been done.<p/>
   To create a parser based on an instance without doing any work use
   <code>dim myParse as New Parser(instance)</code> 
   where instance is a member of the CConnection.UseDatabase enumeration
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.Parser.ReadSection(System.String@,System.Int32@)">
 -----------------------------------------------------------------------------
 <summary>
   Returns the next section of the file from startPos
 </summary>
	<param name="text">The text to search</param>
	<param name="startPos">Position to start searching</param>
	<returns>Section between startPos and next ; character</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [25/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.Parser.GetItemName(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Returns the name of the table or field defined in definition
 </summary>
	<param name="definition">A section (from ReadSection)</param>
	<returns></returns>
	<remarks>
   Table and field names are always returned trimmed an in upper case
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [25/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.Parser.StripComments(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Removes all comments enclosed in curly braces from internal structure data
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [25/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.Parser.GetOleDbType(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the nearest matching oleDBType to the specified type name
 </summary>
	<param name="dataType"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [01/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.Parser.#ctor(MedscreenLib.MedConnection)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a new parser for the specified database instance
 </summary>
	<param name="Instance"></param>
	<remarks>
   The created object can be used to parse the structure.txt file, or to retrieve
   table and column information from database comments.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.Parser.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a new parser for the specified structure file
 </summary>
	<param name="StructureFile"></param>
	<remarks>
   The created object can only be used for parsing the structure file, it cannot
   retrieve data from database comments.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.Parser.ParseStructure">
 -----------------------------------------------------------------------------
 <summary>
   Parses the structure file
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.Parser.Tables">
 -----------------------------------------------------------------------------
 <summary>
   Returns a collection of all tables from structure
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.Parser.CreateComments">
 -----------------------------------------------------------------------------
 <summary>
   Creates comments on the current instance
 </summary>
	<returns></returns>
	<remarks>
   Parser must have been created using the constructor taking a MedConnection
   object.  If the structure File constructor was used, call CreateComments
   passing in an oleDbConnection.
 </remarks>
	<history>
 	[Boughton]	24/09/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.Parser.CreateComments(System.Data.OleDb.OleDbConnection)">
 -----------------------------------------------------------------------------
 <summary>
   Attempts to create table and column comments in the database
 </summary>
	<param name="Connection"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedStructure.Parser">
 -----------------------------------------------------------------------------
 Project	 : Structure Parser
 Class	 : Parser
 
 -----------------------------------------------------------------------------
 <summary>
   Gets table, field and link information from table structure definition
   for storing in User_Tab_Comments and User_Col_Comments.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [25/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.#ctor(System.String,System.String,System.Int32@)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a new table based on structure file
 </summary>
	<param name="definition"></param>
	<param name="text"></param>
	<param name="startPos"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a new table based on database comments
 </summary>
	<param name="TableName"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructTable.Name">
 -----------------------------------------------------------------------------
 <summary>
   Gets the name of the table
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructTable.ParentName">
 -----------------------------------------------------------------------------
 <summary>
   Gets the name of the parent table for committed tables
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [20/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructTable.ParentTable">
 -----------------------------------------------------------------------------
 <summary>
   Gets the parent table for committed tables
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [20/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructTable.IsChild">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether this table is a child (committed) table
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [20/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructTable.ActiveTable">
 -----------------------------------------------------------------------------
 <summary>
   Gets the Active table for this table
 </summary>
	<value></value>
	<remarks>
   For tables without children (committed tables) this instance is returned.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [20/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructTable.Fields">
 -----------------------------------------------------------------------------
 <summary>
   Gets the collection of fields for the table
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.PopulateDataRow(System.Data.DataRow)">
 -----------------------------------------------------------------------------
 <summary>
   Populates the data row with default values for this table
 </summary>
	<param name="newrow"></param>
	<remarks>
   Field values are only changed if they are Null and field has a default
   value defined in structure.txt
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [08/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.BuildSelect(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Builds a select query based on primary key and browse information
 </summary>
	<param name="linkField"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetFields(System.Collections.IEnumerable)">
 -----------------------------------------------------------------------------
 <summary>
   Gets a field collection from an enumeratable list of field names
 </summary>
	<param name="fields"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [16/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetFields(System.Data.DataColumnCollection)">
 -----------------------------------------------------------------------------
 <summary>
   Gets a field collection from a data column collection
 </summary>
	<param name="fields"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [16/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetFields(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets a field collection from a comma delimited list of field names
 </summary>
	<param name="fields"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [16/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.Getfields(MedscreenLib.MedStructure.StructField[])">
 -----------------------------------------------------------------------------
 <summary>
   Gets a FieldCollection from an array of fields
 </summary>
	<param name="fields"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [16/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetSelectCommand(MedscreenLib.MedStructure.StructField.FieldCollection,MedscreenLib.MedStructure.StructField.FieldCollection)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a select command based on the fields required with specified where clause
 </summary>
	<param name="fields"></param>
	<returns></returns>
	<remarks>
   Note field names are formatted lower case in the SQL command for ease of
   readability when debugging.  Primary Keys are always included at the start of
   the select statement.
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [06/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetSelectCommand(MedscreenLib.MedStructure.StructField.FieldCollection,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a select command based on the fields required with specified where clause
 </summary>
	<param name="fields"></param>
	<returns></returns>
	<remarks>
   Note field names are formatted lower case in the SQL command for ease of
   readability when debugging.  Primary Keys are always included at the start of
   the select statement.
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [06/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetParameters(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets parameters required for a where clause
 </summary>
	<param name="whereClause"></param>
	<returns></returns>
	<remarks>
   Rather simplistic approach, but works for majority of queries.  Feel free
   to enhance!
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [24/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetSelectCommand(MedscreenLib.MedStructure.StructField.FieldCollection)">
 -----------------------------------------------------------------------------
 <summary>
   Gets a select command based on the fields required
 </summary>
	<param name="fields"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [16/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetSelectCommand">
 -----------------------------------------------------------------------------
 <summary>
   Creates a select command for all fields in the table
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetUpdateCommand(MedscreenLib.MedStructure.StructField.FieldCollection,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Creates an update command based on the fields required
 </summary>
	<param name="fields"></param>
	<returns></returns>
	<remarks>
   Note field names are formatted lower case in the SQL command for ease of
   readability when debugging.
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [06/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetUpdateCommand(MedscreenLib.MedStructure.StructField.FieldCollection)">
 -----------------------------------------------------------------------------
 <summary>
   Creates an update command based on the fields required
 </summary>
	<param name="fields"></param>
	<returns></returns>
	<remarks>
   Note field names are formatted lower case in the SQL command for ease of
   readability when debugging.
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [06/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetUpdateCommand">
 -----------------------------------------------------------------------------
 <summary>
   Creates an update command for all fields in the table
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetInsertCommand(MedscreenLib.MedStructure.StructField.FieldCollection)">
 -----------------------------------------------------------------------------
 <summary>
   Creates an insert command based on the fields required
 </summary>
	<param name="fields"></param>
	<returns></returns>
	<remarks>
   The primary key field(s) are always listed whether or not they are included
   in the passed collection.<p/>
   Note: field names are formatted lower case in the SQL command for ease of
   readability when debugging.
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [06/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetInsertCommand">
 -----------------------------------------------------------------------------
 <summary>
   Creates an insert command for all fields in the table
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [10/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetDeleteCommand">
 -----------------------------------------------------------------------------
 <summary>
   Creates a delete command based on primary key(s) in table
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [23/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.KeyCount">
 -----------------------------------------------------------------------------
 <summary>
   Returns the number of primary key fields in the table
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructTable.PrimaryKeys">
 -----------------------------------------------------------------------------
 <summary>
   Returns an array of the table's primary key fields in order
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructTable.HasFieldFor(MedscreenLib.MedStructure.FieldUsage)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether table has a field for the specified use
 </summary>
	<param name="use"></param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [02/01/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetFieldsWithUse(MedscreenLib.MedStructure.FieldUsage)">
 -----------------------------------------------------------------------------
 <summary>
   Gets an array of all fields with the specified use
 </summary>
	<param name="use"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [02/01/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructTable.BrowseFields">
 -----------------------------------------------------------------------------
 <summary>
   Returns an array of the table's browse fields in order
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetRelations">
 -----------------------------------------------------------------------------
 <summary>
   Returns an array of data relations for the table
 </summary>
	<returns></returns>
	<remarks>
   Note that the relations must be added to a dataset before they can be used.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [30/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetFieldFor(MedscreenLib.MedStructure.FieldUsage)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the first field with the specified use
 </summary>
	<param name="use"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [02/01/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.GetLinkToTable(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the StructField that links to the specified table
 </summary>
	<param name="tableName"></param>
	<returns>Nothing if no link found</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.Comments">
 -----------------------------------------------------------------------------
 <summary>
   Gets the string that is written to the User_Tab_Comments table
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.ToString">
 -----------------------------------------------------------------------------
 <summary>
   Gets a string detailing the table name and comments
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.CreateComments(System.Data.OleDb.OleDbConnection)">
 -----------------------------------------------------------------------------
 <summary>
   Creates entries in User_Tab_Comments and User_Col_Comments
 </summary>
	<param name="OpenConnection"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructTable.CreateComment(System.Data.OleDb.OleDbConnection)">
 -----------------------------------------------------------------------------
 <summary>
   Creates an entry in User_Tab_Comments
 </summary>
	<param name="OpenConnection"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedStructure.StructTable.TableCollection">
 -----------------------------------------------------------------------------
 Project	 : Structure Parser
 Class	 : Parser.StructTable.TableCollection
 
 -----------------------------------------------------------------------------
 <summary>
   Collection of tables
 </summary>
	<remarks>
   This class is a strongly typed wrapper around HashTable
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedStructure.StructTable">
 -----------------------------------------------------------------------------
 Project	 : Structure Parser
 Class	 : Parser.StructTable
 
 -----------------------------------------------------------------------------
 <summary>
   Contains name and fields information for a table<p/>
   Contains routines to parse table definition to extract the data.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [25/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructField.#ctor(MedscreenLib.MedStructure.StructTable@,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a new field with information based on structure definition file
 </summary>
	<param name="parentTable"></param>
	<param name="definition"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructField.#ctor(MedscreenLib.MedStructure.StructTable,System.Data.DataRow)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a field based on information in User_Col_Comments data row
 </summary>
	<param name="parentTable"></param>
	<param name="fieldData"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.UsedFor">
 -----------------------------------------------------------------------------
 <summary>
   A bitwise value indicating the special uses of this field
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [02/01/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.IsUsedFor(MedscreenLib.MedStructure.FieldUsage)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether the field is used for the specified purpose
 </summary>
	<param name="use"></param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [02/01/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.Table">
 -----------------------------------------------------------------------------
 <summary>
   Gets the table to which this field belongs
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.Name">
 -----------------------------------------------------------------------------
 <summary>
   Gets the field name
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.Link">
 -----------------------------------------------------------------------------
 <summary>
   Gets a string in the form Table.Field if field is linked to another table
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.LinkField">
 -----------------------------------------------------------------------------
 <summary>
   Field in parent table for which this field is a foreign key
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.LinkTable">
 -----------------------------------------------------------------------------
 <summary>
   Gets the table in which LinkField exists
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructField.ToString">
 -----------------------------------------------------------------------------
 <summary>
   Gets details of this field and it's comments
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.Identifier">
 -----------------------------------------------------------------------------
 <summary>
   Returns an identifier in the form TableName.ColumnName
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [30/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.Comments">
 -----------------------------------------------------------------------------
 <summary>
   Gets the string that is written to User_Col_Comments
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.SMDataType">
 -----------------------------------------------------------------------------
 <summary>
   Gets the data type specified in structure.txt
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [30/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.DBDataType">
 -----------------------------------------------------------------------------
 <summary>
   Gets the oracle data type used for this field
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [30/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.IsPrimaryKey">
 -----------------------------------------------------------------------------
 <summary>
   Gets a valie indicating whether this field is a primary key
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.KeyIndex">
 -----------------------------------------------------------------------------
 <summary>
   Gets the position of this field within the Primary Key fields for this table
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.IsOrder">
 -----------------------------------------------------------------------------
 <summary>
   Gets a value indicating whether this field is the default for ordering
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.IsDisplay">
 -----------------------------------------------------------------------------
 <summary>
   Gets a value indicating whether this field is normally included on browses
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.DisplayIndex">
 -----------------------------------------------------------------------------
 <summary>
   Gets the (column) position for this field when browsing
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.IsPhraseLinked">
 -----------------------------------------------------------------------------
 <summary>
   Gets a value indicating whether this field links to a phrase
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.PhraseLink">
 -----------------------------------------------------------------------------
 <summary>
   Gets a value identifying how this field links to a phrase
 </summary>
	<value></value>
	<remarks>
   Fields can either contain the Phrase Text or Phrase Identity.
    <UL>
			<LI>Normal - Browse on Text, field contains Identity</LI>
			<LI>Text - Browse on Text, field contains Text</LI>
			<LI>Identity - Browse on Identity, field contains Identity</LI>
		</UL>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.PhraseType">
 -----------------------------------------------------------------------------
 <summary>
   Gets the Phrase this field links to
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.HasDefaultValue">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether a default value is specified for this field
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [08/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.DefaultValue">
 -----------------------------------------------------------------------------
 <summary>
   Gets the default value for this field
 </summary>
	<value></value>
	<remarks>
   Some data fields have a default of Now + Interval.  The default value will
   be calculated at the time this property is called.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [08/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.SelectClause">
 -----------------------------------------------------------------------------
 <summary>
   Returns an outline select clause for browsing on linked table
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.AllowedChars">
 -----------------------------------------------------------------------------
 <summary>
   Gets a string representing characters allowed in this field
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.CharValidator">
 -----------------------------------------------------------------------------
 <summary>
    Gets the character validator for Allowed Chars
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [14/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.TrueWord">
 -----------------------------------------------------------------------------
 <summary>
   Gets the True word for boolean types
 </summary>
	<value></value>
	<remarks>
   The True and False words are only used for user data entry.  The values stored
   in the database field will be C_dbTrue or C_dbFalse.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [08/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.FalseWord">
 -----------------------------------------------------------------------------
 <summary>
   Gets the False word for boolean types
 </summary>
	<value></value>
	<remarks>
   The True and False words are only used for user data entry.  The values stored
   in the database field will be C_dbTrue or C_dbFalse.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [08/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedStructure.StructField.PhraseList">
 -----------------------------------------------------------------------------
 <summary>
   Returns the PhraseCollection for the phrase used by this field
 </summary>
	<value></value>
	<remarks>
   The PhraseCollection holds a list of Phrase objects (phrase entries), one
   for each entry in the phrase table under the relevant phrase_type.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructField.CreateComment(System.Data.OleDb.OleDbConnection)">
 -----------------------------------------------------------------------------
 <summary>
   Creates an entry in User_Col_Comments
 </summary>
	<param name="OpenConnection"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructField.GetRelation">
 -----------------------------------------------------------------------------
 <summary>
   Gets a data relation object linking this field to it's parent table
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [30/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructField.IsValidValue(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether the passed value is valid for this field
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [01/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructField.IsValidValue(System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether the passed value is valid for this field
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [01/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructField.IsValidValue(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether the passed value is valid for this field
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [01/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructField.IsValidValue(System.Char)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether the passed value is valid for this field
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [01/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructField.IsValidValue(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether the passed object is valid for this field
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
   This routine attempts to convert the value into one of the types supported
   by this method's overloads and return the value from that method.<p/>
   Failing that it returns True for NULL values in Non Primary Key fields.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [01/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructField.IsValidString(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether the passed string only contains allowed characters
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [08/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructField.FormatValue(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Formats the passed value into an object for assigning to field value
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [20/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedStructure.StructField.SetField(System.Data.DataRow,System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Sets the value for this field in the passed data row
 </summary>
	<param name="row">Data row to populate</param>
	<param name="value">Value for field</param>
	<remarks>
   Value is automatically formatted for the field, so for example a boolean value
   will be converted to 'T' or 'F' and Packed Decimal fields will be padded correctly.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [24/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedStructure.StructField.FieldCollection">
 -----------------------------------------------------------------------------
 Project	 : Structure Parser
 Class	 : Parser.StructTable.FieldCollection
 
 -----------------------------------------------------------------------------
 <summary>
   Collection of fields
 </summary>
	<remarks>
   This class is a strongly typed wrapper around IndexedCollection
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedStructure.StructField">
 -----------------------------------------------------------------------------
 Project	 : Structure Parser
 Class	 : Parser.StructField
 
 -----------------------------------------------------------------------------
 <summary>
   Holds name and link information on a field<p/>
   Contains code to parse field definitions to extract this data.
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [25/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedStructure">
 -----------------------------------------------------------------------------
 <summary>
   Contains shared methods for retrieving table and field information
 </summary>
	<remarks>
   Gets table, field and link information from comments as created by the Parser
   for the current database instance as specified by CConnection.DatabaseInUse.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [25/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Comment.CommentOn.Sample">
	<summary>
 Comment on a sample
 </summary>
	<remarks></remarks>
</member><member name="F:MedscreenLib.Comment.CommentOn.Case">
	<summary>
 Comment on a customer sample case
 </summary>
	<remarks></remarks>
</member><member name="F:MedscreenLib.Comment.CommentOn.Customer">
	<summary>
 Comment on a customer
 </summary>
	<remarks></remarks>
</member><member name="F:MedscreenLib.Comment.CommentOn.Collection">
	<summary>
 Comment on a collection 
 </summary>
	<remarks></remarks>
</member><member name="F:MedscreenLib.Comment.CommentOn.SMID">
	<summary>
 Comment on a SMID
 </summary>
	<remarks></remarks>
</member><member name="T:MedscreenLib.Comment.CommentOn">
	<summary>
 Types of comment that can exist 
 </summary>
	<remarks></remarks>
</member><member name="M:MedscreenLib.Comment.LinkField(MedscreenLib.Comment.CommentOn)">
	<summary>
 Field in the parent table to which this comment is linked (i.e it resolves the foriegn key
 </summary>
	<param name="linkTo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MedscreenLib.Comment.LinkName(System.String,System.String@)">
	<summary>
 Name by which the link is known
 </summary>
	<param name="linkField"></param>
	<param name="keyID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MedscreenLib.Comment.CreateComment(MedscreenLib.Comment.CommentOn,System.String,System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Create a comment in the Med_Comments table
 </summary>
	<param name="linkTo"></param>
	<param name="linkKey"></param>
	<param name="comment"></param>
	<param name="userID"></param>
	<remarks>
	</remarks>
	<history>
 	[Boughton]	20/09/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Comment.Text">
	<summary>
 Text of the comment 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MedscreenLib.Comment.LinksTo">
	<summary>
 Field value which the comment is linked to the parent table by 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MedscreenLib.Comment.LinkKey">
	<summary>
 Field name to which this row is linked 
 </summary>
	<value></value>
	<returns></returns>
	<remarks>Link is constructed in the form table.fieldname</remarks>
</member><member name="P:MedscreenLib.Comment.Index">
	<summary>
 Indexor primary key of the data table
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MedscreenLib.Comment.Type">
	<summary>
 Comment type
 </summary>
	<value></value>
	<returns></returns>
	<remarks>Within a comment class comments can be of different types, 
 for example within customer comments their might be comments relating to reports sent or to creation of the account </remarks>
</member><member name="P:MedscreenLib.Comment.TypeText">
	<summary>
 Descriptive explanation of the type of the comment <see cref="T:MedscreenLib.Comment.CommentType"/>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MedscreenLib.Comment.Created">
	<summary>
 Date created
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MedscreenLib.Comment.CreatedBy">
	<summary>
 The user creating the comment 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MedscreenLib.Comment.UserID">
	<summary>
 User to whom the comment has been passed for action 
 </summary>
	<value></value>
	<returns></returns>
	<remarks>This field is really only used for 'action' comments such as the problem resolution comments withing collections</remarks>
</member><member name="P:MedscreenLib.Comment.Deleted">
	<summary>
 This comment has been deleted
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MedscreenLib.Comment.ModifiedBy">
	<summary>
 Person who has last changed the data
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MedscreenLib.Comment.ToString">
	<summary>
 Default representation of the comment 
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MedscreenLib.Comment.Update(System.String)">
	<summary>
 Method to write data back to the table
 </summary>
	<param name="userID"></param>
	<remarks>As the data may have come from a non updatable view a command is constructed and executed any errors are rethrown
 </remarks>
</member><member name="M:MedscreenLib.Comment.Collection.Dispose">
	<summary>
 Handles the idispose method
 </summary>
	<remarks>The use of iDispose enables better clean up of unmanaged objects such as data adaptors</remarks>
</member><member name="M:MedscreenLib.Comment.Collection.#ctor(MedscreenLib.Comment.CommentOn,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Load all comments for a specified business object
 </summary>
	<param name="linkTo"></param>
	<param name="linkKey"></param>
	<remarks>
	</remarks>
	<history>
 	[Boughton]	20/09/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Comment.Collection.#ctor(MedscreenLib.Comment.CommentOn,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Load all comments of a specific type for a business object
 </summary>
	<param name="linkTo"></param>
	<param name="linkKey"></param>
	<param name="commentType"></param>
	<remarks>
	</remarks>
	<history>
 	[Boughton]	20/09/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Comment.Collection.SetParams(System.Object[])">
	<summary>
 Set any parameters of the command object 
 </summary>
	<param name="parameters"></param>
	<remarks></remarks>
</member><member name="M:MedscreenLib.Comment.Collection.Load">
	<summary>
 Load the collection from the database according to the parameters this collection has been initialised to deal with
 </summary>
	<remarks></remarks>
</member><member name="M:MedscreenLib.Comment.Collection.Load(System.String)">
	<summary>
 Load a collection for a particular comment type
 </summary>
	<param name="commentType"></param>
	<remarks></remarks>
</member><member name="M:MedscreenLib.Comment.Collection.Load(System.String,System.String)">
	<summary>
 Load all values for a particular LinkField value
 </summary>
	<param name="linkTo"></param>
	<param name="linkKey"></param>
	<remarks></remarks>
</member><member name="M:MedscreenLib.Comment.Collection.Load(System.String,System.String,System.String)">
	<summary>
 Load all values for a particular linkkey value and comment type
 </summary>
	<param name="linkTo"></param>
	<param name="linkKey"></param>
	<param name="commentType"></param>
	<remarks></remarks>
</member><member name="M:MedscreenLib.Comment.Collection.Load(MedscreenLib.Comment.CommentOn,System.String)">
	<summary>
	</summary>
	<param name="linkTo"></param>
	<param name="linkKey"></param>
	<remarks></remarks>
</member><member name="P:MedscreenLib.Comment.Collection.CurrentLink">
	<summary>
 Returns current active link field 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MedscreenLib.Comment.Collection.CurrentKey">
	<summary>
 Returns current active link ID
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MedscreenLib.Comment.Collection.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the item at the specified position,
   NOT the comment with the specified Comment No
 </summary>
	<param name="index"></param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Boughton]	27/09/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Comment.Collection.IndexOf(MedscreenLib.Comment)">
	<summary>
 Location of a comment in the collection
 </summary>
	<param name="cmt"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MedscreenLib.Comment.Collection.Items(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Returns an array of comments of the specified type
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Boughton]	07/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Comment.Collection.ToXML">
 -----------------------------------------------------------------------------
 <summary>
 Function to return the Contents of the collection as XML
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	26/09/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Comment.Collection">
	<summary>
 Collection of comments 
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.frmHTMLView.Document">
	<summary>
 Raw HTML to display
 </summary>
</member><member name="P:MedscreenLib.frmHTMLView.URL">
	<summary>
 URL to display
 </summary>
</member><member name="T:MedscreenLib.frmHTMLView">
	<summary>
 Form to display HTML where an HTML viewer is not available, either using raw HTML 
 </summary>
</member><member name="P:MedscreenLib.frmLogin.SelectedUser">
	<summary>
 User who is logged in
 </summary>
</member><member name="T:MedscreenLib.frmLogin">
	<summary>Form to provide login to programs requiring login</summary>
</member><member name="P:MedscreenLib.RandomNumbers.WordTemplate">
	<summary>
 Template to be used for Word Document
 </summary>
	<value></value>
	<remarks></remarks>
	<revisionHistory></revisionHistory>
</member><member name="P:MedscreenLib.RandomNumbers.Title">
	<summary>
 Title of the Random Number List
 </summary>
	<value></value>
	<remarks></remarks>
	<revisionHistory>
		<revision><created>20-Mar-2011</created><Author>Taylor</Author></revision>
	</revisionHistory>
</member><member name="P:MedscreenLib.RandomNumbers.Header">
	<summary>
 Header to be used in customer report
 </summary>
	<value></value>
	<remarks></remarks>
	<revisionHistory>
		<revision><created>29-Mar-2011</created><Author>Taylor</Author></revision>
	</revisionHistory>
</member><member name="P:MedscreenLib.RandomNumbers.Columns">
	<summary>
 description of Columns in body
 </summary>
	<value></value>
	<remarks></remarks>
	<revisionHistory>
		<revision><created>29-Mar-2011</created><Author>Taylor</Author></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.RandomNumbers.GetBlob(System.String)">
	<developer></developer>
	<summary>
 retreive template from DB
 </summary>
	<param name="BlobId"></param>
	<remarks></remarks>
	<revisionHistory>
		<revision><created>30-Mar-2011</created><Author>Taylor</Author></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.RandomNumbers.UpdateCustomer">
	<developer></developer>
	<summary>
 update the value in Cust_coll_info
 </summary>
	<remarks></remarks>
	<revisionHistory>
		<revision><created>30-Mar-2011</created><Author>Taylor</Author></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.RandomNumbers.SerialiseToString">
	<developer></developer>
	<summary>
 Serialise class to a string
 </summary>
	<returns></returns>
	<remarks></remarks>
	<revisionHistory>
		<revision><created>30-Mar-2011</created><Author>Taylor</Author></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.RandomNumbers.WriteToDb">
	<developer></developer>
	<summary>
 Write template to DB
 </summary>
	<returns></returns>
	<remarks>Cust Coll info.ramdom numbers is also set</remarks>
	<revisionHistory>
		<revision><created>30-Mar-2011</created><Author>Taylor</Author></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.RandomNumbers.ReadFromDB">
	<developer></developer>
	<summary>
 Read a random number template from DB and deserialise
 </summary>
	<returns></returns>
	<remarks></remarks>
	<revisionHistory>
		<revision><created>30-Mar-2011</created><Author>Taylor</Author></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.RandomNumbers.GetCustomerBlobID">
	<developer></developer>
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
	<revisionHistory>
		<revision><created>30-Mar-2011</created><Author>Taylor</Author></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.RandomNumbers.TotalHeaderColumns">
	<developer></developer>
	<summary>
	</summary>
	<returns></returns>
	<remarks></remarks>
	<revisionHistory>
		<revision><created>30-Mar-2011</created><Author>Taylor</Author></revision>
	</revisionHistory>
</member><member name="T:MedscreenLib.RandomNumbers">
	<summary>
	</summary>
	<remarks></remarks>
	<revisionHistory></revisionHistory>
	<author></author>
</member><member name="P:MedscreenLib.RandomNumberColumn.From">
	<summary>
 Maximum   Random number to generate
 </summary>
	<value></value>
	<remarks></remarks>
	<revisionHistory></revisionHistory>
</member><member name="P:MedscreenLib.RandomNumberColumn.GroupDescription">
	<summary>
 Description for group 
 </summary>
	<value></value>
	<remarks></remarks>
	<revisionHistory></revisionHistory>
</member><member name="P:MedscreenLib.RandomNumberColumn.Index">
	<summary>
 Position of Column Group
 </summary>
	<value></value>
	<remarks></remarks>
	<revisionHistory></revisionHistory>
</member><member name="T:MedscreenLib.RandomNumberColumn">
	<summary>
 A group of columns 
 </summary>
	<remarks></remarks>
	<revisionHistory></revisionHistory>
	<author></author>
</member><member name="M:MedscreenLib.RSSFEEDS.RSS.GetFeed">
 -----------------------------------------------------------------------------
 <summary>
 Get feed from Website
 </summary>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	14/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.RSSFEEDS.RSSCollection.Add(MedscreenLib.RSSFEEDS.RSSItem)">
 -----------------------------------------------------------------------------
 <summary>
 Add an item to collection 
 </summary>
	<param name="Item"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	14/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.RSSFEEDS.RSSCollection.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Item in collection 
 </summary>
	<param name="Index"></param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	14/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.RSSFEEDS.RSSItem.#ctor(System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create new item 
 </summary>
	<param name="Link"></param>
	<param name="Title"></param>
	<param name="Description"></param>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	14/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.RSSFEEDS.RSSItem.Link">
 -----------------------------------------------------------------------------
 <summary>
 Link to item 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	14/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.RSSFEEDS.RSSItem.Title">
 -----------------------------------------------------------------------------
 <summary>
 Title of Item 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	14/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.RSSFEEDS.RSSItem.Description">
 -----------------------------------------------------------------------------
 <summary>
 Description of Item 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	14/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.RSSFEEDS.RSSItem">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : RSSFEEDS.RSSItem
 
 -----------------------------------------------------------------------------
 <summary>
 Item descripbing a RSS envelope
 </summary>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	14/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.ReportMenus.MenuItemDataTable">
	<summary>
Represents the strongly named DataTable class.
</summary>
</member><member name="T:MedscreenLib.ReportMenus.MenuItemRow">
	<summary>
Represents strongly named DataRow class.
</summary>
</member><member name="T:MedscreenLib.ReportMenus.MenuItemRowChangeEvent">
	<summary>
Row event argument class
</summary>
</member><member name="T:MedscreenLib.ReportMenus">
	<summary>
Represents a strongly typed in-memory cache of data.
</summary>
</member><member name="T:MedscreenLib.MenuHandle">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : DynamicMenu
 
 -----------------------------------------------------------------------------
 <summary>
 A class that provides menus built from an XML file 
 </summary>
	<remarks>
 &lt;MenuItem id="Set a&amp;greed costs" OnClick="mnuCollAgreedCosts_" Tag="M"&gt;
 is a typical entry the id will be the menu text, the onclick is the menu handler, note the trailing _, 
 the actual signature in the code should be of the form 'onclick_Click'
 </remarks>
	<history>
 	[Taylor]	26/11/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.frmOutputSelect.PrinterOutputTo">
 -----------------------------------------------------------------------------
 <summary>
 Output the following info
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/01/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.frmOutputSelect.txtDestination_Enter(System.Object,System.EventArgs)">
	<summary>
 Created by taylor on ANDREW at 19/01/2007 10:28:12
     Entering destination text box
 </summary>
	<param name="sender" type="Object">
		<para>
		</para>
	</param>
	<param name="e" type="EventArgs">
		<para>
		</para>
	</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>taylor</Author><date> 19/01/2007</date><Action></Action></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.frmOutputSelect.PopulateInstalledPrintersCombo">
	<summary>
 Created by taylor on ANDREW at 19/01/2007 10:31:16
     Populate list of installed Printers
 </summary>
	<remarks>
 Gets information from the printers table
 </remarks>
	<revisionHistory>
		<revision><Author>taylor</Author><date> 19/01/2007</date><Action></Action></revision>
	</revisionHistory>
</member><member name="P:MedscreenLib.frmOutputSelect.OutputMethod">
	<summary>
 Output method
 </summary>
</member><member name="P:MedscreenLib.frmOutputSelect.OutputMethodByType">
	<summary>
 Output destination represented by <see cref="T:MedscreenLib.Constants.SendMethod"/>
	</summary>
</member><member name="P:MedscreenLib.frmOutputSelect.OutputDestination">
	<summary>
 Where to print to
 </summary>
</member><member name="M:MedscreenLib.frmOutputSelect.cbOption_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Created by taylor on ANDREW at 19/01/2007 10:12:37
     Deal with selected index changing
 </summary>
	<param name="sender" type="Object">
		<para>
		</para>
	</param>
	<param name="e" type="EventArgs">
		<para>
		</para>
	</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>taylor</Author><date> 19/01/2007</date><Action></Action></revision>
	</revisionHistory>
</member><member name="F:MedscreenLib.frmOutputSelect.m_intAddressID">
	<summary>
     Private address ID variable
 </summary>
</member><member name="F:MedscreenLib.frmOutputSelect.m_objAddress">
	<summary>
     Private address object variable
 </summary>
</member><member name="P:MedscreenLib.frmOutputSelect.AddressID">
	<summary>
     Property to return the address id.
 </summary>
</member><member name="T:MedscreenLib.frmOutputSelect">
	<summary>
 Output method and if print which printer
 </summary>
</member><member name="M:MedscreenLib.ts011.CardiffService.#ctor">
	<remarks/>
</member><member name="E:MedscreenLib.ts011.CardiffService.GetReceivedSamplesCompleted">
	<remarks/>
</member><member name="E:MedscreenLib.ts011.CardiffService.GetReceivedSamplesBySMIDProfileCompleted">
	<remarks/>
</member><member name="E:MedscreenLib.ts011.CardiffService.GetReceivedSamplesByCMCompleted">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.GetReceivedSamples(System.DateTime,System.String)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.BeginGetReceivedSamples(System.DateTime,System.String,System.AsyncCallback,System.Object)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.EndGetReceivedSamples(System.IAsyncResult)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.GetReceivedSamplesAsync(System.DateTime,System.String)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.GetReceivedSamplesAsync(System.DateTime,System.String,System.Object)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.GetReceivedSamplesBySMIDProfile(System.DateTime,System.String,System.String)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.BeginGetReceivedSamplesBySMIDProfile(System.DateTime,System.String,System.String,System.AsyncCallback,System.Object)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.EndGetReceivedSamplesBySMIDProfile(System.IAsyncResult)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.GetReceivedSamplesBySMIDProfileAsync(System.DateTime,System.String,System.String)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.GetReceivedSamplesBySMIDProfileAsync(System.DateTime,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.GetReceivedSamplesByCM(System.String,System.String)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.BeginGetReceivedSamplesByCM(System.String,System.String,System.AsyncCallback,System.Object)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.EndGetReceivedSamplesByCM(System.IAsyncResult)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.GetReceivedSamplesByCMAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.GetReceivedSamplesByCMAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:MedscreenLib.ts011.CardiffService.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:MedscreenLib.ts011.CardiffService">
	<remarks/>
</member><member name="T:MedscreenLib.ts011.GetReceivedSamplesCompletedEventHandler">
	<remarks/>
</member><member name="P:MedscreenLib.ts011.GetReceivedSamplesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MedscreenLib.ts011.GetReceivedSamplesCompletedEventArgs">
	<remarks/>
</member><member name="T:MedscreenLib.ts011.GetReceivedSamplesBySMIDProfileCompletedEventHandler">
	<remarks/>
</member><member name="P:MedscreenLib.ts011.GetReceivedSamplesBySMIDProfileCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MedscreenLib.ts011.GetReceivedSamplesBySMIDProfileCompletedEventArgs">
	<remarks/>
</member><member name="T:MedscreenLib.ts011.GetReceivedSamplesByCMCompletedEventHandler">
	<remarks/>
</member><member name="P:MedscreenLib.ts011.GetReceivedSamplesByCMCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:MedscreenLib.ts011.GetReceivedSamplesByCMCompletedEventArgs">
	<remarks/>
</member><member name="M:MedscreenLib.SendLogInfo.ToXML">
 -----------------------------------------------------------------------------
 <summary>
 Convert data to XML 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SendLogInfo.Update">
 -----------------------------------------------------------------------------
 <summary>
 Update collection 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SendLogInfo.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create a new send log item
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SendLogInfo.#ctor(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Add a send log by ID
 </summary>
	<param name="newId"></param>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	21/11/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.SendLogInfo.ID">
 -----------------------------------------------------------------------------
 <summary>
 Id of send log item 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.SendLogInfo.Filename">
 -----------------------------------------------------------------------------
 <summary>
 Filename associated with item
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.SendLogInfo.Status">
 -----------------------------------------------------------------------------
 <summary>
 Status of item
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.SendLogInfo.SendMethod">
 -----------------------------------------------------------------------------
 <summary>
 The way in which the item has been sent out from Medscreen
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.SendLogInfo.SentOn">
 -----------------------------------------------------------------------------
 <summary>
 Date report was sent 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.SendLogInfo.SendingProgram">
 -----------------------------------------------------------------------------
 <summary>
 Program sending the report out 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.SendLogInfo.ReceivingAddress">
 -----------------------------------------------------------------------------
 <summary>
 Address sent to
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.SendLogInfo.ReferenceID">
 -----------------------------------------------------------------------------
 <summary>
 What object id has caused this to be sent
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.SendLogInfo.ReferenceTo">
 -----------------------------------------------------------------------------
 <summary>
 Item type that has been sent, for use when there are multiple types for a refrence id
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.SendLogInfo">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : SendLogInfo
 
 -----------------------------------------------------------------------------
 <summary>
 Class representing an element in a send log file 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SendLogCollection.Add(MedscreenLib.SendLogInfo)">
 -----------------------------------------------------------------------------
 <summary>
 Add a send log item to collection
 </summary>
	<param name="item">item to add</param>
	<returns>Position of added item in the collection</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SendLogCollection.Load">
 -----------------------------------------------------------------------------
 <summary>
 load collection or part of the data from the database
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SendLogCollection.ToXML">
 -----------------------------------------------------------------------------
 <summary>
 Convert to XML
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SendLogCollection.CreateSendLog">
 -----------------------------------------------------------------------------
 <summary>
 Create a new send log item 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SendLogCollection.LogEmailToOfficer(System.String,System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Log an Email to an Officer
 </summary>
	<param name="CMID">Collection ID</param>
	<param name="Recipients">Sent To </param>
	<param name="SendingProgram">Program sending it defaults to "Collection Manager"</param>
	<param name="ReferenceTo">Type of item logged defaults to "Officer Comment"</param>
	<returns>True if succesful</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SendLogCollection.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 create a new send log collection (empty)
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SendLogCollection.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create a new send log collection populating it from a reference
 </summary>
	<param name="Reference">Refernce to use</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.SendLogCollection.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Get a Send Log item from the collection
 </summary>
	<param name="Index">Position of item required</param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.SendLogCollection.Reference">
 -----------------------------------------------------------------------------
 <summary>
 reference item used 
 </summary>
	<value></value>
	<remarks>Will fill the collection using reference
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.SendLogCollection">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : SendLogCollection
 
 -----------------------------------------------------------------------------
 <summary>
 Collection of send log items 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.frmOptions._Option">
 -----------------------------------------------------------------------------
 <summary>
 Expose option 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/05/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Exceptions.ExceptionCollection.MaxSeverity">
 -----------------------------------------------------------------------------
 <summary>
   Gets the maximum (worst) severity of all exceptions in the collection
 </summary>
	<value></value>
	<remarks>
   Exceptions that do not inherit from AccessionException as considered Fatal.
 </remarks>
	<history>
 	[Boughton]	16/08/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Exceptions.ExceptionCollection">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : ExceptionCollection
 
 -----------------------------------------------------------------------------
 <summary>
   Class to hold a collection of Exceptions.
 </summary>
	<remarks>
   This class is intended to work with the MedException class to provide 
   severity information.  All other exception types are considered to have 
   a severity of Fatal.
 </remarks>
	<history>
 	[Boughton]	02/10/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.WebCacheElement.Save(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Save the element in Cache
 </summary>
	<param name="Text"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	11/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.WebCacheElement.Read">
 -----------------------------------------------------------------------------
 <summary>
 Get this element
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	11/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WebCacheElement.FileName">
 -----------------------------------------------------------------------------
 <summary>
 Filename of the cache element 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	11/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.WebCacheElement">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : WebCacheElement
 
 -----------------------------------------------------------------------------
 <summary>
 Class to manage elements added to the web cache
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	11/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.WebCache.Clear">
 -----------------------------------------------------------------------------
 <summary>
 Clear the contents of the cache
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	13/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WebCache.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Find an item by its numeric index
 </summary>
	<param name="index"></param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	13/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WebCache.Item(System.String,MedscreenLib.WebCache.IndexBy)">
 -----------------------------------------------------------------------------
 <summary>
 Find the item by one of its properties
 </summary>
	<param name="Index">What to look for </param>
	<param name="indexby">How to index </param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	13/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.WebCache.Add(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Add an item into the cache
 </summary>
	<param name="Hyperlink"></param>
	<param name="Text"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	13/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.WebCache">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : WebCache
 
 -----------------------------------------------------------------------------
 <summary>
 Manage the web cache
 </summary>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	13/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Medscreen.Dquote">
	<summary>The double quote character "</summary>
</member><member name="F:MedscreenLib.Medscreen.DatabaseVersionParts.Whole">
	<summary>Whole of ID "</summary>
</member><member name="F:MedscreenLib.Medscreen.DatabaseVersionParts.Major">
	<summary>Major part "</summary>
</member><member name="F:MedscreenLib.Medscreen.DatabaseVersionParts.Minor">
	<summary>Minor part (second bit) "</summary>
</member><member name="F:MedscreenLib.Medscreen.DatabaseVersionParts.Release">
	<summary>Release (Third Part) "</summary>
</member><member name="T:MedscreenLib.Medscreen.DatabaseVersionParts">
	<summary>Database version parts "</summary>
</member><member name="F:MedscreenLib.Medscreen.MyTypes.typString">
	<summary>String Return</summary>
</member><member name="F:MedscreenLib.Medscreen.MyTypes.typDate">
	<summary>Date Return</summary>
</member><member name="F:MedscreenLib.Medscreen.MyTypes.typeInteger">
	<summary>Integer Return</summary>
</member><member name="F:MedscreenLib.Medscreen.MyTypes.typBoolean">
	<summary>Boolean Return</summary>
</member><member name="F:MedscreenLib.Medscreen.MyTypes.typItem">
	<summary>Boolean Return</summary>
</member><member name="T:MedscreenLib.Medscreen.MyTypes">
	<summary>
     Mytpes enumeration of types supported by the parameter retriever
 </summary>
</member><member name="M:MedscreenLib.Medscreen.SpellItOut(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Spell out a string as text 
 </summary>
	<param name="inWord"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	02/01/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.AddCountry(System.String,System.Int32)">
	<summary>
 Add International Dialling code to phone numbers
 </summary>
	<param name="strPhone">Phone number to add dialling code to</param>
	<param name="intCountry">International Dialling Code</param>
	<returns>Formatted International number</returns>
</member><member name="M:MedscreenLib.Medscreen.AddUpdateField(System.String,System.Object,System.Char,System.Int32)">
	<summary>
 Adds a field to an update string
 </summary>
	<param name="strFieldName">Name of teh field to add</param>
	<param name="instance">Instance to add to</param>
	<param name="chTerminator">Terminator to use</param>
	<param name="intMaxLen">Maximum length of variable</param>
	<returns>Formatted string</returns>
	<remarks>deprecated do not use</remarks>
</member><member name="M:MedscreenLib.Medscreen.Capitalise(System.String)">
	<summary>
 Capitalise the supplied string
 </summary>
	<param name="strIn">String to capitialise</param>
	<returns>Capitalised string</returns>
</member><member name="M:MedscreenLib.Medscreen.PurgeFiles(System.String,System.DateTime,System.String)">
	<summary>
 Purge files from named directory
 </summary>
	<param name="Path">Path to directory</param>
	<param name="Before">Date before which to purge</param>
	<param name="Mask">Mask of files which to purge</param>
	<returns>Void</returns>
</member><member name="M:MedscreenLib.Medscreen.CompareVersions(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 		Compares version numbers in form a[.b[.c[.d[...]]]]
 </summary>
	<param name="Version1"></param>
	<param name="Version2"></param>
	<returns></returns>
	<remarks>		If the number of points in one schema exceeds that in the other, the former
	is considered greater.<p/>
	Comparison starts with the first point and only continues until the values
	differ.<p/>
 The return value is of the form [Difference].[Point] where Point is the
 number of the point at which versions differ.  If versions have different
 numbers of points, Point will be 0.
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.WindowsUser">
	<summary>
 Function that returns the current logged in user
 </summary>
	<returns>Current logged in user as a string</returns>
</member><member name="M:MedscreenLib.Medscreen.GetMappingName(System.Object)">
	<summary>
 Return the mapping name of an object
 </summary>
	<param name="src">Object to map</param>
	<returns>Mapping name as string</returns>
</member><member name="M:MedscreenLib.Medscreen.GetFileName(System.String,System.DateTime,System.DateTime,System.String)">
	<summary>
 create a temporary filename for interval information
 </summary>
	<param name="Type">Filename prefix</param>
	<param name="Date1">First Date to be used</param>
	<param name="date2">Second Date to be used</param>
	<param name="extn">Extension to be used</param>
	<returns>A temporary filename</returns>
	<remarks>This form is best used for interval data</remarks>
</member><member name="M:MedscreenLib.Medscreen.GetFileName(System.String,System.DateTime,System.String)">
	<summary>
 create a temporary filename for information about or upto a date
 </summary>
	<param name="Type">Filename prefix</param>
	<param name="Date1">First Date to be used</param>
	<param name="extn">Extension to be used</param>
	<returns>A temporary filename</returns>
	<remarks>This form is best used for information upto or on a specific date</remarks>
</member><member name="M:MedscreenLib.Medscreen.GetFileName(System.String,System.String,System.String)">
	<summary>
 create a temporary filename for interval information
 </summary>
	<param name="Type">Filename prefix</param>
	<param name="Value">First Date to be used</param>
	<param name="extn">Extension to be used</param>
	<returns>A temporary filename</returns>
	<remarks>This form is the most generic</remarks>
</member><member name="M:MedscreenLib.Medscreen.GetNextFileName(System.String,System.String,System.Int32,System.String)">
	<summary>
 create a filename building it from various parameters
 </summary>
     ''' <param name="newname">the prefix min body of name</param>
	<param name="Suffix">the suffix to be used as an extension</param>
	<param name="StartAt">the number to start at </param>
	<param name="AltSuffix">alternate suffix</param>
	<returns>A new filename</returns>
	<remarks>Reporter will change a filename after it completes to sent or all_done<para/>
 in order to cope with this and stop overwrites the alternate suffix should be set to the completed name</remarks>
</member><member name="M:MedscreenLib.Medscreen.GetNextFileName(System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Overload that should provide incremental filenumbers
 </summary>
	<param name="InDirectory"></param>
	<param name="newname"></param>
	<param name="Suffix"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.FixUpPhone(System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Try and convert a phone number to international standards.
 </summary>
	<param name="PhoneNumber"></param>
	<param name="Country"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [08/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.StripAlpha(System.Int32,System.String,System.Int32,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
 Given a string and positioned beyond a possible string strip the text out of it
 </summary>
	<param name="Ipos">Start Position</param>
	<param name="SF">Input String</param>
	<param name="Direction">Direction of movement, defaults to downwards (-1)</param>
	<returns></returns>
	<remarks>This routine is primarily used to strip names embedded in filenames used for temporary XML files. <para/>
 This routine enables the name to be stripped out and used.
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/12/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.StripCountry(System.String,System.String)">
	<summary>
 Remove country info from phone number
 </summary>
	<param name="strPhone">Supplied phone number</param>
	<returns>Corrected Phone number</returns>
</member><member name="M:MedscreenLib.Medscreen.StringToByteArray(System.String)">
	<summary>
 Convert a string to a byte array
 </summary>
	<param name="st">String to convert</param>
	<returns>Array of byte</returns>
	<remarks>Used in the main with in memory streams</remarks>
</member><member name="M:MedscreenLib.Medscreen.ChangePassword(System.String@)">
	<summary>
 Change the users password
 </summary>
	<param name="NewPWD">New Password</param>
	<returns>Success or failure</returns>
</member><member name="M:MedscreenLib.Medscreen.CheckPassword(System.String,System.String,System.String@)">
	<summary>
 Check a password to see if it is valid
 </summary>
	<param name="UserName">Windows Identity</param>
	<param name="Password">Password to check</param>
	<param name="ErrorText">An error return</param>
	<returns>True If password is correct for user name</returns>
</member><member name="M:MedscreenLib.Medscreen.CheckPassword(System.Boolean)">
	<summary>
 Check a password to see if it is valid
 </summary>
	<param name="changeUser">Allow user to be changed</param>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [07/10/2005]</date><Action>Changed to not use encrypted password service</Action></revision>
	</revisionHistory>
	<returns>True If password is correct for user name</returns>
</member><member name="M:MedscreenLib.Medscreen.DoCrypt(System.String)">
	<summary>
 Encrypt/Decrypt string simplistic approach
 </summary>
	<param name="Pwd">String to encrypt</param>
	<returns>Encypted decrypted string</returns>
</member><member name="M:MedscreenLib.Medscreen.ExportReport(CrystalDecisions.CrystalReports.Engine.ReportDocument,MedscreenLib.Constants.SendMethod)">
 -----------------------------------------------------------------------------
 <summary>
 Export as crystal report to appropriate file type
 </summary>
	<param name="cr"></param>
	<param name="SendMethod"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/08/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.PrintReport(CrystalDecisions.CrystalReports.Engine.ReportDocument,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Set up a crystal report to print
 </summary>
	<param name="cr"></param>
	<param name="PrinterName"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/08/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.PrintReport(CrystalDecisions.CrystalReports.Engine.ReportDocument)">
 -----------------------------------------------------------------------------
 <summary>
 Print Crystal report to Windows Default Printer
 </summary>
	<param name="cr"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	06/08/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.ExtractTime(System.DateTime)">
	<summary>
 Get the time part of a date object
 </summary>
	<param name="datin">Date to get time part from</param>
	<returns>Date containg only the time part</returns>
</member><member name="M:MedscreenLib.Medscreen.TruncateDate(System.DateTime)">
	<summary>
 Convert a date and time to a date
 </summary>
	<param name="datIn">Date to truncate</param>
	<returns>Truncated date</returns>
</member><member name="M:MedscreenLib.Medscreen.FillList(System.Windows.Forms.ComboBox,System.String,System.String)">
	<summary>
 Fill a combo box with the contents of a section in an inifile
 </summary>
	<param name="combo">Combo box to fill</param>
	<param name="IniFile">Ini File to use</param>
	<param name="Section">Section in inifile to use</param>
	<returns>True if succesful</returns>
</member><member name="M:MedscreenLib.Medscreen.SetListIndex(System.Windows.Forms.ComboBox,System.String)">
	<summary>
 Set the index in a combo box to the supplied string
 </summary>
	<param name="Combo">Combo box to set position</param>
	<param name="Item">Item (string) to find</param>
	<returns>void</returns>
</member><member name="M:MedscreenLib.Medscreen.ExpandQuery(System.String,System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Convert query by replacing parameters
 </summary>
	<param name="InputString"></param>
	<param name="p1"></param>
	<param name="p2"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	01/04/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.CurrencyCodeXML(System.String)">
	<summary>
 Translate a currency code into XML
</summary>
	<param name="Currency">Currency to translate</param>
	<returns>Translated currency value</returns>
</member><member name="M:MedscreenLib.Medscreen.CurrencyCodeHTML(System.String)">
	<summary>
 Translate a currency code in to HTML
 </summary>
	<param name="Currency">Currency to translate</param>
	<returns>Translated currency value</returns>
</member><member name="M:MedscreenLib.Medscreen.DecimalToHex(System.Int64)">
	<summary>
 Convert a decimal integer to a hex string
 </summary>
	<param name="Value">Input decimal integer</param>
	<returns>Hexadecimal number</returns>
</member><member name="M:MedscreenLib.Medscreen.FixAmpersands(System.String)">
	<summary>
 In HTML code fix up ampersands by duplicating them
 </summary>
	<param name="inpStr">String rrquiring correction</param>
	<returns>Corrected string</returns>
	<remarks>In HTML code the &amp; character is treated as an escape character<para/>
 so every instance needs to be replaced with a metacharacter set</remarks>
</member><member name="M:MedscreenLib.Medscreen.FixGreaterThen(System.String)">
	<summary>
 In XML code Fix &gt; characters  by replacing them HTML is a type of XML
 </summary>
	<param name="inpStr">String rrquiring correction</param>
	<returns>Corrected string</returns>
	<remarks>In XML code the &gt; character has special meaning as the end of entity character<para/>
	</remarks>
</member><member name="M:MedscreenLib.Medscreen.FixXML(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Fixup Xml 
 </summary>
	<param name="inpStr"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/09/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.FixLessThan(System.String)">
	<summary>
 In XML code Fix &lt; characters  by replacing them HTML is a type of XML
 </summary>
	<param name="inpStr">String rrquiring correction</param>
	<returns>Corrected string</returns>
	<remarks>In XML code the &lt; character has special meaning as the start of entity character<para/>
	</remarks>
</member><member name="M:MedscreenLib.Medscreen.FixQuotes(System.String)">
	<summary>
 double ' characters
 </summary>
	<param name="inpStr">String requiring correction</param>
	<returns>Corrected string</returns>
	<remarks>When writing to databases the ' needs to be doubled up, <para/>
 this may occur in names like O'Reilly
 </remarks>
</member><member name="M:MedscreenLib.Medscreen.GeneratePassword(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
     Generates a random alphanumeric password of specifie length and format
 </summary>
	<param name="intMinLength">(Numeric) Minimum length of password</param>
	<param name="intMaxLength">(Numeric) Max length of password (must be &gt;= intMinLength)</param>
	<param name="blnMixedCase">(Boolean) If FALSE passwords will be all lower case</param>
	<param name="blnAlphaNumeric">(Boolean) TRUE to allow numbers in password.</param>
	<param name="intMinNumbers">(Numeric) Min number of numeric characters to include.
                      Ignored (see NOTES) if blnAlphaNumeric is FALSE.
                      May not be &gt; MaxLength / 2 (for performance reasons).</param>
	<returns>ERROR if any parameters of wrong type, or out of range
  STRING of Length between intMinLength and intMaxLength (inclusive).</returns>
	<remarks>      If blnAlphNumeric is FALSE and intMinNumbers is 0, passwords will always be of
  length intMinLength.  To create random length passwords between min and max,
  set intMinNumbers to a value of around 1/4 max length.
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.CountNumCharsInString(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 CountNumCharsInString - returns the number of characters in strExpression that are numeric 
 </summary>
	<param name="strIn"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/03/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.GetErrorMessage(System.Int32)">
	<summary>
 Translate a Hexadecimal error Code into human readable form
 </summary>
	<param name="errorCode">Hex error to translate</param>
	<returns>Translated error message</returns>
</member><member name="M:MedscreenLib.Medscreen.ResolveStyleSheet(System.String,System.String,System.Int32,System.Xml.Xsl.XsltArgumentList,System.String)">
	<summary>
 Convert XML to HTML as a string using a style sheet using an in memeory method
 </summary>
	<param name="source">Source XML data </param>
	<param name="StyleSheetId">XSL transform sheet to be used</param>
	<param name="opt">place holder variable use 0, this is so the signature is different</param>
	<param name="Args">Arguments to be supplied to the stylesheet</param>
	<param name="Path">Path to style sheet</param>
	<returns>HTML data as a string</returns>
	<remarks>This method is used to convert XML data to formatted data for use in a report
 the intention is to have a method that will rapidly produce reports and can the apperance can be easily changed </remarks>
</member><member name="M:MedscreenLib.Medscreen.ShowHtml(System.String)">
	<summary>
  Display html using a specific form for the purpose saves shelling to internet explorer
 </summary>
	<param name="html"> HTML to display</param>
	<returns>Result from the HTML viewwer Form </returns>
	<remark>This function uses the HTML Viewer Form</remark>
</member><member name="M:MedscreenLib.Medscreen.DataBaseVersion(MedscreenLib.Medscreen.DatabaseVersionParts)">
 -----------------------------------------------------------------------------
 <summary>
 Get the version of the schema in use
 </summary>
	<param name="part"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.GetOutputDestination(System.String@,System.String)">
	<summary>
 Find were the user wants output sent to
 </summary>
	<param name="outputMethod">How the output is to be produced</param>
	<param name="OutputDest">Default of where the output should go to </param>
	<returns>Output destination</returns>
</member><member name="M:MedscreenLib.Medscreen.GetParameter(MedscreenLib.Medscreen.MyTypes,System.String,System.String,System.Object,System.Boolean,Microsoft.VisualBasic.Collection)">
	<summary>
 Get a parameter from the user
 </summary>
	<param name="paramType">Type of parameter</param>
	<param name="paramname">Description presented to the user of parameter</param>
	<param name="Title">Title bar displaye don form</param>
	<param name="DefaultValue">Default value presented to the user</param>
	<param name="SingleLine">Indicates whether the text box is a single or multi line display</param>
     '''     ''' <returns>void</returns>
</member><member name="M:MedscreenLib.Medscreen.GetParameter(MedscreenLib.Glossary.PhraseCollection,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Get a parameter from a phrase list
 </summary>
	<param name="PhraseList"></param>
	<param name="ParamNAme"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/08/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.GetContractAmendment(System.Boolean@,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Specialist form of get contract amendment that will remember entry 
 </summary>
	<param name="Remember"></param>
	<param name="DefaultValue"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [06/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.TextEditor(System.String,System.Boolean,System.Int32,System.String)">
	<summary>
 Instantiate a text editor
 </summary>
	<param name="inText">Input text for editor</param>
	<param name="isReadOnly">Is text read write or reead only</param>
	<param name="width">Width of text box default = 416</param>
	<param name="Title">Title on form</param>
	<returns>Edited string</returns>
</member><member name="M:MedscreenLib.Medscreen.GetTempPath">
	<summary>
 returns the location of the current windows temporary directory
 </summary>
	<returns>path to temporary directory</returns>
</member><member name="M:MedscreenLib.Medscreen.LiveRoot">
	<summary>
 Return a path to the root of the live file directory for emaple N:\
 </summary>
	<result>The path to the Live directory as a string</result>
</member><member name="M:MedscreenLib.Medscreen.Templates">
	<summary>
 return the path of the word templates directory typically
 "\\corp.concateno.com\medscreen\common\lab programs\dbreports\templates\"
 </summary>
	<result>The path to the Word Templates Directory as a string</result>
</member><member name="M:MedscreenLib.Medscreen.LoadHtml(System.Uri)">
	<summary>
 Load a file of HTML and display it
 </summary>
	<param name="path">Path and filename to the HTML document</param>
	<result>Return from HTML Viewer</result>
</member><member name="M:MedscreenLib.Medscreen.HTMLHeader(System.Boolean,System.Boolean)">
	<summary>
 Return a standard HTML header saves duplicating code
 </summary>
	<param name="CloseHead">Close header or leave it open</param>
	<result>HTML document header</result>
</member><member name="M:MedscreenLib.Medscreen.HTMLStyle">
	<summary>
 A style section
 </summary>
	<result>A formatted style section</result>
</member><member name="M:MedscreenLib.Medscreen.InvoiceTableHeader">
	<summary>
 Header for Invoice table
 </summary>
	<returns>Invoice Table Header</returns>
</member><member name="M:MedscreenLib.Medscreen.ResolveStyleSheet(System.String,System.String,System.Boolean,System.Xml.Xsl.XsltArgumentList,System.String)">
	<summary>
 Convert XML to HTML as a string using a style sheet using a file
 </summary>
	<param name="Filename">Filename and path of file</param>
	<param name="StyleSheetId">XSL transform sheet to be used</param>
	<param name="blnDelSource">Delete source file after use</param>
	<param name="Args">Arguments to be supplied to the stylesheet</param>
	<param name="Path">Path to style sheet</param>
	<returns>HTML data as a string</returns>
	<remarks>This method is used to convert XML data to formatted data for use in a report
 the intention is to have a method that will rapidly produce reports and can the apperance can be easily changed </remarks>
</member><member name="M:MedscreenLib.Medscreen.NextWord(System.String@,System.String)">
	<summary>
 Return the next word from string
 </summary>
	<param name="InString">Input String </param>
	<param name="terms">Terminators</param>
	<returns>Next word in string</returns>
</member><member name="M:MedscreenLib.Medscreen.RemoveChars(System.String,System.Char)">
	<summary>
 Remove characters from a string 
 </summary>
	<param name="inString">Input String</param>
	<param name="ch">Character to remove</param>
	<returns>Fixed string</returns>
</member><member name="M:MedscreenLib.Medscreen.ReplaceString(System.String,System.String,System.String)">
	<summary>
 Replaces a string elements in a string with another string
 </summary>
	<param name="inString">Input String</param>
	<param name="inStr1">Input String</param>
	<param name="repStr">Input String</param>
	<returns>Fixed String</returns>
</member><member name="M:MedscreenLib.Medscreen.QuickFax(System.String,System.String,System.String,System.String,System.String)">
	<summary>
Send a fax via Email 
 </summary>
	<param name="Doc">File containing fax</param>
	<param name="Number">Fax number</param>
	<param name="Subject">Subject of the fax</param>
	<param name="Body">Body of the fax</param>
	<param name="From">Sender</param>
	<returns>Void</returns>
</member><member name="M:MedscreenLib.Medscreen.QuickReporter(System.String,System.String,System.String,System.String,System.Array,System.String,System.String,System.String,System.Boolean,System.Int32)">
	<summary>
Send a message using the reporter program, default the output method to FAX.
Takes an array of parameters of arbitary length to pass the information
</summary>
	<param name="OutAddress">Output Address</param>
	<param name="Template">Template to use</param>
	<param name="Subject">Subject of the message</param>
	<param name="Recipient">Recipient(s) of message</param>
	<param name="Parameters">Parameters Array of </param>
	<param name="OutputMethod">Method for reporting default is FAX</param>
	<param name="OutputDirectory">Directory to use default is WordOutput</param>
	<param name="OutputDesc">Prefix of file name</param>
	<param name="NoDups">Prevent duplicate messages default is true</param>
	<param name="ParamCount">No of parameters</param>
	<returns>Void</returns>
</member><member name="F:MedscreenLib.Medscreen.strBlatPath">
 -----------------------------------------------------------------------------
 <summary>
 Private variable storing Blat path
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	20/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Medscreen.BlatPath">
 -----------------------------------------------------------------------------
 <summary>
 Path to BLAT email program
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	20/02/2008	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.BlatEmail(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Send an email by BLAT
 </summary>
	<param name="subject"></param>
	<param name="body"></param>
	<param name="recipient"></param>
	<param name="Originator"></param>
	<param name="HTML"></param>
	<param name="BCC"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	12/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.FileInUse(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Check to see whether a file is in use or not
 </summary>
	<param name="sFile"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	05/03/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.QuckEmail(System.String,System.String,System.String,System.String,System.Boolean,System.String)">
	<summary>
Send an email out 
</summary>
	<param name="subject">Subject of the message</param>
	<param name="body">body of message</param>
	<param name="recipient">Recipient(s) of message</param>
	<param name="Originator">Sender) of message</param>
	<param name="HTML">Send message as HTML</param>
	<returns>Void</returns>
</member><member name="M:MedscreenLib.Medscreen.QuckEmail(System.String,System.String,System.String[],System.String,System.String,System.Boolean,System.String)">
	<summary>
Send an email out 
</summary>
	<param name="subject">Subject of the message</param>
	<param name="body">body of message</param>
	<param name="Attachments">Array of file attachments</param>
	<param name="recipient">Recipient(s) of message</param>
	<param name="Originator">Sender) of message</param>
	<param name="HTML">Send message as HTML</param>
	<returns>Void</returns>
</member><member name="M:MedscreenLib.Medscreen.GetRecordSet(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbParameter)">
	<summary>
 Get a recordset based on supplied query, connection left open as is reader
 </summary>
	<param name="Query">Query used to retrieve dataset</param>
	<param name="Conn">Connection used</param>
	<returns>populated data reader</returns>
</member><member name="M:MedscreenLib.Medscreen.ToDataset(System.String)">
	<summary>
 Convert an XML into a tablset
 </summary>
	<param name="XML">Source of XML to convert</param>
	<returns>A generic dataset</returns>
</member><member name="M:MedscreenLib.Medscreen.TableSet(System.DateTime)">
	<summary>
 Return the name of the table set given a date
 </summary>
	<param name="inDate">Date to produce table set for </param>
	<returns>Formatted table set name</returns>
</member><member name="M:MedscreenLib.Medscreen.HoursOutOfHours(System.DateTime,System.DateTime,System.String)">
	<summary>
 Calculate the length of time that is out of hours
 </summary>
	<param name="Dat1">Starting date time variable</param>
	<param name="dat2">Ending date time variable</param>
	<returns>Time out of hours as Timespan</returns>
</member><member name="M:MedscreenLib.Medscreen.HyperClient(System.String,System.String)">
	<summary>
 Provide a hyperlink to a client
 </summary>
	<param name="Dr">Customer ID</param>
	<returns>Hyperlink to intranet customer report</returns>
</member><member name="M:MedscreenLib.Medscreen.HyperJob(System.String)">
	<summary>
 Provide a hyperlink to a sample manager job
 </summary>
	<param name="strJob">Job name</param>
	<returns>Hyperlink to intranet job report</returns>
</member><member name="M:MedscreenLib.Medscreen.URLJob(System.String)">
	<summary>
 Provide a URL to Job webpage
 </summary>
	<param name="strJob">Job Name</param>
	<returns>URL to intranet job web page</returns>
</member><member name="M:MedscreenLib.Medscreen.HyperCollection(System.String)">
	<summary>
 Provide a hyperlink to a collection
 </summary>
	<param name="strJob">Collection ID</param>
	<returns>Hyperlink to intranet collection page</returns>
</member><member name="M:MedscreenLib.Medscreen.HyperBarcode(System.String)">
	<summary>
 Provide a hyperlink to a sample
 </summary>
	<param name="Barcode">Sample Barcode</param>
	<returns>Hyperlink to intranet sample web page</returns>
</member><member name="M:MedscreenLib.Medscreen.URLBarcode(System.String)">
	<summary>
 Provide a URL to a Sample
 </summary>
	<param name="Barcode">Sample Barcode</param>
	<returns>URL to intranet sample webpage</returns>
</member><member name="M:MedscreenLib.Medscreen.HyperInvoice(System.String)">
	<summary>
 Provide a hyperlink to an invoice
 </summary>
	<param name="strInvoice">Invoice Number</param>
	<returns>Hyperlink to intranet invoice web page</returns>
</member><member name="M:MedscreenLib.Medscreen.URLInvoice(System.String)">
	<summary>
 Provide a URL to a Invoice
 </summary>
	<param name="strInvoice">Invoice Number</param>
	<returns>URL to intranet Invoice web page</returns>
</member><member name="M:MedscreenLib.Medscreen.URLSample(System.String)">
	<summary>
 Provide a URL to a barcode
 </summary>
	<param name="strSampleId">Barcode</param>
	<returns>URL to intranet sample report</returns>
</member><member name="M:MedscreenLib.Medscreen.RoleEmailList(System.String)">
	<developer></developer>
	<summary>
 Get a list of email address for role members
 </summary>
	<param name="Role"></param>
	<returns></returns>
	<remarks></remarks>
	<revisionHistory></revisionHistory>
</member><member name="M:MedscreenLib.Medscreen.IsAHoliday(System.DateTime)">
	<summary>
 See if date is a holiday
 </summary>
	<param name="inDate"> Date to check </param>
	<returns> ~True if a Holiday </returns>
</member><member name="M:MedscreenLib.Medscreen.IsLondonUnderground(System.String)">
	<summary>
Check to see if this client is a London Underground one 
 </summary>
	<param name="Customer">Customer Id to check</param>
	<returns>True if Customer is London Underground</returns>
</member><member name="M:MedscreenLib.Medscreen.IsOutOfHours(System.DateTime,System.String)">
	<summary>
Normal outof hours check 
 </summary>
	<param name="datIn"> Date to Check</param>
	<returns>True if is out of hours</returns>
</member><member name="M:MedscreenLib.Medscreen.IsNumber(System.String)">
	<summary>
Is the string a valid number
 </summary>
	<param name="Source">String to check</param>
	<returns>True if a valid number</returns>
</member><member name="M:MedscreenLib.Medscreen.LULIsOutOfHours(System.DateTime)">
	<summary>
Check to see if the time and date specified is out of hours for an LUL collection.
In hours is Monday - Friday 0700 - 1800 hours
 </summary>
	<param name="inDate"> Date to Check</param>
	<returns>True if is out of hours</returns>
</member><member name="M:MedscreenLib.Medscreen.isValidEmailSet(System.String)">
	<summary>
 Validate a set of emails
 </summary>
	<param name="EmailAddressSet"></param>
	<returns>-1 success, n where n is the first email address in error. </returns>
	<remarks></remarks>
</member><member name="M:MedscreenLib.Medscreen.IsValidEmail(System.String)">
	<summary>
 Function to validate an email address
 </summary>
	<param name="EmailAddress"></param>
	<returns></returns>
	<remarks>Uses a regular expression</remarks>
</member><member name="P:MedscreenLib.Medscreen.ErrorVisibility">
 -----------------------------------------------------------------------------
 <summary>
   Sets visibility to use when logging errors
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [14/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.LogRequest(System.String,System.Boolean)">
	<summary>
 Log a request
 </summary>
	<param name="ActionString">Action to Log</param>
	<param name="show">Whether the request is shon</param>
	<returns>Void</returns>
</member><member name="M:MedscreenLib.Medscreen.LogRequest(System.String,System.String,System.Boolean)">
	<summary>
 Log a request
 </summary>
	<param name="ActionString">Action to Log</param>
	<param name="ActionFile">The file to log to</param>
	<param name="show">Whether the request is shon</param>
	<returns>Void</returns>
</member><member name="M:MedscreenLib.Medscreen.LogAction(System.String,System.Boolean)">
	<summary>
 Log an action 
 </summary>
	<param name="ActionString">Action to Log</param>
	<param name="show">Whether the request is shon</param>
	<returns>Void</returns>
</member><member name="M:MedscreenLib.Medscreen.LogAction(System.String,System.String,System.Boolean)">
	<summary>
 Log a request
 </summary>
	<param name="ActionString">Action to Log</param>
	<param name="ActionFile">The file to log to</param>
	<param name="show">Whether the request is shon</param>
	<returns>Void</returns>
</member><member name="M:MedscreenLib.Medscreen.LogError(System.String,System.Boolean)">
	<summary>
 Log an error
 </summary>
	<param name="ErrorString">Action to Log</param>
	<param name="show">Whether the request is shon</param>
	<returns>Void</returns>
	<remarks>The show parameter can be overridden by the shared ErrorVisibility property</remarks>
</member><member name="M:MedscreenLib.Medscreen.LogError(System.String)">
	<summary>
 Log an error
 </summary>
	<param name="ErrorString">Action to Log</param>
	<returns>Void</returns>
</member><member name="M:MedscreenLib.Medscreen.LogError(System.Exception,System.Boolean,System.String)">
 -----------------------------------------------------------------------------
<summary>
 Log an error
 </summary>
	<param name="Ex">Exception to Log</param>
	<param name="show">Whether the request is shon</param>
	<param name="ExtraInfo">Additional information to log</param>
	<returns>Void</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [01/11/2006]</date><Action>Added support for machine name </Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.EmailError(System.Exception,System.Boolean,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 
 Email an error
 </summary>
	<param name="ex"></param>
	<param name="show"></param>
	<param name="ExtraInfo"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [18/04/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.LogTiming(System.String,System.Boolean)">
	<summary>
 Log Timing
 </summary>
	<param name="ErrorString">Message</param>
	<param name="show">Whether the request is shon</param>
	<returns>Void</returns>
</member><member name="M:MedscreenLib.Medscreen.SetLoggingDirectory(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Set output Directory for error logging
 </summary>
	<param name="path">Path to use</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [05/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Medscreen.MessageEventArgs.Cancel">
 -----------------------------------------------------------------------------
 <summary>
   Gets or Sets a value indicating whether message will be cancelled
 </summary>
	<value></value>
	<remarks>
   Cancelled messages are not shown or written to the log
 </remarks>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Medscreen.MessageEventArgs.Type">
 -----------------------------------------------------------------------------
 <summary>
   Gets the type of message being logged
 </summary>
	<value></value>
	<remarks>
	</remarks>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Medscreen.MessageEventArgs.Show">
 -----------------------------------------------------------------------------
 <summary>
   Gets or Sets a valie indicating whether message will be displayed
 </summary>
	<value></value>
	<remarks>
	</remarks>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Medscreen.MessageEventArgs.Message">
 -----------------------------------------------------------------------------
 <summary>
   Gets the message text
 </summary>
	<value></value>
	<remarks>
	</remarks>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.ReadValue(System.Xml.XmlElement,System.String,System.Object,System.Boolean@)">
 -----------------------------------------------------------------------------
 <summary>
 Read values from an XML Element 
 </summary>
	<param name="oread">XML Element to read from </param>
	<param name="FieldName">Field name to find</param>
	<param name="nvl"></param>
	<param name="isNull"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [09/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.ReadValue(System.Xml.XmlNodeList,System.String,System.Object,System.Boolean@)">
 -----------------------------------------------------------------------------
 <summary>
 Read values from a node list 
 </summary>
	<param name="oread">Nodelist to read from </param>
	<param name="FieldName">Field to find</param>
	<param name="nvl">Value to use for nulls</param>
	<param name="isNull"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [09/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.ReadValue(System.Data.OleDb.OleDbDataReader,System.String,System.Object,System.Boolean@)">
	<summary>
 Read a value out of a OLEDB reader object
 </summary>
	<param name="Oread">Reader</param>
	<param name="FieldName">Name of field to read</param>
	<param name="nvl">Null value, convert field to value if null</param>
	<returns>Read field</returns>
</member><member name="M:MedscreenLib.Medscreen.ReadValue(System.Data.SqlClient.SqlDataReader,System.String,System.Object,System.Boolean@)">
	<summary>
 Read a value out of a MSSQL reader object
 </summary>
	<param name="Oread">Reader</param>
	<param name="FieldName">Name of field to read</param>
	<param name="nvl">Null value, convert field to value if null</param>
	<returns>Read field</returns>
</member><member name="M:MedscreenLib.Medscreen.ReadFromReader(System.Data.OleDb.OleDbDataReader,System.Int32,System.Object@,System.Object)">
	<summary>
 Read a value out of a reader object by position
 </summary>
	<param name="oread">Reader</param>
	<param name="intPosition">Index of field</param>
	<param name="myVar">Value (returned)</param>
	<param name="myDefault">Null value, convert field to value if null</param>
	<returns>True if succesful</returns>
</member><member name="M:MedscreenLib.Medscreen.CrLogin(CrystalDecisions.CrystalReports.Engine.ReportDocument)">
	<summary>
 Set Login info in a crystal report
 </summary>
	<param name="cr">Crystal Reprt Document</param>
</member><member name="M:MedscreenLib.Medscreen.ShowMappingName(System.Object)">
	<summary>
 Display the mapping name for an object in a message box</summary>
</member><member name="M:MedscreenLib.Medscreen.SetParameterSourceColumns(System.Data.OleDb.OleDbParameterCollection)">
	<summary>
 Set the source column for a parameter
 </summary>
	<param name="Parameters">Parameters to set</param>
</member><member name="P:MedscreenLib.Medscreen.XMLDirectory">
	<summary>
 The directory used to store XML
 </summary>
	<result>XML Directory as a string</result>
</member><member name="P:MedscreenLib.Medscreen.BackupFolder">
 -----------------------------------------------------------------------------
 <summary>
 Folder for back up drive
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Medscreen.BackupDrive">
 -----------------------------------------------------------------------------
 <summary>
 Location of the drive backups will be mapped to
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	03/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Medscreen.GCMSData">
 -----------------------------------------------------------------------------
 <summary>
 mapping for gcmsdata drive
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [22/09/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Medscreen.IniFiles">
	<summary>
 IniFiles location of inifiles associated with application
 </summary>
</member><member name="P:MedscreenLib.Medscreen.XSLTransformsDirectory">
	<summary>
 Location of .XSL files XSL transforms
 </summary>
</member><member name="M:MedscreenLib.Medscreen.IsValidSageID(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Validate sage id 
 </summary>
	<param name="sageId"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	08/01/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Medscreen.ValidateEmail(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Check to see that the email address is valid
 </summary>
	<param name="Email"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [24/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Medscreen.RootLive">
	<summary>
 Location of the root on Live typically "\\john\live\"
 </summary>
</member><member name="P:MedscreenLib.Medscreen.StyleSheet">
	<summary>
 Location of the standard CSS Style Sheet. Typically "\\EM01\intranet\MedScreen.css"
 </summary>
</member><member name="M:MedscreenLib.Medscreen.CloseHandle(System.IntPtr)">
	<summary>
 Kernel32 Function
 </summary>
	<param name="handle">Handle to close</param>
	<returns>True handle closed</returns>
</member><member name="M:MedscreenLib.Medscreen.FormatMessage(System.Int32,System.IntPtr@,System.Int32,System.Int32,System.String@,System.Int32,System.IntPtr@)">
	<summary>
 Format a windows error message
 </summary>
	<param name="dwFlags"></param>
</member><member name="T:MedscreenLib.Medscreen">
	<summary>
Generic class to hold code for various projects 
</summary>
	<remarks>
 This is a class containing a widerange of shared utility functions <para/>
 in many respects it is like the Sample Manager Lib-utils library.
 </remarks>
	<seealso cref="T:MedscreenLib.Glossary.Glossary"/>
</member><member name="F:MedscreenLib.Constants.AddressType.AddressTypeNull">
	<summary>Null type</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.AddressMain">
	<summary>Customer company address</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.AddressSec">
	<summary>Customer second address</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.AddressInv">
	<summary>Customer Invoice Mailing address</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.VesselAddressInv">
	<summary>Vessel Invoice address</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.TableAddress">
	<summary>Address stored in address table</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.AdhocAddressMain">
	<summary>Adhoc Sample Company address</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.AdhocAddressInv">
	<summary>Adhoc Sample Invoice Mailing address</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.VesselAddressMail">
	<summary>Vessel invoice mailing address</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.DeliveryAddress">
	<summary>Delivery (shipping) address</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.AddressSite">
	<summary>Site Address</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.AddressCollOfficer">
	<summary>Collecting Officer Address</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.AddressBank">
	<summary>Bank Address</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.InvoiceMail">
	<summary>Invoice Mail address</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.InvoiceShipping">
	<summary>Invoice Shipping Address</summary>
</member><member name="F:MedscreenLib.Constants.AddressType.GoldmineAddress">
	<summary>GoldMine Address</summary>
</member><member name="T:MedscreenLib.Constants.AddressType">
 -----------------------------------------------------------------------------
 <summary>
 Address Types
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [13/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Constants.EmailErrors.None">
	<summary>No detectable errors</summary>
</member><member name="F:MedscreenLib.Constants.EmailErrors.NoAt">
	<summary>@ sign missing</summary>
</member><member name="F:MedscreenLib.Constants.EmailErrors.NoDomain">
	<summary>no . follwing @ symbol</summary>
</member><member name="F:MedscreenLib.Constants.EmailErrors.NoAddress">
	<summary>no address provided </summary>
</member><member name="F:MedscreenLib.Constants.EmailErrors.Invalid">
	<summary>Preset invalid </summary>
</member><member name="T:MedscreenLib.Constants.EmailErrors">
 -----------------------------------------------------------------------------
 <summary>
 Posible errors in an Email address 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [07/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Constants.PhoneNoErrors.NoError">
	<summary>No Error</summary>
</member><member name="F:MedscreenLib.Constants.PhoneNoErrors.InTDialCodePresent">
	<summary>international Dailling code present</summary>
</member><member name="F:MedscreenLib.Constants.PhoneNoErrors.IllegalCharacterPresent">
	<summary>Illegal Character present</summary>
</member><member name="T:MedscreenLib.Constants.PhoneNoErrors">
 -----------------------------------------------------------------------------
 <summary>
 Possible errors with a phone number
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [07/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Constants.GCST_EMAIL_To_Fax_provider">
	<summary>EMail to Fax service provider</summary>
</member><member name="F:MedscreenLib.Constants.GCST_EMAIL_To_Fax_Send">
	<summary>EMail to Fax service provider send string </summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_StatusCardDetails">
	<summary>Request for Card Details from ICP</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_AddressRequst">
	<summary>Request for an Address </summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_StatusCreated">
	<summary>Task completed</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_StatuscHange">
	<summary>Request for a change</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_StatusJobMade">
	<summary>Collection completed</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_TaskRequest">
	<summary>Task Request</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_StatusPaid">
	<summary>Invoice Paid</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_StatusICPRequest">
	<summary>ICP Request</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_StatusNew">
	<summary>Create a new collection</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_StatusTemp">
	<summary>Temporary status</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_StatusDelete">
	<summary>Delete Collection</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_StatusInvoiced">
	<summary>Collection Invoiced</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_StatusFailed">
	<summary>Task failed</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_StatusLocked">
	<summary>Task Locked</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_StatusRequest">
	<summary>Request</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_TaskJob">
	<summary>Job Task</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_TaskPrepay">
	<summary>Pre pay invoice (Record payment)</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_TaskSample">
	<summary>Not used</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_TaskCancel">
	<summary>Cancel Collection (Obsolete)</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_TaskJobConfirm">
	<summary>Confirm Collection</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_TaskJobProgress">
	<summary>Task Job in Progress (Obsolete)</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_TaskJobSendToCO">
	<summary>Task Send to Officer (Obsolete)</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFace_TaskJobInvCancel">
	<summary>Task Job Cancel Invoice</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IFACE_TaskPasswordChange">
	<summary>Change Password Request</summary>
</member><member name="F:MedscreenLib.Constants.cstStandardSampleCost">
	<summary>Standard Sample Cost (Don't use get from price list)</summary>
</member><member name="F:MedscreenLib.Constants.cstStandardFixedSiteCost">
	<summary>Standard Fixed Site Cost (Don't use get from price list)</summary>
</member><member name="F:MedscreenLib.Constants.cstStandardMinCollectionCharge">
	<summary>Standard minimum Collection Charge (Don't use get from price list)</summary>
</member><member name="F:MedscreenLib.Constants.gcstStandardSiteCharge">
	<summary>Standard Site charge (Don't use get from price list)</summary>
</member><member name="F:MedscreenLib.Constants.C_dbTRUE">
	<summary>Database Representation of TRUE</summary>
</member><member name="F:MedscreenLib.Constants.C_dbFALSE">
	<summary>Database Representation of FALSE</summary>
</member><member name="F:MedscreenLib.Constants.C_InitDate">
	<summary>Date representing NULL</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobTypeAnalysisOnly">
	<summary>Collection Type Analysis Only</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobTypeCallout">
	<summary>Collection Type Call Out UK</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobTypeCalloutOverseas">
	<summary>Collection Type Call Out Overseas</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobTypeWorkplace">
	<summary>Collection Type UK Routine</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobTypeOverseas">
	<summary>Collection Type Overseas Routine</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobTypeFixed">
	<summary>Collection Type Fixed Site</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobTypeObsolete">
	<summary>Collection Type Obsolete</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobTypeExternal">
	<summary>Collection Type External</summary>
</member><member name="F:MedscreenLib.Constants.GCST_ESSOCertifcate">
	<summary>Esso Certificates</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LULCertifcate">
	<summary>LUL Certificates</summary>
</member><member name="F:MedscreenLib.Constants.GCST_RAILCertifcate">
	<summary>Railtrack certificates</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobStatusConfirmed">
	<summary>Collection has been confirmed</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobStatusCreated">
	<summary>Collection has been created</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobStatusAssigned">
	<summary>Collection has been assigned to collecting officer</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobStatusCancelled">
	<summary>Collection has been Cancelled</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobStatusCollected">
	<summary>Collection has been done, Officer has informed</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobStatusReceived">
	<summary>Collection has Samples in LAB</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobStatusSent">
	<summary>Collection has been sent to officer</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobStatusPay">
	<summary>Indicates that it is a payment psuedo collection</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobStatusApproved">
	<summary>Collection has been Approved</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobStatusCommitted">
	<summary>Collection has been Completed all samples processed and reported</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobStatusOnHold">
	<summary>Collection has been put on hold</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobStatusTemp">
	<summary>Collection is not yet created</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobJobStatusCompleted">
	<summary>Job is complete</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobJobStatusAvailable">
	<summary>Job is available for processing</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobJobStatusAuthorised">
	<summary>Job has been authorised</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobJobStatusSuspended">
	<summary>Job has been suspended</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobJobStatusCancelled">
	<summary>Job is Cancelled</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobJobStatusRejected">
	<summary>Job has been rejected</summary>
</member><member name="F:MedscreenLib.Constants.GCST_JobJobStatusInspection">
	<summary>Job is undergoing inspection</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CANC_NoInvoice">
	<summary>Cancellation status Don't invoice</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CANC_WaitingTimeSheet">
	<summary>Cancellation status Waiting on Collector's time sheet</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CANC_Ready">
	<summary>Cancellation status Ready to be reviewed</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CANC_NotCancelled">
	<summary>Cancellation status Not cancelled</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CANC_Problem">
	<summary>Cancellation status Problem raised</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CANC_InvoiceD">
	<summary>Cancellation status Invoiced</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Cust_Status_New">
	<summary>Customer Profile Status New</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Cust_Status_Suspended">
	<summary>Customer Profile Status Suspended</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Cust_Status_Active">
	<summary>Customer Profile Status Active</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Cust_Status_Removed">
	<summary>Customer Profile Status Removed</summary>
</member><member name="F:MedscreenLib.Constants.BoxHeightSmall">
	<summary>Small box height</summary>
</member><member name="F:MedscreenLib.Constants.BoxHeightMedium">
	<summary>Medium box height</summary>
</member><member name="F:MedscreenLib.Constants.BoxHeightLarge">
	<summary>Large box height</summary>
</member><member name="F:MedscreenLib.Constants.BoxGap">
	<summary>Gap between boxes</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Cust_Address_Main">
	<summary>Address type main address</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Cust_Address_Sec">
	<summary>Address type Shipping</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Cust_Address_Inv">
	<summary>Address type Invoicing</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Vessel_Address_Inv">
	<summary>Address type Vessel Invoicing</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Table_Address">
	<summary>Table based address</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Adhoc_Address_Main">
	<summary>Adhoc address</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Adhoc_Address_Inv">
	<summary>Adhoc address invoice</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Vessel_Address_Mail">
	<summary>Vessel Address</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Delivery_Address">
	<summary>Delivery address</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Address_Site">
	<summary>Delivery Address</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Address_CollOfficer">
	<summary>Collecting Officer Address</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Address_Bank">
	<summary>Bank Address</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Address_InvMail">
	<summary>invoicing mail Address</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Address_InvShip">
	<summary>invoicing shipping Address</summary>
</member><member name="F:MedscreenLib.Constants.GCST_AddrType_VesselInv">
	<summary>Address Type Vessel Invoice</summary>
</member><member name="F:MedscreenLib.Constants.GCST_AddrType_VesselMail">
	<summary>Address Type Vessel Mail</summary>
</member><member name="F:MedscreenLib.Constants.GCST_AddrType_Customer">
	<summary>Address Type Customer</summary>
</member><member name="F:MedscreenLib.Constants.GCST_AddrType_Centre">
	<summary>Address Type Centre</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IP_EM01">
	<summary>EM01 IP Address</summary>
</member><member name="F:MedscreenLib.Constants.GCST_IP_Matt">
	<summary>MATT IP Address</summary>
</member><member name="F:MedscreenLib.Constants.GCST_User_FullNetworkID">
	<summary>User Index by Domain and ID</summary>
</member><member name="F:MedscreenLib.Constants.GCST_User_NetworkID">
	<summary>User Index by network ID</summary>
</member><member name="F:MedscreenLib.Constants.GCST_User_Identity">
	<summary>User Index by SMID</summary>
</member><member name="F:MedscreenLib.Constants.GCST_User_Email">
	<summary>Return User Email</summary>
</member><member name="F:MedscreenLib.Constants.GCST_User_Name">
	<summary>Return User Description (fuill name)</summary>
</member><member name="F:MedscreenLib.Constants.GCST_User_Manager">
	<summary>Return User's Manager</summary>
</member><member name="F:MedscreenLib.Constants.GCST_User_Department">
	<summary>Return User's Department</summary>
</member><member name="F:MedscreenLib.Constants.GCST_User_Location">
	<summary>Return User's Location</summary>
</member><member name="F:MedscreenLib.Constants.PaymentTypes.PaymentCard">
	<summary>Payment by card</summary>
</member><member name="F:MedscreenLib.Constants.PaymentTypes.PaymentCheque">
	<summary>Payment by cheque</summary>
</member><member name="F:MedscreenLib.Constants.PaymentTypes.PaymentCash">
	<summary>Payment by Cash</summary>
</member><member name="T:MedscreenLib.Constants.PaymentTypes">
	<summary>
 Types of payment
 </summary>
</member><member name="F:MedscreenLib.Constants.ConfirmationType.Arrange">
	<summary>Confirmation on Arranging</summary>
</member><member name="F:MedscreenLib.Constants.ConfirmationType.Confirm">
	<summary>Confirmation on Completion</summary>
</member><member name="T:MedscreenLib.Constants.ConfirmationType">
	<summary>
 Customer Confirmation messages types
 </summary>
</member><member name="F:MedscreenLib.Constants.SendMethod.Email">
	<summary>Send by Email</summary>
</member><member name="F:MedscreenLib.Constants.SendMethod.Fax">
	<summary>Send by Fax</summary>
</member><member name="F:MedscreenLib.Constants.SendMethod.PDF">
	<summary>Send as PDF</summary>
</member><member name="F:MedscreenLib.Constants.SendMethod.Printer">
	<summary>Send to Printer</summary>
</member><member name="F:MedscreenLib.Constants.SendMethod.Verbal">
	<summary>Phone</summary>
</member><member name="F:MedscreenLib.Constants.SendMethod.NoConfirm">
	<summary>Not defined</summary>
</member><member name="T:MedscreenLib.Constants.SendMethod">
	<summary>
 Methods of sending documents
 </summary>
</member><member name="F:MedscreenLib.Constants.GCST_PaymentCard">
	<summary>Payment by Credit card </summary>
</member><member name="F:MedscreenLib.Constants.GCST_PaymentCheque">
	<summary>Payment by Cheque</summary>
</member><member name="F:MedscreenLib.Constants.GCST_PaymentCash">
	<summary>Payment by Cash</summary>
</member><member name="F:MedscreenLib.Constants.GCST_Collection_Abbr">
	<summary>Starting abbreviation for a Collection</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollOffSendPrinter">
	<summary>Send to Officer by (print out)</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollOffSendHomeFax">
	<summary>Send to Officer by FAX (home)</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollOffSendWorkFax">
	<summary>Send to Officer by FAX (work)</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollOffSendHomeEmail">
	<summary>Send to Officer by E-Mail (home)</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollOffSendWorkEmail">
	<summary>Send to Officer by E-Mail (Office)</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollOffSendHomePhone">
	<summary>Contact Officer by Home Phone </summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollOffSendWorkPhone">
	<summary>Contact Officer by Work Phone</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_OSample">
	<summary>Old style sample charge</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_OMinCharge">
	<summary>Old style minimum charge </summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_OMaxCharge">
	<summary>Old style maximum charge</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_OMRO">
	<summary>Old style MRO charge</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_Comment">
	<summary>Old style collection charge</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_OTest">
	<summary>Old style Additional Test charge</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_OCollection">
	<summary>Old style Collection charge</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_OTime">
	<summary>Old style Collection Time charge</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_Retainer">
	<summary>Annual retainer</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_Cancel_Routine">
	<summary>Collection Cancellation Routine</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_Cancel_Oncall">
	<summary>Collection Cancellation CallOut</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_Cancel_Fixed">
	<summary>Collection Cancellation Fixed Site</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_Cancel_LULOncall">
	<summary>Collection Cancellation LUL CallOut</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_Cancel_LULInhours">
	<summary>Collection Cancellation LUL InHours</summary>
</member><member name="F:MedscreenLib.Constants.GCST_LineItem_Cancel_LULOuthours">
	<summary>Collection Cancellation LUL Out of hours</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollType_Routine">
	<summary>Collection Type Routine</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollType_CallOut">
	<summary>Collection Type Call out UK</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollType_FixedSite">
	<summary>Collection Type Fixed Site</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollType_AnalOnly">
	<summary>Collection Type Analysis Only</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollType_Obsolete">
	<summary>Collection Type Not used</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollType_CallOutUK">
	<summary>Collection Type Call out UK</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollType_CalloutOS">
	<summary>Collection Type Call out overseas</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollType_RoutineUK">
	<summary>Collection Type Routine</summary>
</member><member name="F:MedscreenLib.Constants.GCST_CollType_RoutineOS">
	<summary>Collection Type Routine Overseas</summary>
</member><member name="F:MedscreenLib.Constants.cstTableHead">
	<summary>Table header (start) in HTML</summary>
</member><member name="F:MedscreenLib.Constants.cstColTableHead">
	<summary>Table header element (HTML)</summary>
</member><member name="F:MedscreenLib.Constants.cstHTMLCurrency">
	<summary>HTML CURRENCY indicator </summary>
</member><member name="F:MedscreenLib.Constants.CollOfficerSend.Printer">
	<summary>Send by Printer</summary>
</member><member name="F:MedscreenLib.Constants.CollOfficerSend.HomeFax">
	<summary>Send To Fax at home</summary>
</member><member name="F:MedscreenLib.Constants.CollOfficerSend.WorkFax">
	<summary>Send To Fax at work address</summary>
</member><member name="F:MedscreenLib.Constants.CollOfficerSend.HomeEmail">
	<summary>Send to Home Email address</summary>
</member><member name="F:MedscreenLib.Constants.CollOfficerSend.WorkEmail">
	<summary>Sendto work Email </summary>
</member><member name="F:MedscreenLib.Constants.CollOfficerSend.WorkPhone">
	<summary>Use Work Phone number</summary>
</member><member name="F:MedscreenLib.Constants.CollOfficerSend.HomePhone">
	<summary>Use Home Phone Number</summary>
</member><member name="F:MedscreenLib.Constants.CollOfficerSend.NotDefined">
	<summary>Not Defined</summary>
</member><member name="T:MedscreenLib.Constants.CollOfficerSend">
	<summary>
 Collecting Officer send methods
 </summary>
</member><member name="F:MedscreenLib.Constants.ReportType.CollectionRequest">
	<summary>Collection Request Report</summary>
</member><member name="F:MedscreenLib.Constants.ReportType.CollectionArrangeConf">
	<summary>Collection Arranged Report (to customer)</summary>
</member><member name="F:MedscreenLib.Constants.ReportType.CollectionCompleteConf">
	<summary>Collection Completed Report </summary>
</member><member name="T:MedscreenLib.Constants.ReportType">
	<summary>
 Report types
 </summary>
</member><member name="F:MedscreenLib.Constants.ChangeCase.ChCUpper">
	<summary>Force to upper case</summary>
</member><member name="F:MedscreenLib.Constants.ChangeCase.ChCLower">
	<summary>Force to lower case</summary>
</member><member name="F:MedscreenLib.Constants.ChangeCase.ChCSentenace">
	<summary>Capitalise only the first letter</summary>
</member><member name="F:MedscreenLib.Constants.ChangeCase.ChCCapitalise">
	<summary>Capitalise all first letters</summary>
</member><member name="T:MedscreenLib.Constants.ChangeCase">
	<summary>
 Capitilisation enumeration constants
 </summary>
</member><member name="F:MedscreenLib.Constants.GCST_COMM_CollCancel">
	<summary>Collection cancellation comment</summary>
</member><member name="F:MedscreenLib.Constants.GCST_COMM_CollInvoice">
	<summary>Collection Invoice comment</summary>
</member><member name="F:MedscreenLib.Constants.GCST_COMM_CollCancelInvoice">
	<summary>Collection cancellation invoice comment</summary>
</member><member name="F:MedscreenLib.Constants.GCST_COMM_CollConfirm">
	<summary>Collection confirmation comment</summary>
</member><member name="F:MedscreenLib.Constants.GCST_COMM_CollSendToOfficer">
	<summary>Collection sent to Officer comment</summary>
</member><member name="F:MedscreenLib.Constants.GCST_COMM_CollReSendToOfficer">
	<summary>Collection resent to Officer comment</summary>
</member><member name="F:MedscreenLib.Constants.GCST_COMM_CollCOOfficerInfo">
	<summary>Collection Information sent to Officer comment</summary>
</member><member name="F:MedscreenLib.Constants.GCST_COMM_CCFix">
	<summary>Collection correction made to collection comment</summary>
</member><member name="F:MedscreenLib.Constants.GCST_COMM_ERROR">
	<summary>Collection error made comment</summary>
</member><member name="F:MedscreenLib.Constants.GCST_COMM_NEWColl">
	<summary>Collection created comment</summary>
</member><member name="F:MedscreenLib.Constants.GCSTCustSite">
	<summary>Customer Site</summary>
</member><member name="F:MedscreenLib.Constants.GCSTMaritimeSite">
	<summary>Maritime Customer Site</summary>
</member><member name="P:MedscreenLib.Constants.GCST_X_DRIVE">
	<summary>
     Location of the X Drive
 </summary>
	<value>
		<para>
		</para>
	</value>
	<remarks>
	</remarks>
</member><member name="P:MedscreenLib.Constants.FileServer">
	<summary>
     Location of the file server
 </summary>
	<value>
		<para>
		</para>
	</value>
	<remarks>
	</remarks>
</member><member name="P:MedscreenLib.Constants.CollectionEmailAddress">
	<summary>
     Email Address to send Collections from  using OUTPUT_FROM command
 </summary>
</member><member name="M:MedscreenLib.Constants.ReporterEmailFrom">
	<summary>
 Created by taylor on ANDREW at 25/01/2007 07:11:17
     Create reporter email from address
 </summary>
	<returns>
     A System.String value...
 </returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>taylor</Author><date> 25/01/2007</date><Action></Action></revision>
	</revisionHistory>
</member><member name="T:MedscreenLib.Constants">
	<summary>
 Public Constants
 </summary>
	<remarks>
 Constants these values are in the main replicated in LIB_CONSTANTS in the Sample Manager source files
 </remarks>
</member><member name="M:MedscreenLib.BooleanField.#ctor(System.String,System.Char,System.Char,System.Char,System.Boolean)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
	<param name="NVL">Value to use if Null in the database</param>
	<param name="TrueChar">Character that indicates a TRUE value defaults to 'T'</param>
	<param name="FalseChar">Character that indicates a FALSE value defaults to 'F'</param>
	<param name="isIdentity">Indicates that it forms part of the primary key, defaults to false</param>
</member><member name="P:MedscreenLib.BooleanField.Value">
	<summary>
 Value property for Boolean field 
 </summary>
	<remarks> An override on the base class to give a boolean value field
 </remarks>
</member><member name="P:MedscreenLib.BooleanField.TrueChar">
	<summary>
 Indicates what is being used to indate TRUE
 </summary>
</member><member name="P:MedscreenLib.BooleanField.FalseChar">
	<summary>
 Indicates what is being used to indate FALSE
 </summary>
</member><member name="M:MedscreenLib.BooleanField.ToXML">
	<summary>
 Convert Field to an XML representation of the field
 </summary>
</member><member name="M:MedscreenLib.BooleanField.ValueToDbString(System.Char,System.Boolean)">
	<summary>
 convert the current value into a form suitable for use in the database
 </summary>
	<param name="Sep"></param>
</member><member name="M:MedscreenLib.BooleanField.Changed">
	<summary>
 Tells whether field has changed
 </summary>
	<returns>True if field has changed value</returns>
</member><member name="T:MedscreenLib.BooleanField">
	<summary>
 A field that represents a boolean value within the database
 </summary>
	<remarks>A Boolean field is represented in the database by a varchar2(1) field,
 this usually has the values of 'T' for TRUE and 'F' for FALSE, but it may have other values
 </remarks>
</member><member name="M:MedscreenLib.UserField.#ctor(System.String)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
</member><member name="M:MedscreenLib.UserField.Changed">
	<summary>
 Always will return true
 </summary>
	<returns>True if field has changed value</returns>
</member><member name="T:MedscreenLib.UserField">
	<summary>
 A field that represents a Sample Manager User in the database
 </summary>
	<remarks>
 This type of field though primarily intended for use in maintenace fields can be used anywhere where the data represents a Personnel.identity field
 </remarks>
</member><member name="M:MedscreenLib.TimeStampField.#ctor(System.String)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
</member><member name="M:MedscreenLib.TimeStampField.UpdateString">
	<summary>
 Provides the update information, uses Sysdate
 </summary>
	<returns>Code to se tthe field to sysdate</returns>
</member><member name="M:MedscreenLib.TimeStampField.Changed">
	<summary>
 Always will return true
 </summary>
	<returns>True if field has changed value</returns>
</member><member name="M:MedscreenLib.TimeStampField.ValueToDbString(System.Char,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
 For timestamp fields we should write sysdate into the field.
 </summary>
	<param name="Sep"></param>
	<param name="ChangeID"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [01/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.TimeStampField">
	<summary>
 A field that represents a time stamp field in the database
 </summary>
	<remarks>
 This type of field though primarily intended for use in maintenace fields can be used anywhere where the data represents a timestamp<para/>
 This field will usually have the name Modified_on and will be stored as a date
 </remarks>
</member><member name="M:MedscreenLib.DateField.#ctor(System.String,System.DateTime,System.Boolean)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
	<param name="NVL">Representation of NULL values</param>
	<param name="isIdentity">Indicates that the field is part of the primary key</param>
</member><member name="M:MedscreenLib.DateField.#ctor(System.String)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
</member><member name="M:MedscreenLib.DateField.ToXML">
	<summary>
 Override of XML function to deal with dates
 </summary>
	<returns>XML representation of field value</returns>
</member><member name="F:MedscreenLib.DateField.DummyDate">
	<summary>
 this date is used to represent a null date
 </summary>
</member><member name="M:MedscreenLib.DateField.ZeroDate">
	<summary>
 this date is used to represent a null date
 </summary>
	<returns>Dummy date</returns>
</member><member name="P:MedscreenLib.DateField.Value">
	<summary>
 the value of this field as a date
 </summary>
</member><member name="T:MedscreenLib.DateField">
	<summary>
 A field that represents a date in the database
 </summary>
</member><member name="M:MedscreenLib.IntegerField.#ctor(System.String,System.Int32,System.Boolean)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
	<param name="NVL">Representation of NULL values</param>
	<param name="isIdentity">Indicates that the field is part of the primary key</param>
</member><member name="M:MedscreenLib.IntegerField.ToXML">
	<summary>
 Override of XML function to deal with dates
 </summary>
	<returns>XML representation of field value</returns>
</member><member name="T:MedscreenLib.IntegerField">
	<summary>
 represents integer fields in the database i.e type NUMBER or NUMBER(*)
 </summary>
</member><member name="M:MedscreenLib.TableSetField.#ctor(System.String,System.Int32,System.Boolean)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
	<param name="NVL">Representation of NULL values</param>
	<param name="isIdentity">Indicates that the field is part of the primary key</param>
</member><member name="M:MedscreenLib.TableSetField.ToXML">
	<summary>
 Override of XML function to deal with dates
 </summary>
	<returns>XML representation of field value</returns>
</member><member name="T:MedscreenLib.TableSetField">
	<summary>
 represents a tableset in the database
 </summary>
</member><member name="M:MedscreenLib.ROWIDField.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create new Rowid field
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/07/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.ROWIDField.IsSet">
 -----------------------------------------------------------------------------
 <summary>
 Indicate whether RowId is set 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/07/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.ROWIDField">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : ROWIDField
 
 -----------------------------------------------------------------------------
 <summary>
 Handles RowIDs a pseudocolumn in the database
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/07/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.StringField.#ctor(System.String,System.String,System.Int32,System.Boolean)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
	<param name="NVL">Representation of NULL values</param>
	<param name="Length">Length of string</param>
	<param name="isIdentity">Indicates that the field is part of the primary key</param>
</member><member name="M:MedscreenLib.StringField.ToXML">
	<summary>
 Override of XML function to deal with strings
 </summary>
	<returns>XML representation of field value</returns>
</member><member name="P:MedscreenLib.StringField.StringValue">
	<summary>
 separate property to return value as a string
 </summary>
</member><member name="T:MedscreenLib.StringField">
	<summary>
 represents a string VARCHAR2(*) or CHAR
 </summary>
</member><member name="M:MedscreenLib.StringPhraseField.#ctor(System.String,System.String,System.Int32,System.String,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
 Create object 
 </summary>
	<param name="FieldName"></param>
	<param name="NVL"></param>
	<param name="Length"></param>
	<param name="Phrase"></param>
	<param name="isIdentity"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [08/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.StringPhraseField.Phrase">
 -----------------------------------------------------------------------------
 <summary>
 Expose the phrase used 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [08/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.StringPhraseField.PhraseObject">
 -----------------------------------------------------------------------------
 <summary>
 Expose the underlying phrase
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Taylor]</Author><date> [15/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.StringPhraseField.PhraseValue">
 -----------------------------------------------------------------------------
 <summary>
 Return the phrase description associated with the phrase 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.StringPhraseField.OrderNumber">
 -----------------------------------------------------------------------------
 <summary>
 Get Order number of phrase
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	23/07/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.StringPhraseField">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : StringPhraseField
 
 -----------------------------------------------------------------------------
 <summary>
 String field linked to a phrase
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [08/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.BooleanPhraseField.#ctor(System.String,System.Char,System.String,System.Char,System.Char,System.Boolean)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
	<param name="NVL">Value to use if Null in the database</param>
	<param name="TrueChar">Character that indicates a TRUE value defaults to 'T'</param>
	<param name="FalseChar">Character that indicates a FALSE value defaults to 'F'</param>
	<param name="isIdentity">Indicates that it forms part of the primary key, defaults to false</param>
</member><member name="P:MedscreenLib.BooleanPhraseField.Value">
	<summary>
 Value property for Boolean field 
 </summary>
	<remarks> An override on the base class to give a boolean value field
 </remarks>
</member><member name="P:MedscreenLib.BooleanPhraseField.TrueChar">
	<summary>
 Indicates what is being used to indate TRUE
 </summary>
</member><member name="P:MedscreenLib.BooleanPhraseField.FalseChar">
	<summary>
 Indicates what is being used to indate FALSE
 </summary>
</member><member name="M:MedscreenLib.BooleanPhraseField.ToXML">
	<summary>
 Convert Field to an XML representation of the field
 </summary>
</member><member name="M:MedscreenLib.BooleanPhraseField.ValueToDbString(System.Char,System.Boolean)">
	<summary>
 convert the current value into a form suitable for use in the database
 </summary>
	<param name="Sep"></param>
</member><member name="M:MedscreenLib.BooleanPhraseField.Changed">
	<summary>
 Tells whether field has changed
 </summary>
	<returns>True if field has changed value</returns>
</member><member name="M:MedscreenLib.StringRangeField.#ctor(System.String,System.String,System.Int32,System.String,System.Boolean)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
	<param name="NVL">Representation of NULL values</param>
	<param name="Length">Length of string</param>
	<param name="Range">Range of possible values</param>
	<param name="isIdentity">Indicates that the field is part of the primary key</param>
</member><member name="P:MedscreenLib.StringRangeField.Value">
	<summary>
 override of value property to do error checking
 </summary>
</member><member name="M:MedscreenLib.StringRangeField.HasError">
	<summary>
 Error check
 </summary>
	<returns>TRUE if error</returns>
</member><member name="T:MedscreenLib.StringRangeField">
	<summary>
 specialised form of string field to deal with set based strings
 </summary>
</member><member name="M:MedscreenLib.DoubleField.#ctor(System.String,System.Double,System.Boolean)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
	<param name="NVL">Representation of NULL values</param>
	<param name="isIdentity">Indicates that the field is part of the primary key</param>
</member><member name="M:MedscreenLib.DoubleField.ToXML">
	<summary>
 Override of XML function to deal with numbers
 </summary>
	<returns>XML representation of field value</returns>
</member><member name="M:MedscreenLib.DoubleField.XSDSchema">
	<summary>
 Override of XSDSchema function to deal with numbers
 </summary>
	<returns>XML representation of field structure</returns>
</member><member name="T:MedscreenLib.DoubleField">
	<summary>
 Representation of a real in the database
 </summary>
</member><member name="M:MedscreenLib.RangeOption.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create new range option 
 </summary>
	<param name="OptionName"></param>
	<remarks>
	</remarks>
	<history>
 	[taylor]	04/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.RangeOption.GetDefault">
 -----------------------------------------------------------------------------
 <summary>
 Get default value 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	04/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.RangeOption.Load">
 -----------------------------------------------------------------------------
 <summary>
 Load value from database
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	04/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.RangeOption.Value">
 -----------------------------------------------------------------------------
 <summary>
 Expose the value property
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	01/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.RangeOption.RollBack">
 -----------------------------------------------------------------------------
 <summary>
 Roll data back to base value 
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	04/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.RangeOption.Customer">
 -----------------------------------------------------------------------------
 <summary>
 Get set customer, set operation loads
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	01/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.RangeOption.Update">
 -----------------------------------------------------------------------------
 <summary>
 Update value to database
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	04/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.RangeOption">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : RangeOption
 
 -----------------------------------------------------------------------------
 <summary>
 object to handle range options replacing database fields
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	01/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.BooleanOption.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 create object 
 </summary>
	<param name="OptionName"></param>
	<remarks>
	</remarks>
	<history>
 	[taylor]	01/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.BooleanOption.GetDefault">
 -----------------------------------------------------------------------------
 <summary>
 Get the default value for this option
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	04/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.BooleanOption.Load">
 -----------------------------------------------------------------------------
 <summary>
 Get value of option
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	01/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.BooleanOption.RollBack">
 -----------------------------------------------------------------------------
 <summary>
 Rollback to base value 
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	04/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.BooleanOption.Value">
 -----------------------------------------------------------------------------
 <summary>
 Expose the value property
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	01/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.BooleanOption.Customer">
 -----------------------------------------------------------------------------
 <summary>
 Get set customer, set operation loads
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	01/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.BooleanOption.Update">
 -----------------------------------------------------------------------------
 <summary>
 Update value to database
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	04/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.BooleanOption">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : BooleanOption
 
 -----------------------------------------------------------------------------
 <summary>
     a database access object tied to a customer option
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	01/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.TableField.ReadOnlyField">
 -----------------------------------------------------------------------------
 <summary>
 Indicates whether this field is read only or not
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [15/11/2005]</date><Action>Added</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.TableField.#ctor">
	<summary>
 Constructor
 </summary>
</member><member name="M:MedscreenLib.TableField.#ctor(System.String,System.Object,System.Boolean)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
	<param name="NVL">Representation of NULL values</param>
	<param name="isIdentity">Indicates that the field is part of the primary key</param>
</member><member name="M:MedscreenLib.TableField.#ctor(System.String,System.Object,System.Int32,System.Boolean)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
	<param name="NVL">Representation of NULL values</param>
	<param name="FieldLen">The defined length of the field (Strings Only)</param>
	<param name="isIdentity">Indicates that the field is part of the primary key</param>
</member><member name="M:MedscreenLib.TableField.#ctor(System.String,System.Object,System.Int32,System.Object,System.Boolean)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
	<param name="NVL">Representation of NULL values</param>
	<param name="FieldLen">The defined length of the field (Strings Only)</param>
	<param name="value">The value of the field</param>
	<param name="isIdentity">Indicates that the field is part of the primary key</param>
</member><member name="M:MedscreenLib.TableField.#ctor(System.String,System.Object,System.Object,System.Boolean)">
	<summary>
 Constructor
 </summary>
	<param name="FieldName">Name of the field in the database</param>
	<param name="NVL">Representation of NULL values</param>
	<param name="value">The value of the field</param>
	<param name="isIdentity">Indicates that the field is part of the primary key</param>
</member><member name="P:MedscreenLib.TableField.NVL">
	<summary>
 NVL value
 </summary>
</member><member name="P:MedscreenLib.TableField.TableName">
	<summary>
 Name of the table field is contained in
 </summary>
	<value></value>
	<remarks></remarks>
	<revisionHistory></revisionHistory>
</member><member name="M:MedscreenLib.TableField.SetNull">
	<summary>
 Set the field to null
 </summary>
</member><member name="M:MedscreenLib.TableField.UpdateString">
	<summary>
 String to update the field in the database
 </summary>
	<returns>String that will update this field</returns>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [15/11/2005]</date><Action>Added support for readonly fields</Action></revision>
	</revisionHistory>
</member><member name="P:MedscreenLib.TableField.Value">
	<summary>
 The value of this field
 </summary>
</member><member name="M:MedscreenLib.TableField.Changed">
	<summary>
 Tells whether field has changed
 </summary>
	<returns>True if field has changed value</returns>
</member><member name="P:MedscreenLib.TableField.OldValue">
	<summary>
 The original value read from the database
 </summary>
</member><member name="P:MedscreenLib.TableField.IsIdentity">
	<summary>
 Is the field part of the primary key
 </summary>
</member><member name="P:MedscreenLib.TableField.FieldName">
	<summary>
 Name of field in the database
 </summary>
</member><member name="P:MedscreenLib.TableField.FieldLength">
	<summary>
 Length of field
 </summary>
</member><member name="M:MedscreenLib.TableField.XSDSchema">
	<summary>
 Provide XSD information
 </summary>
	<returns>Schema info</returns>
</member><member name="M:MedscreenLib.TableField.XMLValue">
	<summary>
 return value as XML
 </summary>
	<returns>XML form of the contents of field</returns>
</member><member name="M:MedscreenLib.TableField.CSVValue">
	<summary>
 return value as CSV
 </summary>
	<returns>CSV form of the contents of field</returns>
</member><member name="M:MedscreenLib.TableField.ToCSV">
	<summary>
 return value as CSV
 </summary>
	<returns>CSV form of the contents of field</returns>
</member><member name="M:MedscreenLib.TableField.ToXML">
	<summary>
 return value as XML
 </summary>
	<returns>XML form of the contents of field</returns>
</member><member name="M:MedscreenLib.TableField.ToXMLSchema(System.String)">
	<summary>
 return value as XML
 </summary>
	<param name="Highlight">Hightlight this field using string</param>
	<returns>XML form of the contents of field</returns>
</member><member name="T:MedscreenLib.TableField">
	<summary>
 A field that value within the database
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [15/11/2005]</date><Action>Read only property Added</Action></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.AddressFields.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 constructor
 </summary>
	<param name="strTableName">Table in which these fields can be found</param>
	<param name="defaultFieldLen">normal length of fields</param>
	<param name="Addr1FieldName">Line1 field name</param>
	<param name="Addr2FieldName">Line2 field name</param>
	<param name="Addr3FieldName">Line3 field name</param>
	<param name="AddrCityName">City field name</param>
	<param name="addrDistrictName">County field name</param>
	<param name="adrPostcodeName">Postcode field name</param>
	<param name="addrCountry">Country Field Name defaults to ""</param>
	<param name="addrPhone">Phone field Name defaults to ""</param>
	<param name="addrFax">Fax field defaults to ""</param>
	<remarks>If a fieldname is a null string it is not added</remarks>
</member><member name="M:MedscreenLib.AddressFields.Clone">
 -----------------------------------------------------------------------------
 <summary>
	</summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [07/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.AddressFields.ToXML">
	<summary>
 Override of XML function to deal with addresses
 </summary>
	<returns>XML representation of field value</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [07/12/2006]</date><Action>fixed bug in xml production</Action></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.AddressFields.Update(System.Data.OleDb.OleDbConnection,System.String)">
	<summary>
 Override of Update function to deal with addresses
 </summary>
	<param name="Conn">Oledb data connector</param>
	<param name="WhereString">Where clause</param>
	<returns>TRUE if succesful</returns>
</member><member name="P:MedscreenLib.AddressFields.AddLine1">
	<summary>
 First line of address
 </summary>
</member><member name="P:MedscreenLib.AddressFields.AddLine2">
	<summary>
 Second line of address
 </summary>
</member><member name="P:MedscreenLib.AddressFields.AddLine3">
	<summary>
Third line of address
 </summary>
</member><member name="P:MedscreenLib.AddressFields.AddrCity">
	<summary>
 City of address
 </summary>
</member><member name="P:MedscreenLib.AddressFields.AddrPostcode">
	<summary>
 Postcode
 </summary>
</member><member name="P:MedscreenLib.AddressFields.AddrPhone">
	<summary>
 Phone
 </summary>
</member><member name="P:MedscreenLib.AddressFields.AddrCountry">
	<summary>
 Country
 </summary>
</member><member name="P:MedscreenLib.AddressFields.AddrFax">
	<summary>
 Fax
 </summary>
</member><member name="T:MedscreenLib.AddressFields">
	<summary>
 specialised set of fields to match basic address fields in tables
 </summary>
</member><member name="P:MedscreenLib.TableFields.XMLHeader">
	<summary>
 The XMLHeader value
 </summary>
</member><member name="M:MedscreenLib.TableFields.Changed">
	<summary>
 Indicates whether the data have changed or not
 </summary>
	<returns>TRUE if the data have  changed</returns>
</member><member name="M:MedscreenLib.TableFields.Load(System.Data.OleDb.OleDbConnection,System.String,Microsoft.VisualBasic.Collection,System.Boolean)">
	<summary>
 load rows into the table
 </summary>
	<param name="Conn">Oledb Data connector</param>
	<param name="WhereClause">Optional where cluase restricting data </param>
	<returns>TRUE if the data have been loaded</returns>
</member><member name="M:MedscreenLib.TableFields.Delete(System.Data.OleDb.OleDbConnection)">
	<summary>
 Delete rows from the table
 </summary>
	<param name="Conn">Oledb Data connector</param>
	<returns>TRUE if the data have been changed</returns>
</member><member name="M:MedscreenLib.TableFields.Insert(System.Data.OleDb.OleDbConnection)">
	<summary>
 Insert rows into the table
 </summary>
	<param name="Conn">Oledb Data connector</param>
	<returns>TRUE if the data have been changed</returns>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [15/11/2005]</date><Action>Read only checks added</Action></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.TableFields.Update(System.Data.OleDb.OleDbConnection,System.Boolean,System.Boolean)">
	<summary>
 Update rows in the table
 </summary>
	<param name="Conn">Oledb Data connector</param>
	<param name="ChangeID">If TRUE ID values can be changed</param>
	<returns>TRUE if the data have been changed</returns>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [15/11/2005]</date><Action>Read only checks added</Action></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.TableFields.GetRowId">
 -----------------------------------------------------------------------------
 <summary>
 GetRowId from database
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/01/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.TableFields.ReadOnlyTable">
 -----------------------------------------------------------------------------
 <summary>
 Property to control whether this table set is read only or not 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [15/11/2005]</date><Action>Added</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.TableFields.#ctor(System.String)">
	<summary>
 Constructor
 </summary>
	<param name="TableName">Name of table in the database</param>
</member><member name="M:MedscreenLib.TableFields.IndexOf(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 find the position of the field by name
 </summary>
	<param name="FieldName">Name of field</param>
	<returns>Position of field</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [02/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.TableFields.Fill(MedscreenLib.TableFields)">
	<summary>
 Fill the table
 </summary>
	<param name="inFields">Fill this table from these fields</param>
	<returns>TRUE if succesful</returns>
</member><member name="M:MedscreenLib.TableFields.DoTransform(System.String,System.String)">
	<summary>
 transform these data in HTML using a stylsheet
 </summary>
	<param name="StyleSheetID">Stylesheet to use</param>
	<param name="inFileName">Source file optional</param>
	<returns>TRUE if succesful</returns>
</member><member name="P:MedscreenLib.TableFields.Table">
	<summary>
 table reffered to
 </summary>
</member><member name="P:MedscreenLib.TableFields.Item(System.Int32)">
	<summary>
 Field within the database row, indexed by Field position
 </summary>
	<param name="index">Index into the table</param>
</member><member name="P:MedscreenLib.TableFields.Item(System.String)">
	<summary>
 Field within the database table, indexed by Field name
 </summary>
	<param name="index">Index as string</param>
</member><member name="M:MedscreenLib.TableFields.Add(MedscreenLib.TableField)">
	<summary>
 Add a field to the list of fields
 </summary>
	<param name="item">Field to add</param>
	<returns> Index of field</returns>
</member><member name="M:MedscreenLib.TableFields.Count">
	<summary>
 Count of the number of fields in the database
 </summary>
	<returns>Count of the number of fields</returns>
</member><member name="M:MedscreenLib.TableFields.ToXML(System.Int32,System.String)">
	<summary>
 Convert this row to XML
 </summary>
	<param name="Format">Format for the XML</param>
	<param name="HeaderText">Top level entity name</param>
	<returns>XML representation of row</returns>
	<remarks>Format property will allow easy variations on the theme, it is not yet encoded</remarks>
</member><member name="M:MedscreenLib.TableFields.ToCSV">
	<summary>
 Convert this row to CSV Comma Separated Variables
 </summary>
	<returns>This data row converted to CSV</returns>
</member><member name="M:MedscreenLib.TableFields.ToXML(System.Boolean,System.String,System.String,System.Boolean)">
	<summary>
 Convert this row to XML
 </summary>
	<param name="blnNoHeader">Don't add a W3C XML header</param>
	<param name="StyleSheet">XSL StyleSheet to use</param>
	<param name="Header">Top level entity name Default = "", means don't override</param>
	<param name="blnDontCloseHeader">Don't close top level entity default is FALSE</param>
	<returns>XML representation of row</returns>
	<remarks>Use the ToXMLSchema versions in preference</remarks>
</member><member name="M:MedscreenLib.TableFields.ToXMLSchema(System.Boolean,System.String,System.String,System.Boolean)">
	<summary>
 Convert this row to XML
 </summary>
	<param name="blnNoHeader">Don't add a W3C XML header</param>
	<param name="StyleSheet">XSL StyleSheet to use</param>
	<param name="Header">Top level entity name Default = "", means don't override</param>
	<param name="blnDontCloseHeader">Don't close top level entity default is FALSE</param>
	<returns>XML representation of row</returns>
</member><member name="M:MedscreenLib.TableFields.ToXMLSchema">
	<summary>
 Convert this row to XML
 </summary>
	<returns>XML representation of row</returns>
</member><member name="M:MedscreenLib.TableFields.ToXMLSchema(System.Int32)">
	<summary>
 Convert this row to XML
 </summary>
	<param name="UseOption">Don't add a W3C XML header</param>
	<returns>XML representation of row</returns>
</member><member name="M:MedscreenLib.TableFields.CSVFileHeader">
	<summary>
 Produce a CSV File Header, e.g. the titles of the fields
 </summary>
	<returns>CSV representation of row header</returns>
</member><member name="M:MedscreenLib.TableFields.CSVFileRow">
	<summary>
 Produce a CSV File Data row
 </summary>
	<returns>CSV representation of row </returns>
</member><member name="M:MedscreenLib.TableFields.XmlToFile(System.String,System.Boolean,System.String,System.String,System.Boolean)">
	<summary>
 Convert this row to XML
 </summary>
	<param name="Filename">Name of file to store data in</param>
	<param name="blnNoHeader">Don't add a W3C XML header</param>
	<param name="StyleSheet">XSL StyleSheet to use</param>
	<param name="Header">Top level entity name Default = "", means don't override</param>
	<param name="blnDontCloseHeader">Don't close top level entity default is FALSE</param>
	<returns>XML representation of row</returns>
</member><member name="M:MedscreenLib.TableFields.InsertString">
	<summary>
 produce a string which can be used as command to insert these data into a database
 </summary>
	<returns>Insert String</returns>
</member><member name="P:MedscreenLib.TableFields.Loaded">
	<summary>
 Indicates whether the data has been retrieved from the database or is a new record
 </summary>
	<returns>TRUE = has been read from database</returns>
</member><member name="M:MedscreenLib.TableFields.UpdateString(System.Boolean)">
	<summary>
 produce a string which can be used as command to update these data in a database
 </summary>
	<param name="ChangeID">IF TRUE the primary keys can be modified</param>
	<returns>Insert String</returns>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [15/11/2005]</date><Action>Read Only tables dealt with</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.TableFields.ReadFields(System.Xml.XmlNodeList)">
 -----------------------------------------------------------------------------
 <summary>
 readfield data from an xmlnodelist 
 </summary>
	<param name="oread"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [09/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.TableFields.ReadFields(System.Data.OleDb.OleDbDataReader)">
	<summary>
 read a row in the database and populate contents of collection (OLEDB Version)
 </summary>
	<param name="oRead">Data reader</param>
	<returns>TRUE if succesful</returns>
</member><member name="M:MedscreenLib.TableFields.ReadFields(System.Data.DataRow)">
	<summary>
 read a row in the database and populate contents of collection (Datarow Version)
 </summary>
	<param name="oRead">Data reader</param>
	<returns>TRUE if succesful</returns>
</member><member name="M:MedscreenLib.TableFields.ReadFields(System.Data.SqlClient.SqlDataReader)">
	<summary>
 read a row in the database and populate contents of collection (SQL Server Client Version)
 </summary>
	<param name="oRead">Data reader</param>
	<returns>TRUE if succesful</returns>
</member><member name="M:MedscreenLib.TableFields.Commit">
	<summary>
 Commit the values i.e. update the old (read values) values with the new ones 
 so it will now appear unchanged
 </summary>
	<returns>TRUE if succesful</returns>
</member><member name="M:MedscreenLib.TableFields.Initialise">
	<summary>
 Initialise values to the NVL value
 </summary>
	<returns>TRUE if succesful</returns>
</member><member name="M:MedscreenLib.TableFields.InitialiseOldValues">
	<summary>
 Initialise Old (read values) values to the NVL value
 </summary>
	<returns>TRUE if succesful</returns>
</member><member name="M:MedscreenLib.TableFields.XSDSchema">
	<summary>
 Produce an XSD description of these data
 </summary>
	<returns>an XSD description of these data</returns>
</member><member name="M:MedscreenLib.TableFields.DeleteString">
	<summary>
 Produce a command string to delete from database
 </summary>
	<returns>TRUE if succesful</returns>
</member><member name="M:MedscreenLib.TableFields.Rollback">
	<summary>
 Rollback data by replacing Current values with Read or original values
 </summary>
	<returns>TRUE if succesful</returns>
</member><member name="M:MedscreenLib.TableFields.SelectString(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Produce a command string to select these data
 </summary>
	<param name="AddTable">TRUE = FROM Table<para/>FALSE don't add from clause</param>
	<param name="AddSelect">TRUE = prefix with SELECT (default is TRUE)</param>
	<param name="SkipIdentityFields">TRUE = Don't include Primary Key fields (default = FALSE)</param>
	<returns>Return a select command string</returns>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [15/11/2005]</date><Action></Action></revision>
	</revisionHistory>
</member><member name="P:MedscreenLib.TableFields.LastAccessDate">
 -----------------------------------------------------------------------------
 <summary>
 Last access Date 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [13/10/2005]</date><Action>Added</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.TableFields.LastLoadDate">
 -----------------------------------------------------------------------------
 <summary>
 Last Load date 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [13/10/2005]</date><Action>Added</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.TableFields.LastModifyDate">
 -----------------------------------------------------------------------------
 <summary>
 Last change date
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [13/10/2005]</date><Action>Added</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.TableFields">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : TableFields
 
 -----------------------------------------------------------------------------
 <summary>
 Representation of a table within the database
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [15/11/2005]</date><Action>Readonly property Added</Action></revision>
		<revision><Author>[taylor]</Author><date> [13/10/2005]</date><Action>Timestamp properties added</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.ReporterInterfaceX.CustomerContact">
	<summary>
 Customer's contact (recipient)
 </summary>
</member><member name="P:MedscreenLib.ReporterInterfaceX.ClientFullName">
	<summary>
 Full name of the client
 </summary>
</member><member name="P:MedscreenLib.ReporterInterfaceX.ClientId">
	<summary>
 Client's SMID
 </summary>
</member><member name="P:MedscreenLib.ReporterInterfaceX.Subject">
	<summary>
 Subject of message
 </summary>
</member><member name="P:MedscreenLib.ReporterInterfaceX.ReportAddress">
	<summary>
 Address to send to 
 </summary>
</member><member name="P:MedscreenLib.ReporterInterfaceX.ReportType">
	<summary>
 Type of report
 </summary>
</member><member name="P:MedscreenLib.ReporterInterfaceX.ReportMethod">
	<summary>
 How to send report
 </summary>
</member><member name="M:MedscreenLib.ReporterInterfaceX.CreateFilename(System.String)">
	<summary>
 Create a filename for the report
 </summary>
	<param name="strName">Filename to use</param>
</member><member name="M:MedscreenLib.ReporterInterfaceX.WriteReport">
	<summary>
 Write out report
 </summary>
</member><member name="P:MedscreenLib.ReporterInterfaceX.FileName">
	<summary>
Name of file to use
 </summary>
</member><member name="P:MedscreenLib.ReporterInterfaceX.Stream">
	<summary>
Stream in use
 </summary>
</member><member name="M:MedscreenLib.ReporterInterfaceX.#ctor(MedscreenLib.Constants.ReportType)">
	<summary>
Constructor
 </summary>
	<param name="ReportType">Type of report to create</param>
</member><member name="T:MedscreenLib.ReporterInterfaceX">
	<summary>
 Interface to the reporter process
 </summary>
	<remarks>
 The reporter is used to send out custom reports via a number of different delivery channels<para/>
 it works by using command files that are parameterised
 </remarks>
</member><member name="F:MedscreenLib.CRMenuItem.ReportTypes.BAR">
	<summary>Menu divider</summary>
</member><member name="F:MedscreenLib.CRMenuItem.ReportTypes.HTML">
	<summary>HTML report, calls a web site</summary>
</member><member name="F:MedscreenLib.CRMenuItem.ReportTypes.MNU">
	<summary>A Menu</summary>
</member><member name="F:MedscreenLib.CRMenuItem.ReportTypes.PROC">
	<summary>A Routine in a library for VGL the report 
 path field should be a fully qualified routine name, parameters should be qualified in the Parameter collection</summary>
</member><member name="F:MedscreenLib.CRMenuItem.ReportTypes.RPT">
	<summary>Run a report</summary>
</member><member name="F:MedscreenLib.CRMenuItem.ReportTypes.RPTX">
	<summary>Run an extended report</summary>
</member><member name="T:MedscreenLib.CRMenuItem.ReportTypes">
 -----------------------------------------------------------------------------
 <summary>
 Enumeration of the different values that the Menu (report) type field can take
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [30/09/2005]</date><Action>Added</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.CRMenuItem.#ctor">
	<summary>
 Constructor
 </summary>
</member><member name="M:MedscreenLib.CRMenuItem.ToXML">
 -----------------------------------------------------------------------------
 <summary>
 Output Crystal report info as XML 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/04/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.CRMenuItem.Formulae">
	<summary>
 A collection of Parameters for the report
 </summary>
</member><member name="P:MedscreenLib.CRMenuItem.Fields">
	<summary>
 Access to the data row
 </summary>
</member><member name="P:MedscreenLib.CRMenuItem.Handle">
	<summary>
 Handle (to Crystal Report)
 </summary>
</member><member name="P:MedscreenLib.CRMenuItem.MenuText">
	<summary>
 Text that appears on the menu
 </summary>
</member><member name="P:MedscreenLib.CRMenuItem.MenuOrder">
	<summary>
 Position of the menu in the menu list 
 </summary>
</member><member name="P:MedscreenLib.CRMenuItem.MenuParent">
	<summary>
 menu which is the parent of this menu (NULL if no parent)
 </summary>
</member><member name="P:MedscreenLib.CRMenuItem.MenuIdentity">
	<summary>
 ID of this automated report
 </summary>
</member><member name="P:MedscreenLib.CRMenuItem.MenuType">
	<summary>
 Type of Automated Report
 </summary>
</member><member name="P:MedscreenLib.CRMenuItem.ReportType">
 -----------------------------------------------------------------------------
 <summary>
 Property to return Report Type as an Enumeration value
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [30/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.CRMenuItem.MenuPath">
	<summary>
 Path to report template.
 </summary>
	<remarks>The function of this field id dependent on the menu type setting</remarks>
</member><member name="T:MedscreenLib.CRMenuItem">
	<summary>
 Class to manage automated reports
 </summary>
	<remarks>
An adaption has been made to allow generic report handling, this will use menu types to deal with these 
additional types<para/> 
 This class handles report definition parameters, <see cref="T:MedscreenLib.CRFormulaItem"/> which are held in <see cref="T:MedscreenLib.CrFormulaItems"/>.  
 These can be used to direct the report controlling code to locations where the parameters may be found.
 <para/>This object was originally designed for creating Windows Menus for displaying reports, it can 
 still be used that way, but additional <see cref="!:ReportTypes"/> have been defined to make the system more flexible.
 At a minimum the report needs a <see cref="!:MenuIdentity"/> and a <see cref="!:MenuPath"/> defined, though not absolutely essential 
 the <see cref="!:ReportType"/> should also be defined.
</remarks>
	<seealso cref="T:MedscreenLib.CrFormulaItems"/>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [30/09/2005]</date><Action>Enumeration for report types Added, 
 property returning enumeration added</Action></revision>
	</revisionHistory>
</member><member name="M:MedscreenLib.CRMenuItems.#ctor">
	<summary>
 Create a new Automated report collection
 </summary>
</member><member name="M:MedscreenLib.CRMenuItems.AddMenus(System.Windows.Forms.MenuItem,System.EventHandler,System.EventHandler,System.String)">
	<summary>
 Add a Windows Menu
 </summary>
	<param name="MnuItem">Menu Item to add</param>
	<param name="Handler">Windows Event Handler</param>
	<param name="CSVHandler">Windows Event Handler for CSV reports</param>
</member><member name="M:MedscreenLib.CRMenuItems.FindMenu(System.IntPtr,System.Windows.Forms.MenuItem)">
	<summary>
 Find a menu
 </summary>
	<param name="objHandle">Windows handle of the menu to find</param>
	<param name="Item">MenuItem to find</param>
	<returns>Menu Item</returns>
</member><member name="M:MedscreenLib.CRMenuItems.Add(MedscreenLib.CRMenuItem)">
	<summary>
 Add a menu item
 </summary>
	<param name="Item">Item to be added</param>
	<returns>Position in List</returns>
</member><member name="M:MedscreenLib.CRMenuItems.Item(System.IntPtr)">
	<summary>
 get menu item
 </summary>
	<param name="index">Handle of item to be found</param>
	<returns>MenuItem</returns>
</member><member name="M:MedscreenLib.CRMenuItems.Item(System.String,System.Int32)">
	<summary>
 get menu item
 </summary>
	<param name="index">Identity of item to be found</param>
	<returns>MenuItem</returns>
</member><member name="M:MedscreenLib.CRMenuItems.Item(System.Int32)">
	<summary>
 get menu item
 </summary>
	<param name="index">Position of item to be found</param>
	<returns>MenuItem</returns>
</member><member name="T:MedscreenLib.CRMenuItems">
	<summary>
 a Collection of automated reports
 </summary>
</member><member name="M:MedscreenLib.NetChat.#ctor(System.String,System.String,System.Int32)">
	<summary>
 Create New Net Chat Message
 </summary>
	<param name="Message">Message to send</param>
	<param name="UserList">List of user to send message to</param>
	<param name="Top">Send to top N users</param>
</member><member name="T:MedscreenLib.NetChat">
	<summary>
 Wrapper to Net Chat
 </summary>
</member><member name="M:MedscreenLib.CrFormulaItems.#ctor(System.String)">
	<summary>
 Create a new parameter list 
 </summary>
	<param name="Identity">Identity of Automated report to create parameter list for</param>
</member><member name="M:MedscreenLib.CrFormulaItems.IndexOf(MedscreenLib.CRFormulaItem)">
 -----------------------------------------------------------------------------
 <summary>
 Expose index of method
 </summary>
	<param name="Item"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [22/03/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.CrFormulaItems.Add(MedscreenLib.CRFormulaItem)">
	<summary>
 add new parameter to list 
 </summary>
	<param name="CR">Parameter to add</param>
	<returns>Position in list</returns>
</member><member name="M:MedscreenLib.CrFormulaItems.Item(System.Int32)">
	<summary>
 get Item from list  
 </summary>
	<param name="index">Position in list to get</param>
	<returns>Parameter</returns>
</member><member name="M:MedscreenLib.CrFormulaItems.Load(System.Data.OleDb.OleDbConnection)">
	<summary>
 Load parameter list 
 </summary>
	<param name="oConn">OLEDB connector</param>
	<returns>TRUE if succesful</returns>
</member><member name="M:MedscreenLib.CrFormulaItems.ToXML">
	<summary>
 Converts parameters into XML 
 </summary>
	<returns>Parameter list a sXML</returns>
</member><member name="T:MedscreenLib.CrFormulaItems">
	<summary>
 Class to manage parameters for automated reports
 </summary>
</member><member name="F:MedscreenLib.CRFormulaItem.ParameterTypes.typDAYS">
	<summary>Value will refer to a number of days</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.ParameterTypes.typID">
	<summary>Field property will refer to a primary ID</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.ParameterTypes.typBOOLEAN">
	<summary>Types of Parameter possible</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.ParameterTypes.typDATE">
	<summary>Value property will be TRUE or FALSE</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.ParameterTypes.typEMAIL">
	<summary>Value property will refer to a physical or logical date</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.ParameterTypes.typFILENAME">
	<summary>Value property will be a filename, Formula will be a file type</summary>
</member><member name="T:MedscreenLib.CRFormulaItem.ParameterTypes">
	<summary>Types of Parameter possible</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.FormulaTypes.EMAIL">
	<summary>Parameter is a location that the email address can be found</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.FormulaTypes.ENDDATE">
	<summary>Parameter gives the location where the end date for report can be found</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.FormulaTypes.GROUP">
	<summary>Relates to a grouping parameter gives the value e.g. Group or not group, or way of grouping, e.g. Parent child, Sage ID</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.FormulaTypes.ID">
	<summary>Location of the ID for the report</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.FormulaTypes.REPEAT">
	<summary>A parameter relating to repeat frequencies</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.FormulaTypes.STYLESHEET">
	<summary>Typically relates to an XSL stylesheet, could also be a word template</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.FormulaTypes.STARTDATE">
	<summary>Gives the location where the start date can be found</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.FormulaTypes.SMID">
	<summary>Customer's SMID held in value field</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.FormulaTypes.DETAIL">
	<summary>How report will be detailed</summary>
</member><member name="F:MedscreenLib.CRFormulaItem.FormulaTypes.SENDTYPE">
	<summary>How report will be sent</summary>
</member><member name="T:MedscreenLib.CRFormulaItem.FormulaTypes">
 -----------------------------------------------------------------------------
 <summary>
 Types possible for the Formula name field
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [30/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.CRFormulaItem.#ctor">
	<summary>
 Create a new Parameter Item
</summary>
</member><member name="P:MedscreenLib.CRFormulaItem.FieldName">
	<summary>
 Field Name parameter refers to 
</summary>
</member><member name="P:MedscreenLib.CRFormulaItem.Formula">
	<summary>
 Formula used 
</summary>
	<remarks>In crystal reports parameters are named formulae in the report</remarks>
</member><member name="P:MedscreenLib.CRFormulaItem.Identity">
	<summary>
 Identity of Parent report
</summary>
</member><member name="P:MedscreenLib.CRFormulaItem.ParamType">
	<summary>
 Type of Parameter
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.CRFormulaItem.ParamTypeConstant">
	<summary>
 Type of Parameter expressed as ParameterType <see cref="T:MedscreenLib.CRFormulaItem.ParameterTypes"/>
	</summary>
	<remarks></remarks>
	<seealso cref="T:MedscreenLib.CRFormulaItem.ParameterTypes"/>
</member><member name="M:MedscreenLib.CRFormulaItem.ToXML">
	<summary>
 Convert to XML
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.CRFormulaItem.Value">
	<summary>
 Return the value property
</summary>
	<remarks></remarks>
</member><member name="M:MedscreenLib.CRFormulaItem.Update">
	<summary>
 Update Parameter in Database
</summary>
	<returns>TRUE if succesful</returns>
	<remarks></remarks>
</member><member name="M:MedscreenLib.CRFormulaItem.Delete">
 -----------------------------------------------------------------------------
 <summary>
 Delete item from database
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [22/03/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.CRFormulaItem">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : CRFormulaItem
 
 -----------------------------------------------------------------------------
 <summary>
 An object to deal with a single parameter for a report
 </summary>
	<remarks>Firstly there is no restriction on the use these fields can be put to. The current use is as follows :- <para/>
		<see cref="!:ParamType"/> this is used to desc what type of parameter this is, it is available via an enumeration, if you 
 want to add new values, please ensure the enumeration gets updated.<para/>
		<see cref="!:Formula"/>Originally this pointed to a Crystal Report Formula name, 
 again being consistent with the formulae names is advantageous.  It may also be 
 used as a HTML report parameter name.<para/>
		<see cref="!:FieldName"/> The name of the field that this parameter can be found 
 in, this may be fully qualified i.e. TABLE.FIELD<para/>
		<see cref="!:Value"/>The value field contains anything suitable for the parameter.
 
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [30/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.ICPRow.#ctor">
	<summary>
 Create a new ICP Row Entry
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.TransactionId">
	<summary>
 ID of the Transaction (Primary Key)
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.TxnType">
	<summary>
 Transaction Type
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.SchemeName">
	<summary>
 SchemeName
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.Modifier">
	<summary>
 Modifier
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.Cardnumber">
	<summary>
 Card Number (Packed)
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.FormattedCardnumber">
	<summary>
 Card Number (Formatted)
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.Expiry">
	<summary>
 Expiry(4 Character)
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.TxnValue">
	<summary>
 Transaction Value
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.AuthCode">
	<summary>
 Authorisation Code
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.TransactionDate">
	<summary>
 Return Transaction Date as a date time
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.DateTime">
	<summary>
 Transaction Date as a string
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.EFTSeqNum">
	<summary>
 Sequence Number
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.Reference">
	<summary>
 User entered comments
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.MedscreenReference">
	<summary>
 Medscreen reference form C0XXX
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.CMJobNumber">
	<summary>
 Medscreen reference form CM
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.TxnResult">
	<summary>
 Transaction Result
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.AuthMessage">
	<summary>
 Authorisation message
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.UserName">
	<summary>
 User Entering data
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ICPRow.CardHolder">
	<summary>
 Card Holder
</summary>
	<remarks></remarks>
</member><member name="T:MedscreenLib.ICPRow">
	<summary>
 Row in the ICP Table
</summary>
	<remarks>ICP is the credit card database and is part of the Commidea software</remarks>
</member><member name="M:MedscreenLib.ICP.#ctor">
	<summary>
 Create new ICP table
</summary>
</member><member name="M:MedscreenLib.ICP.#ctor(System.String)">
	<summary>
 create new ICPTable
</summary>
	<param name="CmNumber">Collection Manager Number</param>
	<remarks>Find all of the rows that refer to this CM number</remarks>
</member><member name="M:MedscreenLib.ICP.Load(System.String)">
	<summary>
 Load ICPTable
</summary>
	<param name="Where">Where Clause</param>
	<returns>TRUE if rows found</returns>
	<remarks>Find all of the rows that refer to this CM number</remarks>
</member><member name="M:MedscreenLib.ICP.ToCSV(System.String)">
	<summary>
 convert table to CSV
</summary>
	<param name="Filename">Where the file will be stored</param>
	<returns>TRUE if written</returns>
</member><member name="P:MedscreenLib.ICP.Item(System.Int32)">
	<summary>
 return a row in the table
</summary>
	<param name="index">Index of row to be returned</param>
	<returns>an ICP Row <see cref="T:MedscreenLib.ICPRow"/></returns>
</member><member name="M:MedscreenLib.ICP.Add(MedscreenLib.ICPRow)">
	<summary>
 add a line to the table
</summary>
	<param name="item">ICP transaction to add</param>
	<returns>Index of Row added</returns>
</member><member name="T:MedscreenLib.ICP">
	<summary>
 ICP Table
</summary>
	<remarks>ICP is the credit card database and is part of the Commidea software</remarks>
</member><member name="M:MedscreenLib.IntColl.#ctor">
	<summary>
 create One Stop Interface table row entity
</summary>
</member><member name="M:MedscreenLib.IntColl.NewInterface">
	<summary>
 Create a new interface using a CM number
 </summary>
	<returns>New or existing InterfaceClass</returns>
</member><member name="M:MedscreenLib.IntColl.NewInterface(System.Int32)">
	<summary>
 Create a new interface using a CM number
 </summary>
	<param name="intId">OISID</param>
	<returns>New or existing InterfaceClass</returns>
</member><member name="M:MedscreenLib.IntColl.NewInterface(System.String)">
	<summary>
 Create a new interface using a CM number
 </summary>
	<param name="strId">CM_Job_number</param>
	<returns>New or existing InterfaceClass</returns>
</member><member name="T:MedscreenLib.IntColl">
	<summary>
 One Stop Interface table
</summary>
</member><member name="M:MedscreenLib.SMTable.#ctor(System.String)">
	<summary>
 Create a new table row entity
</summary>
	<param name="TableName">Interface table in use</param>
	<remarks></remarks>
</member><member name="P:MedscreenLib.SMTable.TableName">
	<summary>
 Returns / sets the name of the table
</summary>
	<remarks></remarks>
</member><member name="M:MedscreenLib.SMTable.DoUpdate">
	<summary>
 Updates this row into the database
</summary>
	<returns>TRUE if succesful</returns>
	<remarks>If the row has not been loaded will do an Insert instead
 </remarks>
</member><member name="P:MedscreenLib.SMTable.Loaded">
	<summary>
 Has this row been loaded from the database
</summary>
	<returns>TRUE if loaded from database</returns>
	<remarks></remarks>
</member><member name="M:MedscreenLib.SMTable.Load(System.Data.OleDb.OleDbConnection)">
	<summary>
 Get the contents of this row from the database
</summary>
	<param name="conn">OLEDB Data Connector</param>
	<returns>TRUE if succesful</returns>
	<remarks></remarks>
</member><member name="M:MedscreenLib.SMTable.Load">
	<summary>
 Get the contents of this row from the database
</summary>
	<returns>TRUE if succesful</returns>
	<remarks>Uses medConnection.Connection to provide the connection
 </remarks>
	<seealso cref="P:MedscreenLib.MedConnection.Connection"/>
</member><member name="T:MedscreenLib.SMTable">
	<summary>
 base class representing a Sample Manager Table
</summary>
	<remarks>This class is used to represent a Sample Manager Table in the database,<para/>
 it is inherited to provide specific functiionality in various business objects.
 </remarks>
</member><member name="M:MedscreenLib.SMInterface.#ctor(System.String)">
	<summary>
 create a new interface table entry with common fields
</summary>
</member><member name="M:MedscreenLib.SMInterface.Delete">
	<summary>
 delete interface row 
</summary>
	<returns>TRUE If succesful</returns>
</member><member name="M:MedscreenLib.SMInterface.GetMaxID">
	<summary>
 Get the current highest ID number in table
</summary>
	<returns>Maximum Value</returns>
	<remarks>This routine gets the current maximum value 
 and then inserts a new row with value max +1.  The ID property is set to this value
 </remarks>
</member><member name="P:MedscreenLib.SMInterface.ID">
	<summary>
 The ID of the row 
</summary>
</member><member name="P:MedscreenLib.SMInterface.RequestCode">
	<summary>
 Request code associated with this row
</summary>
</member><member name="P:MedscreenLib.SMInterface.Status">
	<summary>
 Status of this Row
</summary>
</member><member name="M:MedscreenLib.SMInterface.Wait(System.String@,System.Int32)">
	<summary>
 Wait on the row getting to a particular status value
</summary>
	<param name="ErrorMessage">Error message or information returned by SM process</param>
	<param name="Timeout">Delay in 200 milliseconds before returning, default = 100</param>
	<returns>Status of the row</returns>
	<remarks>will loop whilst the status is <see cref="F:MedscreenLib.Constants.GCST_IFace_StatusLocked"/> Or 
 <see cref="F:MedscreenLib.Constants.GCST_IFace_StatusRequest"/> will return if the status is <see cref="F:MedscreenLib.Constants.GCST_IFace_StatusFailed"/>
 or <see cref="F:MedscreenLib.Constants.GCST_IFace_StatusCreated"/>
	</remarks>
</member><member name="P:MedscreenLib.SMInterface.Message">
 -----------------------------------------------------------------------------
 <summary>
 Message from code 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [27/03/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.SMInterface">
	<summary>
 base class for the various interface classes such as sample, accounts
</summary>
</member><member name="M:MedscreenLib.AddressInterface.#ctor">
	<summary>
 Create a new interface object
</summary>
</member><member name="P:MedscreenLib.AddressInterface.AddressID">
	<summary>
 Id of the row in the interface table
</summary>
</member><member name="M:MedscreenLib.AddressInterface.CreateAddressID">
	<summary>
  request a new address ID DEPRECATED
</summary>
	<returns>New Address Id </returns>
	<remarks>This function has been deprecated with the move to using sequence numbers for the address ID</remarks>
</member><member name="T:MedscreenLib.AddressInterface">
	<summary>
 specialised interface class handling the Address_interface table
</summary>
</member><member name="M:MedscreenLib.AccountsInterface.#ctor">
	<summary>
 create a new instance of the class
</summary>
</member><member name="P:MedscreenLib.AccountsInterface.InvoiceType">
	<summary>
 Invoice type
</summary>
	<remarks>Invoice type 4 is a charge Invoice type 5 is a credit</remarks>
</member><member name="M:MedscreenLib.AccountsInterface.Update">
	<summary>
 Update Interface row
</summary>
	<returns>TRUE if successful</returns>
</member><member name="P:MedscreenLib.AccountsInterface.Value">
	<summary>
 Value of transaction
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.AccountsInterface.UserId">
	<summary>
 ID (Sample manger User ID personnel.Identity)
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.AccountsInterface.CopyType">
	<summary>
 How the invoice will be treated 
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.AccountsInterface.Reference">
	<summary>
 The invoice number or customer
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.AccountsInterface.SendAddress">
	<summary>
 Email address or fax number to which the invoice should be sent
</summary>
	<remarks></remarks>
</member><member name="M:MedscreenLib.AccountsInterface.SetSendDateNull">
	<summary>
 Set the send date to NULL
</summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.AccountsInterface.SendDate">
	<summary>
 Date invoice Sent
</summary>
	<remarks></remarks>
</member><member name="T:MedscreenLib.AccountsInterface">
	<summary>
 specialised interface class handling the Accounts_interface table
</summary>
</member><member name="M:MedscreenLib.InterfaceClass2.Update">
	<summary>
 Update this row
 </summary>
	<remarks></remarks>
</member><member name="M:MedscreenLib.InterfaceClass2.Refresh">
	<summary>
 Refresh this row
 </summary>
	<remarks></remarks>
</member><member name="M:MedscreenLib.InterfaceClass2.load">
	<summary>
 Load this row
 </summary>
	<remarks></remarks>
</member><member name="M:MedscreenLib.InterfaceClass2.#ctor(System.Int32)">
	<summary>
 Create a new row 
 </summary>
	<param name="ID">OISID</param>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.Centre">
	<summary>
 Port or site used
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.TestSchedule">
	<summary>
 Test schedule in use
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.Fields">
	<summary>
 Fields in database
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.Status">
	<summary>
 Status of request
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.Optional1">
	<summary>
 Optional parameter usually task parameter
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.Optional2">
	<summary>
 Optional parameter usually primary return from task
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.Optional3">
	<summary>
 Optional parameter
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.Optional4">
	<summary>
 Optional parameter usually date SM completed action
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.Optional5">
	<summary>
 Optional parameter
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.Optional6">
	<summary>
 Optional parameter
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.Customer">
	<summary>
 Customer ID
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.PurchaseOrder">
	<summary>
 Customer's purchase order no
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.InvoiceNumber">
	<summary>
 Invoice number given to transaction
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.MedscreenReference">
	<summary>
 Refrence given by accounts to transaction
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.CollDate">
	<summary>
 Collection Date
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.NoDonors">
	<summary>
 Expected no of donors
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.operator">
	<summary>
 Person carrying out request
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.CMJobNumber">
	<summary>
 Collection Manager ID
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.PaymentType">
	<summary>
 how the transaction will be paid
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.PrePaid">
	<summary>
 Is this collection pre paid or not 
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.NettCost">
	<summary>
 Nett cost of transaction (Doesn't include VAT)
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.VatCost">
	<summary>
 VAT element
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.CreditAuthorisation">
	<summary>
 Authorisation code from Card supplier
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.CreditPayee">
	<summary>
 who is paying for the collection
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.CreditExpiry">
	<summary>
 Date of card expiry
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.CreditCardNumber">
	<summary>
 Credit card number Packed
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.InterfaceClass2.OisID">
	<summary>
 Primary key into table
 </summary>
	<remarks></remarks>
</member><member name="T:MedscreenLib.InterfaceClass2">
	<summary>
 interface into OneStopInterface table
</summary>
	<remarks>The onestopinterface table was the first of the tables produced, 
 it attempted to be generic, but it was soon realised that each major business entity would benefit 
 from having its own interface table.<para/>
 This table and interface now supports collections and jobs in the main</remarks>
</member><member name="F:MedscreenLib.WorkFlowItem.Progress.waiting">
	<summary>Waiting on another element</summary>
</member><member name="F:MedscreenLib.WorkFlowItem.Progress.Active">
	<summary>Current active element</summary>
</member><member name="F:MedscreenLib.WorkFlowItem.Progress.Done">
	<summary>Done but not necessarily complete</summary>
</member><member name="F:MedscreenLib.WorkFlowItem.Progress.Complete">
	<summary>Completed</summary>
</member><member name="T:MedscreenLib.WorkFlowItem.Progress">
 -----------------------------------------------------------------------------
 <summary>
 State of workflow element    ''' 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action>Workflow item type for collection received added</Action></revision>
		<revision><Author>[taylor]</Author><date>
			</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.WorkFlowItem.Shape.Rectangle">
	<summary>Rectangle</summary>
</member><member name="F:MedscreenLib.WorkFlowItem.Shape.Circle">
	<summary>Circle</summary>
</member><member name="T:MedscreenLib.WorkFlowItem.Shape">
	<summary>Possible shapes to draw</summary>
</member><member name="F:MedscreenLib.WorkFlowItem.ItemTypes.NotDefined">
	<summary>Not defined</summary>
</member><member name="F:MedscreenLib.WorkFlowItem.ItemTypes.Booking">
	<summary>Booking</summary>
</member><member name="F:MedscreenLib.WorkFlowItem.ItemTypes.CustomerConfirm">
	<summary>Customer has confirmed</summary>
</member><member name="F:MedscreenLib.WorkFlowItem.ItemTypes.COSend">
	<summary>Sent to collecting officer</summary>
</member><member name="F:MedscreenLib.WorkFlowItem.ItemTypes.COConfirm">
	<summary>Collecting officer has confirmed</summary>
</member><member name="F:MedscreenLib.WorkFlowItem.ItemTypes.Collected">
	<summary>Collected status D</summary>
</member><member name="F:MedscreenLib.WorkFlowItem.ItemTypes.Received">
	<summary>Collected status R</summary>
</member><member name="F:MedscreenLib.WorkFlowItem.ItemTypes.Reported">
	<summary>Collection reported</summary>
</member><member name="F:MedscreenLib.WorkFlowItem.ItemTypes.Invoiced">
	<summary>Invoiced</summary>
</member><member name="T:MedscreenLib.WorkFlowItem.ItemTypes">
	<summary></summary>
</member><member name="M:MedscreenLib.WorkFlowItem.#ctor(System.Drawing.Rectangle,System.Single)">
	<summary>
 Create a new workflow item
 </summary>
	<param name="aRect">Rectangle to use</param>
	<param name="RightText"></param>
</member><member name="P:MedscreenLib.WorkFlowItem.HasCalendar">
 -----------------------------------------------------------------------------
 <summary>
 Some workflow items are time based and have a calendar associated with them
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.ItemType">
 -----------------------------------------------------------------------------
 <summary>
 Type of workflow item  
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.StatusShow">
 -----------------------------------------------------------------------------
 <summary>
 Current status of the item    ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.StatusLine">
 -----------------------------------------------------------------------------
 <summary>
 Status Line for workflow item    ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.Selected">
 -----------------------------------------------------------------------------
 <summary>
 Is this item the currently selected one    ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.LineText">
 -----------------------------------------------------------------------------
 <summary>
 Descriptive text    ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.Parent">
 -----------------------------------------------------------------------------
 <summary>
 Workflow this item belongs to    ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.WorkFlowItem.Draw(System.Drawing.Graphics)">
 -----------------------------------------------------------------------------
 <summary>
 Draw workflow    ''' 
 </summary>
	<param name="e"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.WorkFlowItem.IsHit(System.Single,System.Single)">
 -----------------------------------------------------------------------------
 <summary>
 Has this item been hit by mouse click    ''' 
 </summary>
	<param name="x">X position of click</param>
	<param name="y">Y position of click</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.Text">
 -----------------------------------------------------------------------------
 <summary>
 Text associated with Item    ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.Rect">
 -----------------------------------------------------------------------------
 <summary>
 Rectangle associated with Item    ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.Line1">
 -----------------------------------------------------------------------------
 <summary>
 Sub line 1 of descriptive text    ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.Line2">
 -----------------------------------------------------------------------------
 <summary>
 Sub line 2 of descriptive text    ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.Line3">
 -----------------------------------------------------------------------------
 <summary>
 Sub line 3 of descriptive text    ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.ObjectShape">
 -----------------------------------------------------------------------------
 <summary>
 Shape of object    ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.Link">
 -----------------------------------------------------------------------------
 <summary>
 Link to item number    ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.WorkFlowItem.Status">
  -----------------------------------------------------------------------------
 <summary>
 Current status of item    ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.WorkFlowItem">
	<summary>
 An individual element of a workflow display
 </summary>
	<remarks></remarks>
</member><member name="M:MedscreenLib.WorkFlowCollection.Add(MedscreenLib.WorkFlowItem)">
 -----------------------------------------------------------------------------
 <summary>
 Add a workflow item    ''' 
 </summary>
	<param name="item">Item to add</param>
	<returns>Position of Added Item</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.WorkFlowCollection.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieve Item from list    ''' 
 </summary>
	<param name="index">Position to get</param>
	<returns>Item at position</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.WorkFlowCollection.DeSelectAll">
 -----------------------------------------------------------------------------
 <summary>
 Deselect all items    ''' 
 </summary>
	<returns>Previous selected item</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.WorkFlowCollection.HitTest(System.Single,System.Single)">
 -----------------------------------------------------------------------------
 <summary>
 See if the mouse click has hit any of the elements of this work flow    ''' 
 </summary>
	<param name="x">X Mouse position</param>
	<param name="y">Y Mouse position</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.WorkFlowCollection">
	<summary>
 An entire workflow 
 </summary>
	<remarks></remarks>
</member><member name="F:MedscreenLib.Charts.eChartType.XY">
	<summary>XY Chart</summary>
</member><member name="F:MedscreenLib.Charts.eChartType.Pie">
	<summary>Pie chart</summary>
</member><member name="F:MedscreenLib.Charts.eChartType.Speedo">
	<summary>Spedometer</summary>
</member><member name="F:MedscreenLib.Charts.eChartType.Slider">
	<summary>Slider</summary>
</member><member name="T:MedscreenLib.Charts.eChartType">
	<summary>Chart Types</summary>
</member><member name="M:MedscreenLib.Charts.CreateChartFile(System.Collections.ArrayList,System.Collections.ArrayList,System.String,System.Int32,System.Int32,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create a Chart, writing chart into a file for display on a web site
 </summary>
	<param name="Yseries">Chart Y series</param>
	<param name="xSeries">Chart X series</param>
	<param name="Title">Chart Title</param>
	<param name="Width">Chart Width</param>
	<param name="Height">Chart Height</param>
	<param name="strFileName">Filename for output (including path)</param>
	<param name="SeriesName">Description for first series</param>
	<returns>TRUE if succesful</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Charts.DrawChart">
 -----------------------------------------------------------------------------
 <summary>
 Draw chart 
 </summary>
	<returns>VOID</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Charts.CreatePieChart(System.Array,System.Array,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Create a Pie chart
 </summary>
	<param name="data">Pie data</param>
	<param name="labels">Pie labels</param>
	<param name="Title">Chart Title</param>
	<param name="Width">Chart Width</param>
	<returns>Chart Bitmap</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Charts.CreatePieChartStream(System.Array,System.Array,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Create Pie Chart as an IO stream
 </summary>
	<param name="data">Pie data</param>
	<param name="labels">Pie labels</param>
	<param name="Title">Chart Title</param>
	<param name="Width">Chart Width</param>
	<returns>IO stream containg chart bitmap</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Charts.CreatePieChartFile(System.Array,System.Array,System.String,System.Int32,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create Pie chart save bitmap to a file
 </summary>
	<param name="data">Pie data</param>
	<param name="labels">Pie labels</param>
	<param name="Title">Chart Title</param>
	<param name="Width">Chart Width</param>
	<param name="StrFileName">Filename for chart</param>
	<returns>TRUE if succesful</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Charts.RotateText(System.Drawing.Graphics,System.String,System.Single,System.Single,System.Single)">
 -----------------------------------------------------------------------------
 <summary>
 Rotate text by a certain angle
 </summary>
	<param name="gr">Graphics object</param>
	<param name="text">Text to rotate</param>
	<param name="x">X position of text (rotation point)</param>
	<param name="y">Y position of text (rotation point)</param>
	<param name="angle">Angle to rotate (degrees)</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Charts.ChartType">
 -----------------------------------------------------------------------------
 <summary>
 Type of Chart
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Charts.ShowValues">
 -----------------------------------------------------------------------------
 <summary>
 Show series values
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Charts.LabelFont">
 -----------------------------------------------------------------------------
 <summary>
 Font for Labels
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Charts.Gap">
 -----------------------------------------------------------------------------
 <summary>
 Gap between histogram blocks
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Charts.LeftMargin">
 -----------------------------------------------------------------------------
 <summary>
 Size of the left hand margin
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Charts.BottomMargin">
 -----------------------------------------------------------------------------
 <summary>
 Size of the bottom margin
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Charts.XAxis">
 -----------------------------------------------------------------------------
 <summary>
 Axis in the X direction
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Charts.LeftYAxis">
 -----------------------------------------------------------------------------
 <summary>
 Axis in the Y direction
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Charts.Serieses">
 -----------------------------------------------------------------------------
 <summary>
 Series of data on chart (can be of mixed types)
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Charts.ChartRectanle">
 -----------------------------------------------------------------------------
 <summary>
 Bounding Rectangle for chart
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Charts.ChartArea">
 -----------------------------------------------------------------------------
 <summary>
 Area of chart (area within axes)
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Charts.Legend">
 -----------------------------------------------------------------------------
 <summary>
 Chart Legend
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Charts">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Charts
 
 -----------------------------------------------------------------------------
 <summary>
 Charts class, deals with drwaing a chart
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Axis.BlockHeight(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
 Determine height of a block using axis scaling 
 </summary>
	<param name="YPos">Y position to calculate</param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Axis.DrawAxis(System.Drawing.Graphics)">
 -----------------------------------------------------------------------------
 <summary>
 Draw axis using supplied graphics object
 </summary>
	<param name="gr"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Axis.#ctor(MedscreenLib.Axis.AxisType,MedscreenLib.Charts)">
 -----------------------------------------------------------------------------
 <summary>
 Create a new axis
 </summary>
	<param name="Axis">Axis type to create</param>
	<param name="Chart">Chart to create axis for</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Axis.Format">
 -----------------------------------------------------------------------------
 <summary>
 The format used for teh text on this axis
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Axis.AType">
 -----------------------------------------------------------------------------
 <summary>
 The type of axis using an enumeration
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Axis.Minimum">
 -----------------------------------------------------------------------------
 <summary>
 The minimum for the axis.
 </summary>
	<value></value>
	<remarks>
 Declared as being object to allow for Dates etc.
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Axis.Maximum">
 -----------------------------------------------------------------------------
 <summary>
 Maximum for the axis
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Axis.IntervalStep">
 -----------------------------------------------------------------------------
 <summary>
 The step at which major ticks will occure
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Axis.LeftAxis">
 -----------------------------------------------------------------------------
 <summary>
 Is the axis a left axis or a right axis, only appropriate for Y axes
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Axis.AxisType.LeftY">
	<summary>Left hand Y Axis</summary>
</member><member name="F:MedscreenLib.Axis.AxisType.RightY">
	<summary>Right hand Y Axis</summary>
</member><member name="F:MedscreenLib.Axis.AxisType.XAxis">
	<summary>Xaxis</summary>
</member><member name="F:MedscreenLib.Axis.AxisType.XAxisDate">
	<summary>Xaxis for dates</summary>
</member><member name="F:MedscreenLib.Axis.AxisType.XAxisSpeedo">
	<summary>Speedometer X Axis</summary>
</member><member name="F:MedscreenLib.Axis.AxisType.Slider">
	<summary>Slider</summary>
</member><member name="T:MedscreenLib.Axis.AxisType">
	<summary>Axes Types</summary>
</member><member name="T:MedscreenLib.Axis">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Axis
 
 -----------------------------------------------------------------------------
 <summary>
 Chart axes manipulation routines
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Series.DrawSeries(System.Drawing.Graphics,System.Drawing.Font)">
 -----------------------------------------------------------------------------
 <summary>
 Draw Series on chart
 </summary>
	<param name="gr">Graphics object passed in</param>
	<param name="FontLabels">Font for labels</param>
	<returns>Void</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Series.#ctor(MedscreenLib.Series.SeriesType,MedscreenLib.Charts,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create new series
 </summary>
	<param name="SerieType">Type of Series</param>
	<param name="Chart">Containing Chart for Series</param>
	<param name="SeriesName">Name of Series</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.Format">
 -----------------------------------------------------------------------------
 <summary>
 Format string to use on data labels
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.Colours">
 -----------------------------------------------------------------------------
 <summary>
 An array of colours to use with data point
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.Labels">
 -----------------------------------------------------------------------------
 <summary>
 An array of data labels
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.Colour">
 -----------------------------------------------------------------------------
 <summary>
 Line colour
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.BorderColour">
 -----------------------------------------------------------------------------
 <summary>
 Colour of block border
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.BorderWidth">
 -----------------------------------------------------------------------------
 <summary>
 Width of border
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.LeftAxis">
 -----------------------------------------------------------------------------
 <summary>
 Is axis on the Left (normal) or right
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.Xvalues">
 -----------------------------------------------------------------------------
 <summary>
 An array of X axis positions
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.Minimum">
 -----------------------------------------------------------------------------
 <summary>
 Minimum in the Y direction
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.Maximum">
 -----------------------------------------------------------------------------
 <summary>
 Maximum in the Y direction
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.Gap">
 -----------------------------------------------------------------------------
 <summary>
 Gap between blocks
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.YValues">
 -----------------------------------------------------------------------------
 <summary>
 An array of points in the Y direction
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.SeriesName">
 -----------------------------------------------------------------------------
 <summary>
 Series description (for legend)
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.sType">
 -----------------------------------------------------------------------------
 <summary>
 Type of series
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.ShowLabels">
 -----------------------------------------------------------------------------
 <summary>
 Show Data Labels on Graph
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.ShowPoints">
 -----------------------------------------------------------------------------
 <summary>
 Show Points on graph
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.Border">
 -----------------------------------------------------------------------------
 <summary>
 Is block bordered
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Series.DashStyle">
 -----------------------------------------------------------------------------
 <summary>
 Dash style for series line
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Series.SeriesType.XYGraph">
	<summary>XY graph Real data in both axes</summary>
</member><member name="F:MedscreenLib.Series.SeriesType.VertHistogram">
	<summary>Histogram bars running vertically</summary>
</member><member name="F:MedscreenLib.Series.SeriesType.HorizHistogram">
	<summary>Histogram bars running horizontally</summary>
</member><member name="F:MedscreenLib.Series.SeriesType.Pie">
	<summary>Pie Chart</summary>
</member><member name="F:MedscreenLib.Series.SeriesType.speedo">
	<summary>Speedometer style chart</summary>
</member><member name="F:MedscreenLib.Series.SeriesType.Slider">
	<summary>Slider style chart</summary>
</member><member name="T:MedscreenLib.Series.SeriesType">
 -----------------------------------------------------------------------------
 <summary>
 The various types of series
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Series">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Series
 
 -----------------------------------------------------------------------------
 <summary>
 A series of data points used on a chart
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SeriesCollection.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 create a new collection of Data Series
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.SeriesCollection.item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Return a Data Series by position
 </summary>
	<param name="index">Position of Series</param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.SeriesCollection">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : SeriesCollection
 
 -----------------------------------------------------------------------------
 <summary>
 A collection of Chart Data series
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Legend.LegendPosition.Top">
	<summary>At Top of Chart</summary>
</member><member name="F:MedscreenLib.Legend.LegendPosition.Left">
	<summary>At Left Hand side of Chart</summary>
</member><member name="F:MedscreenLib.Legend.LegendPosition.Right">
	<summary>At Right Hand side of Chart</summary>
</member><member name="F:MedscreenLib.Legend.LegendPosition.Bottom">
	<summary>At Bottom of Chart</summary>
</member><member name="T:MedscreenLib.Legend.LegendPosition">
 -----------------------------------------------------------------------------
 <summary>
 Enumeration of Legend Positions
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Legend.#ctor(MedscreenLib.Charts)">
 -----------------------------------------------------------------------------
 <summary>
 Create a new legend object
 </summary>
	<param name="Chart">Chart containing legend</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Legend.Draw(System.Drawing.Graphics)">
 -----------------------------------------------------------------------------
 <summary>
 Draw Chart Legend
 </summary>
	<param name="gr">Graphics object to draw with</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Legend.Position">
 -----------------------------------------------------------------------------
 <summary>
 Legend Position from enumeration
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Legend.HasLegend">
 -----------------------------------------------------------------------------
 <summary>
 Indicates whether the Legend is displayed or not
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Legend.LegendWidth">
 -----------------------------------------------------------------------------
 <summary>
 The width of the Legend
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Legend">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Legend
 
 -----------------------------------------------------------------------------
 <summary>
 Deals with Chart Legends
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Printing.Font">
	<summary>Printing Font</summary>
</member><member name="M:MedscreenLib.Printing.#ctor(System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
     ''' 
 </summary>
	<param name="Document"></param>
	<param name="FontFace"></param>
	<param name="FontSize"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Printing.pd_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
 -----------------------------------------------------------------------------
 <summary>
     ''' 
 </summary>
	<param name="sender"></param>
	<param name="ev"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Printing.Print">
 -----------------------------------------------------------------------------
 <summary>
     ''' 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Printing.Settings">
 -----------------------------------------------------------------------------
 <summary>
     ''' 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Printing.PrintDialog">
 -----------------------------------------------------------------------------
 <summary>
     ''' 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Printing">
	<summary>
 Simplistic printing class probably better to use either RTF and Word<para/>
 Reporter or XML/XSL and IE
 </summary>
</member><member name="M:MedscreenLib.ReportSchedules.#ctor">
	<summary>Create a new Report Schedule collection instance</summary>
</member><member name="M:MedscreenLib.ReportSchedules.Add(MedscreenLib.ReportSchedule)">
	<summary>Add a ReportSchedule to the collection</summary>
	<param name="Item">ReportSchedule to add</param>
	<returns>Position of Item in list</returns>
</member><member name="P:MedscreenLib.ReportSchedules.ClientID">
	<summary>
 Customer Profile ID, if provided then the <see cref="M:MedscreenLib.ReportSchedules.Load"/> method will get a collection of schedules for the client 
 </summary>
</member><member name="P:MedscreenLib.ReportSchedules.Item(System.Int32)">
	<summary>
 Retrieve an <see cref="T:MedscreenLib.ReportSchedule"/> from list
 </summary>
	<param name="index">Index by position to item</param>
</member><member name="M:MedscreenLib.ReportSchedules.Load">
	<summary>
 Load the collection from database
 </summary>
</member><member name="T:MedscreenLib.ReportSchedules">
	<summary>
 A collection of ReportSchedule items
 </summary>
</member><member name="M:MedscreenLib.ReportSchedule.#ctor">
	<summary>Create a new ReportSchedule instance</summary>
</member><member name="M:MedscreenLib.ReportSchedule.IsInDate">
	<developer></developer>
	<summary>
 Check report is in date
 </summary>
	<returns></returns>
	<remarks></remarks>
	<revisionHistory></revisionHistory>
</member><member name="P:MedscreenLib.ReportSchedule.RunPeriod">
 -----------------------------------------------------------------------------
 <summary>
 Period over which background process runs.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/03/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.ReportSchedule.ScheduleType">
 -----------------------------------------------------------------------------
 <summary>
 Schedule Type
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/03/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.ReportSchedule.BCC">
	<summary>
 Blind CC 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:MedscreenLib.ReportSchedule.CrystalReport">
	<summary>
     ''' The <see cref="T:MedscreenLib.CRMenuItem"/> to be reported
 </summary>
</member><member name="P:MedscreenLib.ReportSchedule.CustomerID">
	<summary>Customer Profile ID report is for</summary>
</member><member name="P:MedscreenLib.ReportSchedule.Fields">
	<summary></summary>
</member><member name="P:MedscreenLib.ReportSchedule.NextReport">
	<summary>Stored value of next report</summary>
</member><member name="M:MedscreenLib.ReportSchedule.NextReportDate">
 -----------------------------------------------------------------------------
 <summary>
 Calculate the next report date
 </summary>
	<returns></returns>
	<remarks>
 The code acts differently for customer reports and background reports
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [16/03/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.ReportSchedule.ExportReport(CrystalDecisions.CrystalReports.Engine.ReportDocument)">
 -----------------------------------------------------------------------------
 <summary>
 Export report into filename according to method in send method
 </summary>
	<param name="cr"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [17/03/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.ReportSchedule.PrevReport">
	<summary>Date of Previous report, note: does not work for complex reports</summary>
</member><member name="P:MedscreenLib.ReportSchedule.Recipients">
	<summary>A mailing list</summary>
</member><member name="P:MedscreenLib.ReportSchedule.Repeat">
	<summary>Repeat or one off report</summary>
</member><member name="M:MedscreenLib.ReportSchedule.RepeatString">
	<summary>Converts Repeat Units into a Human readable form</summary>
</member><member name="P:MedscreenLib.ReportSchedule.RepeatUnits">
	<summary>
 The units for the repeat see remarks for details of what can be done
 </summary>
	<remarks>
 The repeat units can be a simple type or complex <para/>
 Simple Types<para/>
 D - Days<para/>
 W - Weeks<para/>
 M - Calendar Months<para/>
 Q - Quarters <para/>
 Y - Years <para/><para/>
 Complex Types<para/>
 Complex types have the Character 'X' in the first position of the string 
 At the moment the only second position defined value is 'W' indicating weekday<para/>
 The fourth position indicates the numeric index into weekday enumeration e.g. 0 = Sunday<para/>
 The third position indicates which week with ' ' indicating the next week day of that kind occuring.<para/>
 otherwise 2 = second week etc<para/>
 For Example <para/>
 XW20 = 2nd Sunday 
 XW 1 = Next Monday
 </remarks>
</member><member name="P:MedscreenLib.ReportSchedule.ReportID">
	<summary>
 Primary key of the report that is to be sent <see cref="T:MedscreenLib.CRMenuItem"/>
	</summary>
</member><member name="P:MedscreenLib.ReportSchedule.ScheduleID">
	<summary>
 Primary key of the schedule not usually presented to users
 </summary>
</member><member name="P:MedscreenLib.ReportSchedule.SendMethod">
	<summary>
 Method for sending report 
 </summary>
</member><member name="P:MedscreenLib.ReportSchedule.SendTypeConstant">
	<summary>
 Send Method for report <see cref="T:MedscreenLib.Constants.SendMethod"/>
	</summary>
	<remarks></remarks>
	<seealso cref="T:MedscreenLib.Constants.SendMethod"/>
</member><member name="M:MedscreenLib.ReportSchedule.ToXML">
	<summary>
 Convert Report schedule to XML
 </summary>
</member><member name="M:MedscreenLib.ReportSchedule.Update">
	<summary>
 Update information in database
 </summary>
</member><member name="P:MedscreenLib.ReportSchedule.RemoveFlag">
 -----------------------------------------------------------------------------
 <summary>
 Indicates whether report has been removed or not.
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/04/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.ReportSchedule.UntilDate">
	<summary>
 Date beyond which the report should not be run
 </summary>
</member><member name="T:MedscreenLib.ReportSchedule">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : ReportSchedule
 
 -----------------------------------------------------------------------------
 <summary>
 Class to manage a schedule for an individual report''' 
 </summary>
	<remarks>
 Report schedules are used in conjunction with Report definitions <see cref="T:MedscreenLib.CRMenuItem"/> and their parameters 
 <see cref="T:MedscreenLib.CRFormulaItem"/>.  A report schedule relates a report to a customer, basically it ties the customer 
 and the recipients at that customer to a reporting event.  <para/>There is no reason that these 
 data structures need to be tied to particular times, for example if all the time information is left blank (NULL), 
 then any automated code would ignore these entries other code could however could look for unscheduled reports 
 for a customer and use that information.<para/>
 The report's schedule (if scheduled) is controlled by the <see cref="!:NextReport"/> field, on completion of 
 sending a report this should be changed by calling the <see cref="!:NewReportDate"/> method, 
 which uses the <see cref="!:RepeatUnits"/> to identify when the next report will be run in conjunction with the
 <see cref="!:RepeatInterval"/>, which acts as a multiplier for the <see cref="!:RepeatUnits"/>.  Whether a report is repeated or not 
 is controlled by the <see cref="!:Repeat"/> and the <see cref="!:UntilDate"/> parameters.  <para/>
 How this report is sent is controlled by the <see cref="!:SendMethod"/>. An enumeration exists that has the possible values that this
 can take <see cref="T:MedscreenLib.Constants.SendMethod"/>.  
  
 </remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SMTableCollection.IndexOfObject(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
 Index of function 
 </summary>
	<param name="Value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [08/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.SMTableCollection">
	<summary>
 A collection of rows of type <see cref="T:MedscreenLib.SMTable"/>
	</summary>
</member><member name="T:MedscreenLib.TimedSmTableCollection">
	<summary>
 A collection of rows of type <see cref="T:MedscreenLib.TimeStampedCollection"/>
	</summary>
</member><member name="M:MedscreenLib.TimeStampedCollection.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create a new collection
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [02/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.TimeStampedCollection.TimeStamp">
 -----------------------------------------------------------------------------
 <summary>
 Timestamp of last database access
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [02/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.TimeStampedCollection.RefreshChanged">
 -----------------------------------------------------------------------------
 <summary>
 Refresh any changed items
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [02/10/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.TimeStampedCollection">
	<summary>
 A collection of rows of type <see cref="T:MedscreenLib.TimeStampedCollection"/>
	</summary>
</member><member name="M:MedscreenLib.MedscreenVariables.#cctor">
	<summary>
 create class instance
 </summary>
</member><member name="P:MedscreenLib.MedscreenVariables.CollectionsPrinter">
	<summary>
 Printer used to print collections
 </summary>
</member><member name="P:MedscreenLib.MedscreenVariables.ApplicationName">
	<summary>
 Name of application
 </summary>
</member><member name="P:MedscreenLib.MedscreenVariables.CollmanLogRoot">
	<summary>
 location for collman log files
 </summary>
</member><member name="T:MedscreenLib.MedscreenVariables">
	<summary>
 Public variables
 </summary>
</member><member name="M:MedscreenLib.MedscreenExceptions.MedscreenException.#ctor(System.String)">
	<summary>
 create new exception
 </summary>
</member><member name="T:MedscreenLib.MedscreenExceptions.MedscreenException">
	<summary>
 Specific exceptions that can be thrown
 </summary>
</member><member name="M:MedscreenLib.MedscreenExceptions.OracleFailure.#ctor">
	<summary>
 Throw Oracle has failed exception
 </summary>
</member><member name="M:MedscreenLib.MedscreenExceptions.OracleFailure.#ctor(System.String)">
	<summary>
 Overload allowing a different message
 </summary>
	<param name="Message">Message to include</param>
</member><member name="T:MedscreenLib.MedscreenExceptions.OracleFailure">
	<summary>
 This exception is thrown when Oracle is unavailable
 </summary>
	<remarks>This exception is intended to be handled at the application top level 
 to prevent a user getting to far into the application when Oracle is not available
 </remarks>
</member><member name="M:MedscreenLib.MedscreenExceptions.ScanFileException.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create new scanfile error
 </summary>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	26/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedscreenExceptions.ScanFileException.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 New error with filename
 </summary>
	<param name="Filename"></param>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	26/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedscreenExceptions.ScanFileException">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : MedscreenExceptions.ScanFileException
 
 -----------------------------------------------------------------------------
 <summary>
 Scanfile error exception
 </summary>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	26/02/2009	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedscreenExceptions.NoIdentityException">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : MedscreenExceptions.NoIdentityException
 
 -----------------------------------------------------------------------------
 <summary>
 Generic exception to be thrown if  no ID can be found
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedscreenExceptions.CollectionException.#ctor(System.String)">
	<summary>
 create new Collection Exception 
 </summary>
	<param name="ErrorMessage">Message to include</param>
</member><member name="T:MedscreenLib.MedscreenExceptions.CollectionException">
	<summary>
 Generic collection exceptions 
 </summary>
</member><member name="M:MedscreenLib.MedscreenExceptions.DuplicateEntryException.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Throw a duplicate customer exception 
 </summary>
	<param name="ErrorMessage"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/03/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedscreenExceptions.DuplicateEntryException">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : MedscreenExceptions.DuplicateEntryException
 
 -----------------------------------------------------------------------------
 <summary>
 Handle duplicate entries 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/03/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedscreenExceptions.DuplicateCustomerException.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create a duplicate customer exception, return SMID-Profile as part of the exception 
 </summary>
	<param name="ErrorMessage"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/03/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedscreenExceptions.DuplicateCustomerException">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : MedscreenExceptions.DuplicateCustomerException
 
 -----------------------------------------------------------------------------
 <summary>
 A duplicate customer has tried to be created
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [29/03/2007]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedscreenExceptions.CanNotChangeCollectionStatus.#ctor(System.String)">
	<summary>
 create new Collection Exception (Can not change status)
 </summary>
	<param name="ErrorMessage">Message to include</param>
</member><member name="T:MedscreenLib.MedscreenExceptions.CanNotChangeCollectionStatus">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : MedscreenExceptions.CanNotChangeCollectionStatus
 
 -----------------------------------------------------------------------------
 <summary>
 Exception to be thrown if can not change collection status 
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedscreenExceptions.MedscreenIOException.#ctor(System.String)">
	<summary>
 create new IoException
 </summary>
	<param name="ErrorMessage">Message to include</param>
</member><member name="T:MedscreenLib.MedscreenExceptions.MedscreenIOException">
	<summary>
 IoException
 </summary>
</member><member name="M:MedscreenLib.MedscreenExceptions.WordOutputException.#ctor(System.String)">
	<summary>
 create new WordOutputException
 </summary>
	<param name="ErrorMessage">Message to include</param>
</member><member name="M:MedscreenLib.MedscreenExceptions.WordOutputException.#ctor">
	<summary>
 create new WordOutputException
 </summary>
</member><member name="T:MedscreenLib.MedscreenExceptions.WordOutputException">
	<summary>
 WordOutput problems
 </summary>
</member><member name="M:MedscreenLib.Address.Caddress.#ctor">
	<summary>
 Constructor creates an address object
 </summary>
</member><member name="M:MedscreenLib.Address.Caddress.#ctor(System.Int32)">
	<summary>
 Constructor creates an address object
 </summary>
	<param name="ID">ID of the address in the address table </param>
</member><member name="M:MedscreenLib.Address.Caddress.HasCustomerAddressLink(System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 See if a link value is in the addresslink table as the right type
 </summary>
	<param name="CustomerID">LinkValue</param>
	<param name="LinkType">Type of addresslink</param>
	<returns>True if Link exists</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [03/11/2006]</date><Action>Created</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.Caddress.SetAddressLink(System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Set the addresslink
 </summary>
	<param name="CustomerID"></param>
	<param name="AddressType"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	13/04/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.Caddress.ToXML(System.Boolean)">
	<summary>
 Creates an XML representation of the address object
 </summary>
	<returns> returns a string containg XML </returns>
</member><member name="P:MedscreenLib.Address.Caddress.Status">
	<summary>
 Status of the address this alllows an address 
 to be removed or other possible settings
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.AdrLine1">
	<summary>
 First line of the address
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.AdrLine2">
	<summary>
 Second line of the address
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.AdrLine3">
	<summary>
 Third line of the address
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.AdrLine4">
	<summary>
 Fourth line of the address
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.City">
	<summary>
 City or postal town
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.Contact">
	<summary>
 Contact associated with this address
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.Email">
	<summary>
 Email address associated with the address
 </summary>
</member><member name="M:MedscreenLib.Address.Caddress.ValidatePhone">
 -----------------------------------------------------------------------------
 <summary>
 Validate the phone number 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [07/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.Caddress.ValidateFax">
 -----------------------------------------------------------------------------
 <summary>
 Check the validity of a fax number 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [07/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.Caddress.ValidateEmail">
 -----------------------------------------------------------------------------
 <summary>
 Validate the Email address given
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [07/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.Caddress.ReadXML(System.Xml.XmlElement)">
 -----------------------------------------------------------------------------
 <summary>
 Translate an XML address into an address
 </summary>
	<param name="XMlIn"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [10/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Address.Caddress.Fax">
	<summary>
 Fax number for the address
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.Deleted">
 -----------------------------------------------------------------------------
 <summary>
 Has this address been deleted 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [11/09/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Address.Caddress.Country">
	<summary>
 Country ID this is the International dialling code prefix for this 
 country, exceptions are Carribbean islands where it is the prefix plus dialling code
 </summary>
	<seealso cref="P:MedscreenLib.Address.Caddress.Country"/>
</member><member name="P:MedscreenLib.Address.Caddress.CountryName">
	<summary>
 The name of the country as stored in the country table
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.District">
	<summary>
 In britain this is the County in the US it is the state etc.
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.AddressType">
	<summary>
 The type of address for example Customer, Site Etc
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.PostCode">
	<summary>
 The postal code, look at the IUPAC definitions
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.AddressId">
	<summary>
 The Id associated with the address, its primary key
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.Phone">
	<summary>
 Phone number for this address
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.PhoneFormatted">
 -----------------------------------------------------------------------------
 <summary>
 Return phone with Country ID
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [07/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Address.Caddress.FaxFormatted">
 -----------------------------------------------------------------------------
 <summary>
 Fax number formatted with country code 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [07/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Address.Caddress.DateModified">
	<summary>
 Date address last modified (a timestamp field)
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.ModifiedBy">
	<summary>
 The user who last modified these data
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.GoldId">
	<summary>
 Link to Goldmine, this is future development
 </summary>
</member><member name="P:MedscreenLib.Address.Caddress.Fields">
	<summary>
 Exposes the fields in the row as a dataset
 </summary>
</member><member name="M:MedscreenLib.Address.Caddress.BlockAddress(System.String,System.Boolean,System.Boolean)">
	<summary>
 display the address as a block
 </summary>
	<param name="strLineBreak">
     the line break character used eg &lt;BR&gt; or VBCRLF
 </param>
	<param name="UseContact">
     indicates whether the contact name will be displayed as well
 </param>
	<returns> A string containing the formattted address </returns>
</member><member name="M:MedscreenLib.Address.Caddress.IsValidUKPostcode(System.String)">
	<summary>
 Check that a postcode conforms to the Royal Mail formats for UK postcodes
 </summary>
	<remarks>
  This routine disregards leading and trailing spaces but there
must only be one space between outcodes and incodes
<para/>
		<para>              Valid UK postcode formats </para>
		<para>               Outcode Incode Example</para>
		<para>               AN      NAA     B1 6AD</para>
		<para>               ANN     NAA     S31 2BD</para>
		<para>               AAN     NAA     SW5 8SG</para>
		<para>               ANA     NAA     W1A 4DJ</para>
		<para>               AANN    NAA     CB10 2BQ</para>
		<para>               AANA    NAA     EC2A 1HQ</para>
		<para/>
		<para>               Incode letters AA cannot be one of C,I,K,M,O or V.</para>
	</remarks>
	<example>
             ' Usage:    If Not Valid_UKPostcode(Me!PostCode) Then  <para/>
                       MsgBox "Invalid postcode format",vbInformation <para/>
               End If
</example>
	<param name="sPostcode">Postcode to be validated</param>
	<returns>True (-1)  -  Postcode conforms to valid pattern
               False (0)   -  Postcode has failed pattern matching
 </returns>
</member><member name="M:MedscreenLib.Address.Caddress.PostCodeError">
	<summary>
 Indicates that there is an error in the post code
 </summary>
	<returns> String containg the error text</returns>
</member><member name="M:MedscreenLib.Address.Caddress.MatchPattern(System.String,System.String)">
	<summary>
 Checks a string against a supplied pattern
 </summary>
	<param name="sString">Supplied String</param>
	<param name="sPattern">Pattern to check for</param>
	<returns>True indicating pattern is present</returns>
</member><member name="M:MedscreenLib.Address.Caddress.#ctor(System.Int32,MedscreenLib.Address.AddressCollection)">
	<summary>
 Constructor for an Address
 </summary>
	<param name="ID"> ID of the address</param>
	<param name="Parent"> Collection in which the address is to be added</param>
</member><member name="M:MedscreenLib.Address.Caddress.Refresh">
	<summary>
 Refresh the contents of the object against the database
 </summary>
	<returns>True succesful refresh, note this doesn't indicate that the data has changed
 </returns>
</member><member name="P:MedscreenLib.Address.Caddress.GoldmineID">
	<summary>
 Id in Goldmine if exists Note: this is for future developments
 </summary>
</member><member name="M:MedscreenLib.Address.Caddress.Update">
 -----------------------------------------------------------------------------
 <summary>
 Write the address contents back to the database
 </summary>
	<returns>TRUE if succesful</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [17/10/2005]</date><Action>Modified to prevent writes to Zero</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.Caddress.Customer">
	<summary>
 Find from the address link table the customer associated with the address
 </summary>
	<returns>Customer ID as a string</returns>
</member><member name="M:MedscreenLib.Address.Caddress.Usage">
	<summary>
 Count the number of times this address can be found in the addresslink table
 </summary>
	<returns>Number of times used as integer</returns>
</member><member name="M:MedscreenLib.Address.Caddress.Load">
	<summary>
 Created by taylor on ANDREW at 23/01/2007 06:58:54
     Load the address from the database
 </summary>
	<returns>
     A System.Boolean value...
 </returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>taylor</Author><date> 23/01/2007</date><Action></Action></revision>
	</revisionHistory>
</member><member name="T:MedscreenLib.Address.Caddress">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : Address.Caddress
 
 -----------------------------------------------------------------------------
 <summary>
 class representing a row in the address table
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [07/11/2005]</date><Action>Function to validate the Email address and phone/fax numbers  added</Action></revision>
		<revision><Author>[taylor]</Author><date> [14/10/2005]</date><Action>Address type missing from fields collection, Fax field corrected</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="F:MedscreenLib.Address.AddressCollection.ItemType.AddressId">
	<summary>Access by Address Id</summary>
</member><member name="F:MedscreenLib.Address.AddressCollection.ItemType.Index">
	<summary>Access by Index</summary>
</member><member name="T:MedscreenLib.Address.AddressCollection.ItemType">
 -----------------------------------------------------------------------------
 <summary>
 Enumeration describing the different ways of accessing an item form the collection
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [28/09/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Address.AddressCollection.item(System.Object)">
	<summary>
     Item property gives access to an individual address within the collection
</summary>
	<param name="index">Used to provide the index into the collection.</param>
</member><member name="P:MedscreenLib.Address.AddressCollection.Item(System.Int32,MedscreenLib.Address.AddressCollection.ItemType)">
	<summary>
     overload of the simple property
 </summary>
	<param name="intAddressId">Used to provide the index into the collection
 </param>
	<param name="intOpt">Used to provide the index into the collection
 </param>
</member><member name="M:MedscreenLib.Address.AddressCollection.Load">
	<summary>
     Loads the contents of the entire table into memory 
</summary>
	<returns> True if the data is succesfully loaded</returns>
</member><member name="M:MedscreenLib.Address.AddressCollection.Add(MedscreenLib.Address.Caddress)">
	<summary>
     add an address element into the collection
 </summary>
	<param name="Address">Address Object to add to collection</param>
</member><member name="M:MedscreenLib.Address.AddressCollection.HasLink(System.Int32,System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 See if there is a preexisting link 
 </summary>
	<param name="addressID"></param>
	<param name="LinkField"></param>
	<param name="LinkValue"></param>
	<param name="TypeId"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.AddressCollection.CreateAddresslink(System.Int32,System.String,System.String,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Create Link for address
 </summary>
	<param name="addressID"></param>
	<param name="LinkField"></param>
	<param name="LinkValue"></param>
	<param name="TypeId"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [04/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.AddressCollection.AddLink(System.Int32,System.String,System.String,System.Int32)">
	<summary>
     sets up a link from the address to an alternate table such as the customer table 
 </summary>
	<param name="addressID">Id of the address in the address table</param>
	<param name="LinkField">field in the alternate table that is linked in the form table.field</param>
	<param name="LinkValue">value of the primary key in that table</param>
	<param name="TypeId">Type of address link</param>
	<returns> void</returns>
</member><member name="M:MedscreenLib.Address.AddressCollection.Copy(System.Int32,System.String,System.Int32)">
	<summary>
 Produces a member by member copy of the address
 </summary>
	<param name="SourceID">Id of the address that will be used to provide the copy</param>
	<param name="Customer">optional customer to create the address for</param>
	<param name="adrLinkType">optional type of link to create</param>
	<returns> an address object</returns>
</member><member name="M:MedscreenLib.Address.AddressCollection.NextAddressId">
 -----------------------------------------------------------------------------
 <summary>
 Get next available Address ID 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [01/02/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.AddressCollection.CreateAddress(System.String,System.String,System.String,System.Int32,System.Int32)">
	<summary>
 create a new address entity in the database
 </summary>
	<param name="LineOne">First line of the address</param>
	<param name="AdrType">type of address see AddressType</param>
	<param name="Customer">optional customer to create the address for</param>
	<param name="adrLinkType">optional type of link to create</param>
	<returns> an address object</returns>
</member><member name="M:MedscreenLib.Address.AddressCollection.GetAddress(System.Int32)">
	<summary>
 attempt to get an address by its ID
 </summary>
	<param name="intID">ID of the required address</param>
	<returns> an address object or nothing if the address is non existant</returns>
</member><member name="M:MedscreenLib.Address.AddressCollection.#ctor">
	<summary>
 constructor: create a new collection
 </summary>
</member><member name="M:MedscreenLib.Address.AddressCollection.ToXML">
	<summary>
 convert data in the address table to XML
 </summary>
	<returns> XML representation of collection as a string </returns>
</member><member name="T:MedscreenLib.Address.AddressCollection">
	<summary>
     The address collection is a collection of address objects, 
     it actually represents the Sample Manager Address table
 </summary>
</member><member name="M:MedscreenLib.Address.dbPackage.GetAddressLabel(System.Int32,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
   Formats the address label for the specified address
 </summary>
	<param name="addressID" type="Int32"></param>
	<param name="includeContact" type="Boolean"></param>
	<returns>
   A String containing formatted address, with lines separated by CRLF.
 </returns>
	<remarks>
	</remarks>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.dbPackage.GetAddressLabel(System.Int32,System.String,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
   Formats the address label for the specified address
 </summary>
	<param name="addressID" type="Int32"></param>
	<param name="delimiter" type="String"></param>
	<param name="includeContact" type="Boolean"></param>
	<returns>
   A String containing formatted address, with lines separated by the specified delimiter.
 </returns>
	<remarks>
	</remarks>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.dbPackage.GetAddressLabel(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
   Formats the address label for the specified address
 </summary>
	<param name="addressID" type="Integer"></param>
	<returns>
   A String containing formatted address.
 </returns>
	<remarks>
   Address is formatted including contact information, with lines separated
   by CRLF.
 </remarks>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.dbPackage.GetInvoiceToLabel(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Formats the Invoice To address for the specified invoice
 </summary>
	<param name="invoiceNumber" type="String"></param>
	<returns>
   String containing formatted address label with lines seperated by CRLF.
 </returns>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.dbPackage.GetInvoiceToLabel(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Formats the Invoice To address for the specified invoice
 </summary>
	<param name="invoiceNumber" type="String"></param>
	<param name="delimiter" type="String">line separator</param>
	<returns>
   String containing formatted address label
 </returns>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.dbPackage.GetInvoiceToLabel(System.Int32,System.String,MedscreenLib.Address.LabelFormat)">
 -----------------------------------------------------------------------------
 <summary>
   Formats the Invoice To address for the specified customer or vessel
 </summary>
	<param name="addressID" type="Int32"></param>
	<param name="customerID" type="String">Customer or Vessel ID</param>
	<param name="format" type="MedscreenLib.Address.LabelFormat"></param>
	<returns>
   String containing formatted address label
 </returns>
	<remarks>
	</remarks>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.dbPackage.GetInvoiceMailToLabel(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Formats the Invoice Mail To address for the specified invoice
 </summary>
	<param name="invoiceNumber" type="String"></param>
	<returns>
   String containing formatted address label, with lines separated by CRLF
 </returns>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.dbPackage.GetInvoiceMailToLabel(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Formats the Invoice Mail To address for the specified invoice
 </summary>
	<param name="invoiceNumber" type="String"></param>
	<param name="delimiter" type="String">line separator</param>
	<returns>
   String containing formatted address label
 </returns>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.dbPackage.GetInvoiceShipToLabel(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Formats the Invoice Ship To address for the specified invoice
 </summary>
	<param name="invoiceNumber" type="String"></param>
	<param name="delimiter" type="String">line separator</param>
	<returns>
   String containing formatted address label
 </returns>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.dbPackage.ExecuteCommand(System.Data.OleDb.OleDbCommand)">
 -----------------------------------------------------------------------------
 <summary>
   Executes the command and clears it's parameters for next use
 </summary>
	<param name="cmd"></param>
	<returns></returns>
	<remarks>
   Connection property is set to MedConnection.Connection if not already set
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [22/11/2006]</date><Action>Created</Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.Country.#ctor">
	<summary>
 Constructor
 </summary>
</member><member name="P:MedscreenLib.Address.Country.ContinentalArea">
	<summary>
 Returns the top level associated with the country
 </summary>
	<remarks>
 This is used in conjunction with the port table to identify type D ports 
 <para>or continents, howver these may be sub continents such as the far east or gulf
 </para>
	</remarks>
</member><member name="P:MedscreenLib.Address.Country.CountryId">
	<summary>
 ID of the country in the table this is usually the International dialling code
 </summary>
</member><member name="P:MedscreenLib.Address.Country.CountryName">
	<summary>
 Name of the country, this is the name as known from the UK
 </summary>
</member><member name="P:MedscreenLib.Address.Country.CountryCode">
	<summary>
 IUPAC Country Code 
 </summary>
</member><member name="P:MedscreenLib.Address.Country.CurrencyCode">
	<summary>
 Currency in use in the country using a 3 character code e.g. GBP
 </summary>
</member><member name="P:MedscreenLib.Address.Country.Region">
	<summary>
 This may be used to indicate it is part of a particular grouping
 </summary>
</member><member name="M:MedscreenLib.Address.Country.Insert">
 -----------------------------------------------------------------------------
 <summary>
 Insert Country into database 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [14/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Address.Country.Update">
 -----------------------------------------------------------------------------
 <summary>
 Update country information to database
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [14/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Address.Country.Fields">
	<summary>
 Fields in the row
 </summary>
</member><member name="T:MedscreenLib.Address.Country">
	<summary>
 representation of a row in the country table within the Sample Manager Database
 </summary>
	<remarks>Countries are used extensively within the Sample Manager tables.<para/> 
 They are particularly associated with ports and addresses<para/>
 With Addresses they are used to determine the international dialling code for phone numbers
 <para/>with ports they are used with volume discounts
 </remarks>
</member><member name="M:MedscreenLib.Address.CountryCollection.IndexOf(MedscreenLib.Address.Country)">
	<summary>
 Index of a country object in the collection
 </summary>
	<param name="item"> Country to find index of </param>
	<returns> Index of country </returns>
</member><member name="M:MedscreenLib.Address.CountryCollection.Add(MedscreenLib.Address.Country)">
	<summary>
 Add a country to collection of countries
 </summary>
	<param name="Item"> Country To Add </param>
	<returns>Index of added item</returns>
</member><member name="P:MedscreenLib.Address.CountryCollection.Item(System.Int32)">
	<summary>
 Return a country Item from collection access by index
 </summary>
	<param name="index"> Index of item to get</param>
</member><member name="P:MedscreenLib.Address.CountryCollection.Item(System.String,MedscreenLib.Address.CountryCollection.indexBy)">
	<summary>
 Return a country Item from collection access by country Id
 </summary>
	<param name="index"> Country_id of item to get</param>
</member><member name="P:MedscreenLib.Address.CountryCollection.Item(System.Int32,System.Int32)">
	<summary>
 Return a country Item from collection access by index, controlled by a second parameter
 </summary>
	<param name="Index"> Index of item to get <para> At the moment only 0 index by country id is available</para></param>
	<param name="opt"> Option controlling what to get by</param>
</member><member name="M:MedscreenLib.Address.CountryCollection.Load">
	<summary>
 Load the collection into memory
 </summary>
	<returns> True if load succesful</returns>
</member><member name="M:MedscreenLib.Address.CountryCollection.#ctor">
	<summary>
     Constructor
 </summary>
</member><member name="T:MedscreenLib.Address.CountryCollection">
	<summary>
 Collection of Country objects
 </summary>
</member><member name="M:MedscreenLib.contacts.CustomerContact.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create new customer contact
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.UserName">
 -----------------------------------------------------------------------------
 <summary>
	</summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [15/11/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.Password">
 -----------------------------------------------------------------------------
 <summary>
	</summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[taylor]</Author><date> [15/11/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.OrderNumber">
 -----------------------------------------------------------------------------
 <summary>
 Priority of contact in the list
 </summary>
	<value></value>
	<remarks>
 Each contact type has its own list
 </remarks>
	<history>
 	[taylor]	04/10/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.ContactId">
 -----------------------------------------------------------------------------
 <summary>
 Id of contact 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.Contact">
 -----------------------------------------------------------------------------
 <summary>
 Work out who the contact is 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	23/08/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.CustomerId">
 -----------------------------------------------------------------------------
 <summary>
 ID of customer
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.AddressId">
 -----------------------------------------------------------------------------
 <summary>
 ID of address
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.ContactType">
 -----------------------------------------------------------------------------
 <summary>
 TYPE of contact linked to phrase CNTCT_TYP
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.ContactMethod">
 -----------------------------------------------------------------------------
 <summary>
 Method of contacting contact (phrase CNTCT_METH )
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.ContactMethodDescription">
 -----------------------------------------------------------------------------
 <summary>
 Description of the contact method
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	05/07/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.ContactStatus">
 -----------------------------------------------------------------------------
 <summary>
 Status of the contact 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	05/07/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.ContactStatusDescription">
 -----------------------------------------------------------------------------
 <summary>
 Return the description of teh contact status 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	05/07/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.ReportFormat">
 -----------------------------------------------------------------------------
 <summary>
 Format of the report (phrase REP_FORMAT)
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.ReportOptions">
 -----------------------------------------------------------------------------
 <summary>
 Options associated with report (phrase REP_OPTION)
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.ReportOptionDescription">
 -----------------------------------------------------------------------------
 <summary>
 Report Option description
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	28/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.Removed">
 -----------------------------------------------------------------------------
 <summary>
 Contact has been removed
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.ModifiedOn">
 -----------------------------------------------------------------------------
 <summary>
 Information last modified on 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.ModifiedBy">
 -----------------------------------------------------------------------------
 <summary>
 Information last modified by 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContact.DataFields">
 -----------------------------------------------------------------------------
 <summary>
 Expose data fields
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.contacts.CustomerContact.Update">
 Update Contact info

</member><member name="T:MedscreenLib.contacts.CustomerContact">
 -----------------------------------------------------------------------------
 Project	 : Intranet
 Class	 : intranet.customerns.contacts.CustomerContact
 
 -----------------------------------------------------------------------------
 <summary>
 A contact for a customer
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.contacts.CustomerContactColl.#ctor">
Create new collection 

</member><member name="M:MedscreenLib.contacts.CustomerContactColl.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create a new collection of contacts for a SMID-Profile
 </summary>
	<param name="CustomerID"></param>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContactColl.Item(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Get a contact by position 
 </summary>
	<param name="index"></param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContactColl.Item(System.Int32,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Get the nth Contact of a type
 </summary>
	<param name="index"></param>
	<param name="Type"></param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	20/09/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContactColl.CustomerId">
 -----------------------------------------------------------------------------
 <summary>
 Customer ID
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	20/09/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.contacts.CustomerContactColl.Item(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Get a contact by contact ID
 </summary>
	<param name="index"></param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.contacts.CustomerContactColl.Add(MedscreenLib.contacts.CustomerContact)">
 -----------------------------------------------------------------------------
 <summary>
 Add a new contact to the list 
 </summary>
	<param name="item"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.contacts.CustomerContactColl.Load">
 -----------------------------------------------------------------------------
 <summary>
 Load a collection of contacts 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.contacts.CustomerContactColl.CreateContact">
 -----------------------------------------------------------------------------
 <summary>
 Create a new contact 
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.contacts.CustomerContactColl.ToXML">
 -----------------------------------------------------------------------------
 <summary>
 Get return string from database
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[taylor]	02/07/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.contacts.CustomerContactColl.ToXML(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Expose function to outside
 </summary>
	<param name="ClientId"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Taylor]</Author><date> [30/06/2010]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.contacts.CustomerContactColl.ToCustomerXML(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Convert contacts to XML
 </summary>
	<param name="CustId"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[Taylor]	22/12/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.contacts.CustomerContactColl">
 -----------------------------------------------------------------------------
 Project	 : Intranet
 Class	 : intranet.customerns.contacts.CustomerContactColl
 
 -----------------------------------------------------------------------------
 <summary>
 Collection of customer contacts
 </summary>
	<remarks>
	</remarks>
	<history>
 	[taylor]	27/06/2007	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.IContactable.ContactMethod">
	<summary>
   Gets a string representing the method used for contact from CNTCT_METH phrase
 </summary>
	<remarks>
   Use AutoContact.ParseMethod to parse method strings to enum members
 </remarks>
</member><member name="P:MedscreenLib.IContactable.IsAvailable">
	<summary>
   Indicates whether the contact is currently active
 </summary>
</member><member name="P:MedscreenLib.IContactable.MethodAddress">
	<summary>
   Gets the send address for contact send method 
 </summary>
</member><member name="P:MedscreenLib.IContactable.Password">
	<summary>
   Gets the password to use for securing communications
 </summary>
</member><member name="P:MedscreenLib.IContactable.Name">
	<summary>
   The name of the contact
 </summary>
</member><member name="P:MedscreenLib.IContactable.CompanyName">
	<summary>
   The name of the entity the contact represents
 </summary>
</member><member name="F:MedscreenLib.AutoContact.TransportMethod.Email">
	<summary>
   Send by Email
 </summary>
	<remarks>
   The format of the Email is irrelevant here, it may be a pdf file, word / text document,
   or even the body text of the email itself.
 </remarks>
</member><member name="F:MedscreenLib.AutoContact.TransportMethod.Fax">
	<summary>
   Fax directly via a fax server (not currently supported)
 </summary>
	<remarks>
   If using Fax To Email then the transport method (as far as we are concerned) is Email.
   If implemented, Fax will probably involve printing to a specific printer after setting some print parameters.
 </remarks>
</member><member name="F:MedscreenLib.AutoContact.TransportMethod.Post">
	<summary>
   Post = Print (for stuffing into envelope and posting)
 </summary>
	<remarks></remarks>
</member><member name="T:MedscreenLib.AutoContact.TransportMethod">
	<summary>
   The transport method used to get the report to destination
 </summary>
	<remarks>
   Possible future additions may include File (save to a specific location) and FTP (post to an FTP site)
 </remarks>
</member><member name="T:MedscreenLib.AutoContact.ContactMethod">
	<summary>
   Contact method should match entries in CNTCT_METH phrase
 </summary>
	<remarks></remarks>
</member><member name="P:MedscreenLib.AutoContact.SecureDocuments">
	<summary>
   Indicates whether documents should be secured before sending
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
   Security only applies to documents sent by Email, but not if the original contact method was Fax,
   as any Email To Fax provider will have no way to decrypt the contents.
   Security is not applied of the contact has no password.
 </remarks>
</member><member name="P:MedscreenLib.MedConnection.Connections">
 -----------------------------------------------------------------------------
 <summary>
   Gets a collection of all available connections
 </summary>
	<value></value>
	<remarks>
   When first initialised, all available Oracle paths are scanned for TNSNames.ora
   files and each of these is parsed in order to determine available connections.<p/>
   The oracle locations are scanned in the order they appear in the registry.<p/>
   Other connections may be added to the collection as required, but must have a unique name.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [03/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.Connection">
 -----------------------------------------------------------------------------
 <summary>
   Returns the OleDBConnection for the current MedConnection
 </summary>
	<value></value>
	<remarks>
   If no instance has been specified by setting the Instance property or
   calling SetInstance, the first available connection is used.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.Instance">
 -----------------------------------------------------------------------------
 <summary>
   Gets or sets the MedConnection class for the current database connection
 </summary>
	<value></value>
	<remarks>
   When setting the instance, any existing connection is closed and dropped
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.SetInstance(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Sets the current instance to the one with the specified name
 </summary>
	<param name="InstanceName"></param>
	<returns>False if name is not found.  Note that connection will revert to default.</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.ReportedInstance">
 -----------------------------------------------------------------------------
 <summary>
   Gets the instance name as reported by the database
 </summary>
	<returns></returns>
	<remarks>
   Instance name is stored in the Config_Header table under "DB_INSTANCE"
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.Open">
 -----------------------------------------------------------------------------
 <summary>
   Attempts to open a connection to the current instance
 </summary>
	<returns>True if connection is open upon return</returns>
	<remarks>
   The function will only return True if the connection is open and available (i.e. not executing).
   It should never beassumed that a call to this function will set the connection open, the
   return value should always be checked.
   <para>By default the connection will timeout if not opened within 10 seconds</para>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.Close">
 -----------------------------------------------------------------------------
 <summary>
   Attempts to close the current connection to the current instance
 </summary>
	<returns>True if connection is closed upon return</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.ShowDBDialog">
 -----------------------------------------------------------------------------
 <summary>
   Show a dialog allowing user to select database instance to use
 </summary>
	<remarks>
   Dialog automatically displayes an entry for each member of the useDatabase enumeration.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.SetParameterSourceColumns(System.Data.OleDb.OleDbParameterCollection)">
 -----------------------------------------------------------------------------
 <summary>
   Sets the source column for each parameter to match the parameter name
 </summary>
	<param name="Parameters"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.OnInfoMessage(System.Object,System.Data.OleDb.OleDbInfoMessageEventArgs)">
 -----------------------------------------------------------------------------
 <summary>
   Log info messages from data connection
 </summary>
	<param name="sender"></param>
	<param name="args"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/09/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a new MedSconnection to be populated later
 </summary>
	<param name="name"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/09/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.Name">
 -----------------------------------------------------------------------------
 <summary>
   Gets the name of the connection as defined in TNSNames.Ora
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.FullName">
 -----------------------------------------------------------------------------
 <summary>
   Gets the name of the connection as defined in TNSNames.Ora
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.TidyName">
 -----------------------------------------------------------------------------
 <summary>
   Gets the name of the connection as defined in TNSNames.Ora
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.Host">
 -----------------------------------------------------------------------------
 <summary>
   Gets the name of the host (server) for this connection
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.SetHost(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Sets the host (server) to use for this connection
 </summary>
	<param name="value"></param>
	<remarks>
   Note that if DataSource has been specified in constructure, Host and SID properties are ignored.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/09/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.SID">
 -----------------------------------------------------------------------------
 <summary>
   Gets the SID for this connection
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.SetSID(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Sets the SID (instance name) to use for this connection
 </summary>
	<param name="value"></param>
	<remarks>
   Note that if DataSource has been specified in constructure, Host and SID properties are ignored.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/09/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.UserName">
 -----------------------------------------------------------------------------
 <summary>
   Gets the user name in use for this connection
 </summary>
	<value></value>
	<remarks>
   Defaults to name of SID, unless specified by setting the property first
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.Password">
 -----------------------------------------------------------------------------
 <summary>
   Gets the password to use for this connection
 </summary>
	<value></value>
	<remarks>
   Password defaults to SID unless specified using SetPassword
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.Provider">
 -----------------------------------------------------------------------------
 <summary>
   Sets the provider for this connection
 </summary>
	<value></value>
	<remarks>
   Defaults to MSDAORA.1
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.DataSource">
 -----------------------------------------------------------------------------
 <summary>
   Gets the data source name
 </summary>
	<value></value>
	<remarks>
   This is used in the connection string rather than the name so that names
   connections can be created easily.<p/>
   Return value is Host-SID
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.ConnectionString">
 -----------------------------------------------------------------------------
 <summary>
   Gets the connection string to use when making this connection
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Taylor]</Author><date> [19/10/2007]</date><Action>Made compliant with returning datasets</Action></revision>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.ServerPath">
 -----------------------------------------------------------------------------
 <summary>
   Gets the network path to the host for this connection
 </summary>
	<value></value>
	<remarks>
   Path is assumed to be \\Host\SID<p/>
   Where DataSource has been specified rather than Host and SMID, Nothing is returned.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.SetActive">
 -----------------------------------------------------------------------------
 <summary>
   Mekes this connection the active one
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/09/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.Collection.Connections">
 -----------------------------------------------------------------------------
 <summary>
   Gets the global list of available Oracle connections
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.Collection.GetHomes">
 -----------------------------------------------------------------------------
 <summary>
   Finds a list of all available oracle paths from the registry
 </summary>
	<remarks>
   The TNSNames.Ora file for each path is passed and connections added to the
   public shared collection accessible through the Connections property
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.Collection.ParseFile(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Parses a TNSNames.Ora file and creates MedConnection objects for each connection
 </summary>
	<param name="path"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [07/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.MedConnection.Collection.MatchingItem(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Returns the connection with the matching fullName
 </summary>
	<param name="fullName"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [08/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.MedConnection.Collection.Item(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Returns the connection with the matching Fullname or Name
 </summary>
	<param name="connectionName"></param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [08/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedConnection.Collection">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : OracleInstances.MedConnection.Collection
 
 -----------------------------------------------------------------------------
 <summary>
   Collection of oracle connections
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [03/08/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.MedConnection">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : MedConnection
 
 -----------------------------------------------------------------------------
 <summary>
   Holds information about a database connection
 </summary>
	<remarks>
   Once initialised, connection information cannot be changed.  This ensures
   that the shared Instance property always returns the active connection and
   that the connection details have not been altered.<p/>
   For connections not automatically picked up from TNSNames.Ora files, new
   MedConnection objects may be created to add to the Connections collection.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [28/09/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SysUtils.SysUtils.PlaySoundFile(System.String,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
   Plays the specified sound file
 </summary>
	<param name="filename">Name of file to play</param>
	<param name="async">True to play sound in background</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SysUtils.SysUtils.PlaySoundRes(System.String,System.Int32,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
   Plays the sound from the specified resource
 </summary>
	<param name="resName">Name of resource to play</param>
	<param name="appHandle">Handle to application owning resource</param>
	<param name="async">True to play sound in background</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.SysUtils.SysUtils.SYSTEMTIME">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Struct	 : SysUtils.SysUtils.SYSTEMTIME
 
 -----------------------------------------------------------------------------
 <summary>
   System time structure used to pass to SetLocalTime etc
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SysUtils.SysUtils.SetLocalTime(MedscreenLib.SysUtils.SysUtils.SYSTEMTIME@)">
 -----------------------------------------------------------------------------
 <summary>
   Declaration or kernel32 SetLocalTime function
 </summary>
	<param name="time"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.SysUtils.SysUtils.SetSystemDate(System.DateTime)">
 -----------------------------------------------------------------------------
 <summary>
   Sets the system (local) time to the specified value
 </summary>
	<param name="newDate"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.Common.IDValuePair">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Struct	 : Common.IDValuePair
 
 -----------------------------------------------------------------------------
 <summary>
   Structure for containing key - value pairs.
 </summary>
	<remarks>
   This differs from the inbuild classes in that the ToString method returns the value
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.Common.ApplicationName">
 -----------------------------------------------------------------------------
 <summary>
   Returns the name of the entry (start) application 
 </summary>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Common.ApplyDiscount(System.Single,System.Single)">
 -----------------------------------------------------------------------------
 <summary>
   Applies the specified discound to the specified price
 </summary>
	<param name="Price">Price to be discounted</param>
	<param name="DiscountPercent">Percentage discount to apply</param>
	<returns>The new price</returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Common.IsBlank(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Gets a value indicating whether an item is null, or only contains spaces
 </summary>
	<param name="Value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Common.CheckEquality(System.String,System.IComparable,System.IComparable)">
	<summary>
   Compares two values based on an equality operator
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
</member><member name="M:MedscreenLib.Common.IsAllDigits(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether all characters in string are digits (0-9)
 </summary>
	<param name="text"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [13/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Common.IsAlphabetic(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Indicates whether all characters in string are alphabetic (A-Z, a-z)
 </summary>
	<param name="text"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [13/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Common.IsNonAlphabetic(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Returns True if none of the characters are alphabetic
 </summary>
	<param name="text"></param>
	<returns></returns>
	<remarks>
   This is NOT the same as <code>Not IsAlphabetic(text)</code>.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [13/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Common.ExtractStringSection(System.String,System.Int32,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Extract a portion of a string between start and end characters
 </summary>
	<param name="expression"></param>
	<param name="startPos"></param>
	<param name="startWith"></param>
	<param name="endWith"></param>
	<returns></returns>
	<remarks>
 If starWith or endWith are blank, double quotes will be assumed.<p/>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [25/05/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Common.EnumToString(System.Enum)">
 -----------------------------------------------------------------------------
 <summary>
   Calls FormatTypeString for an enumeration member
 </summary>
	<param name="enumMember"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [06/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.Common.FormatTypeName(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Formats a type name for display
 </summary>
	<param name="typeName"></param>
	<returns></returns>
	<remarks>
   Intended for formatting Enumeration members, each new word (starting with
   a number or capital letter) is preceded by a space.  Underscores are also
   converted to spaces.
   <example>This example show the output for a daft enumeration
   <code>
   Private Enum TestString
     MyABCTest = 1
     Testing = 2
     JustMe = 4
     Life_And_Soul = 8
     Entry1 = 16
     Entry10 = 32
     List1Type = 64
     List10Type = 128
   End Enum
 
   Private Sub TestEnumFormatting
     Dim temp As TestString
     For Each temp In [Enum].GetValues(GetType(TestString))
       Console.WriteLine(temp.ToString &amp; " = " &amp; FormatTypeName(temp.ToString))
     Next
     temp = TestString.Entry10 Or TestString.JustMe Or TestString.MyABCTest
     Console.WriteLine(temp.ToString &amp; " = " &amp; FormatTypeName(temp.ToString))
   End Sub
 
   </code>
   The result is:
   <code>
   MyABCTest = My ABC Test
   Testing = Testing
   JustMe = Just Me
   Life_And_Soul = Life And Soul
   Entry1 = Entry 1
   Entry10 = Entry 10
   List1Type = List 1 Type
   List10Type = List 10 Type
   MyABCTest, JustMe, Entry10 = My ABC Test, Just Me, Entry 10
   </code>
		</example>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [06/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.QuickLists.QuickLists.GetCountryList">
 -----------------------------------------------------------------------------
 <summary>
   Gets a list of counties as IDValuePairs of CountryID and Country Name
 </summary>
	<returns></returns>
	<remarks>
   The methods in this module are intended for backward compatibility with older
   .NET applications.  Most now have classes that can be used for retieving the required information.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.QuickLists.QuickLists.GetPortList">
 -----------------------------------------------------------------------------
 <summary>
   Gets a list of ports as IDValuePairs of Identity and Site_Name
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.QuickLists.QuickLists.GetVesselList">
 -----------------------------------------------------------------------------
 <summary>
   Gets a list of vessels as IDValuePairs of Vessel_ID and Name
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.QuickLists.QuickLists.GetRegionList">
 -----------------------------------------------------------------------------
 <summary>
   Gets a (string) list of Regions from the Country table
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.QuickLists.QuickLists.GetItemGroupList">
 -----------------------------------------------------------------------------
 <summary>
   Gets a list of Line Item Groups as IDValuePairs of GroupID and Description
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.QuickLists.QuickLists.GetItemTypeList">
 -----------------------------------------------------------------------------
 <summary>
   Get a list of Line Item Types as strings
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.QuickLists.QuickLists.GetItemCodeList">
 -----------------------------------------------------------------------------
 <summary>
   Gets a list of Line Items as IDValuePairs of ItemCode and Description
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.QuickLists.QuickLists.GetPhraseEntries(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the prase entries as IDValuePairs of Phrase_ID and Phrase_Text for the given phrase
 </summary>
	<param name="PhraseID"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.QuickLists.QuickLists">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : QuickLists.QuickLists
 
 -----------------------------------------------------------------------------
 <summary>
   Contins methods for retrieving summary information from the database
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [29/11/2005]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.IndexedCollectionBase.Indexes">
 -----------------------------------------------------------------------------
 <summary>
   Gets the collection of indexes defined for this collection
 </summary>
	<value></value>
	<remarks>
   Each index relates to a property for the objects in the collection
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.BaseAdd(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Adds the specified object to the collection
 </summary>
	<param name="value"></param>
	<remarks>
   All indexes are automatically populated with appropriate values taken from the object.
   The object must have properties to match the name of each defined for this collection.
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.BaseAddUnindexed(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Adds the specified object to the collection, without updating indexes
 </summary>
	<param name="value"></param>
	<remarks>
   This is useful where the object is new and does not have it's details populated.<p/>
   Note that calling ReIndex <b>will</b> update the index values for this object and so
   should not be called until the object has been initialised.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [04/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.BaseRemove(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Removes the specified object from the collection
 </summary>
	<param name="value"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.BaseRemove(System.String,System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Removes the object with the specified key in the specified index
 </summary>
	<param name="indexName"></param>
	<param name="key"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.OnInsertComplete(System.Int32,System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Creates index references to object when object inserted
 </summary>
	<param name="index"></param>
	<param name="value"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.OnRemoveComplete(System.Int32,System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Removes index references to object when object removed
 </summary>
	<param name="index"></param>
	<param name="value"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.OnClearComplete">
 -----------------------------------------------------------------------------
 <summary>
   Clears all indexes when collection is cleared
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Updates indexes when object changed
 </summary>
	<param name="index"></param>
	<param name="oldValue"></param>
	<param name="newValue"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.InsertIndexValue(System.Object,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a value in all indexes for the specified object
 </summary>
	<param name="value">The object being added to the collection</param>
	<param name="index">The index of the object in the collection</param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.RemoveIndexValue(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Removes the references to the passed object from all indexes
 </summary>
	<param name="value"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.IndexOf(System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Returns the position of the object within the collection
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [21/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.IndexedCollectionBase.Item(System.String,System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the item with the specified key in the specified index
 </summary>
	<param name="indexName"></param>
	<param name="key"></param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.BaseReIndex(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Rebuilds the values in the specified index
 </summary>
	<param name="indexName"></param>
	<remarks>
   Useful if index added after collection has been populated, or object added
   using AddUnindexed.
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.Subset(System.String,System.Object)">
 -----------------------------------------------------------------------------
 <summary>
   Returns a subset of the collection where the property matches the specified value
 </summary>
	<param name="propertyName"></param>
	<param name="value"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [04/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.DistinctValues(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Returns an array of the distinct values for the specified property
 </summary>
	<param name="propertyName"></param>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [04/12/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.Index.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Creates a collection index
 </summary>
	<param name="indexName"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.IndexedCollectionBase.Index.IndexName">
 -----------------------------------------------------------------------------
 <summary>
   Gets the name of this index
 </summary>
	<value></value>
	<remarks>
   This is also the name of the property that will provide the key values for this index
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.Index.Collection.Add(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Adds a new index to the collection
 </summary>
	<param name="indexName"></param>
	<remarks>
   The indexName must match a property defined on all objects within the
   IndexedCollection.  The index is NOT automatically populated with values 
   for objects already in the collection.  Call ReIndex on the IndexedCollection, 
   passing in this index name to achieve this.
 </remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.Index.Collection.Remove(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Removes the specified index from the collection
 </summary>
	<param name="indexName"></param>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="P:MedscreenLib.IndexedCollectionBase.Index.Collection.Item(System.String)">
 -----------------------------------------------------------------------------
 <summary>
   Gets the CollectionIndex with the specified index name
 </summary>
	<param name="indexName"></param>
	<value></value>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="M:MedscreenLib.IndexedCollectionBase.Index.Collection.GetEnumerator">
 -----------------------------------------------------------------------------
 <summary>
   Enumerates through all indexes in the collection
 </summary>
	<returns></returns>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.IndexedCollectionBase.Index.Collection">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : IndexedCollection.Index.Collection
 
 -----------------------------------------------------------------------------
 <summary>
   Holds a collection of indexes for an IndexedCollection
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.IndexedCollectionBase.Index">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : IndexedCollection.Index
 
 -----------------------------------------------------------------------------
 <summary>
   A single index for an IndexedCollection
 </summary>
	<remarks>
	</remarks>
	<revisionHistory>
		<revision><Author>[BOUGHTON]</Author><date> [27/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member><member name="T:MedscreenLib.IndexedCollectionBase">
 -----------------------------------------------------------------------------
 Project	 : MedscreenLib
 Class	 : IndexedCollection
 
 -----------------------------------------------------------------------------
 <summary>
   An unsorted collection, accessible by index key or position
 </summary>
	<remarks>
   Each index contains unique values that reference only one item in the collection.
   Each group may reference more than one item in the collection.
 </remarks>
	<revisionHistory>
		<revision><Author>[Boughton]</Author><date> [24/11/2006]</date><Action></Action></revision>
	</revisionHistory>
 -----------------------------------------------------------------------------

</member>
</members>
</doc>